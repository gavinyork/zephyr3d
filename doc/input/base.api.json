{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.36.4",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "projectFolderUrl": "http://localhost:3000/#/doc/markdown",
  "kind": "Package",
  "canonicalReference": "@zephyr3d/base!",
  "docComment": "",
  "name": "@zephyr3d/base",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@zephyr3d/base!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Class",
          "canonicalReference": "@zephyr3d/base!AABB:class",
          "docComment": "/**\n * Axis aligned bounding box\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class AABB "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "AABB",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!AABB:constructor(1)",
              "docComment": "/**\n * Construct an AABB with zero size at zero point.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": []
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!AABB:constructor(2)",
              "docComment": "/**\n * Construct an AABB by copying from another AABB.\n *\n * @param box - The AABB to be copied from.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(box: "
                },
                {
                  "kind": "Reference",
                  "text": "AABB",
                  "canonicalReference": "@zephyr3d/base!AABB:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "box",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!AABB:constructor(3)",
              "docComment": "/**\n * Construct AABB from the min/max point.\n *\n * @param minPoint - The min point of the AABB.\n *\n * @param maxPoint - The max point of the AABB.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(minPoint: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", maxPoint: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "minPoint",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "maxPoint",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!AABB#beginExtend:member(1)",
              "docComment": "/**\n * Invalidate the min/max point so that we can start extending the AABB.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "beginExtend(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "beginExtend"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!AABB#behindPlane:member(1)",
              "docComment": "/**\n * Check if the box is behind a plane.\n *\n * @param p - The plane to be tested.\n *\n * @returns true if the box is behind the plane, otherwise false.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "behindPlane(p: "
                },
                {
                  "kind": "Reference",
                  "text": "Plane",
                  "canonicalReference": "@zephyr3d/base!Plane:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "p",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "behindPlane"
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!AABB#center:member",
              "docComment": "/**\n * Get center point of the AABB.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get center(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "center",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!AABB.ClipBack:member",
              "docComment": "/**\n * Clip to the back side\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly ClipBack: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ClipBack",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!AABB.ClipBottom:member",
              "docComment": "/**\n * Clip to the bottom side\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly ClipBottom: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ClipBottom",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!AABB.ClipFront:member",
              "docComment": "/**\n * Clip to the front side\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly ClipFront: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ClipFront",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!AABB.ClipLeft:member",
              "docComment": "/**\n * Clip to the left side\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly ClipLeft: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ClipLeft",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!AABB.ClipRight:member",
              "docComment": "/**\n * Clip to the right side\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly ClipRight: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ClipRight",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!AABB.ClipTop:member",
              "docComment": "/**\n * Clip to the top side\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly ClipTop: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ClipTop",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!AABB#computePoints:member(1)",
              "docComment": "/**\n * Calculate the coordinates of the eight corners of the AABB.\n *\n * @returns the coordinates of the eight corners of the AABB.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "computePoints(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "computePoints"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!AABB#containsBox:member(1)",
              "docComment": "/**\n * Check if the AABB contains all of the eight corner point of another AABB\n *\n * @param other - The AABB to be checked.\n *\n * @returns true if all contains, otherwise false.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "containsBox(other: "
                },
                {
                  "kind": "Reference",
                  "text": "AABB",
                  "canonicalReference": "@zephyr3d/base!AABB:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "containsBox"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!AABB#containsPoint:member(1)",
              "docComment": "/**\n * Check if the box contains specified point.\n *\n * @param pt - The point to be checked.\n *\n * @returns true if the box contains the point, otherwise false.s\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "containsPoint(pt: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pt",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "containsPoint"
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!AABB#diagonalLength:member",
              "docComment": "/**\n * Get the diagonal length of the AABB.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get diagonalLength(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "diagonalLength",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!AABB#equalsTo:member(1)",
              "docComment": "/**\n * Check if the AABB is close enough to another AABB.\n *\n * @param other - The AABB to be compared with.\n *\n * @param epsl - The epsilon for comparison.\n *\n * @returns true if the comparison error is less than epsl, otherwise false.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "equalsTo(other: "
                },
                {
                  "kind": "Reference",
                  "text": "AABB",
                  "canonicalReference": "@zephyr3d/base!AABB:class"
                },
                {
                  "kind": "Content",
                  "text": ", epsl?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "epsl",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "equalsTo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!AABB#extend:member(1)",
              "docComment": "/**\n * Extend the AABB so that it can contain specified point.\n *\n * @param v - The point used to extend the AABB.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "extend(v: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "v",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "extend"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!AABB#extend3:member(1)",
              "docComment": "/**\n * Extend the AABB so that it can contain specified point.\n *\n * @param x - The x coordinate of the point.\n *\n * @param y - The y coordinate of the point.\n *\n * @param z - The z coordinate of the point.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "extend3(x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", z: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "z",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "extend3"
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!AABB#extents:member",
              "docComment": "/**\n * Get half size of the AABB.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get extents(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "extents",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!AABB#getClipState:member(1)",
              "docComment": "/**\n * Do a clip test at the AABB and a frustum.\n *\n * @param viewProjMatrix - The view projection matrix of the frustum.\n *\n * @returns The clip test result.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getClipState(viewProjMatrix: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ClipState",
                  "canonicalReference": "@zephyr3d/base!ClipState:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "viewProjMatrix",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getClipState"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!AABB#getClipStateMask:member(1)",
              "docComment": "/**\n * Do a clip test at the AABB and a frustum.\n *\n * @param viewProjMatrix - The view projection matrix of the frustum.\n *\n * @param mask - The frustum planes that needs to be tested.\n *\n * @returns The clip test result.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getClipStateMask(viewProjMatrix: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ", mask: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ClipState",
                  "canonicalReference": "@zephyr3d/base!ClipState:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "viewProjMatrix",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "mask",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getClipStateMask"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!AABB#getClipStateWithFrustum:member(1)",
              "docComment": "/**\n * Do a clip test at the AABB and a frustum.\n *\n * @param frustum - The frustum object.\n *\n * @returns The clip test result.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getClipStateWithFrustum(frustum: "
                },
                {
                  "kind": "Reference",
                  "text": "Frustum",
                  "canonicalReference": "@zephyr3d/base!Frustum:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ClipState",
                  "canonicalReference": "@zephyr3d/base!ClipState:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "frustum",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getClipStateWithFrustum"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!AABB#getClipStateWithFrustumMask:member(1)",
              "docComment": "/**\n * Do a clip test at the AABB and a frustum.\n *\n * @param frustum - The frustum object.\n *\n * @param mask - The frustum planes that needs to be tested.\n *\n * @returns The clip test result.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getClipStateWithFrustumMask(frustum: "
                },
                {
                  "kind": "Reference",
                  "text": "Frustum",
                  "canonicalReference": "@zephyr3d/base!Frustum:class"
                },
                {
                  "kind": "Content",
                  "text": ", mask: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ClipState",
                  "canonicalReference": "@zephyr3d/base!ClipState:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "frustum",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "mask",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getClipStateWithFrustumMask"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!AABB#inplaceTransform:member(1)",
              "docComment": "/**\n * Inplace transform the AABB.\n *\n * @param matrix - The transform matrix.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inplaceTransform(matrix: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AABB",
                  "canonicalReference": "@zephyr3d/base!AABB:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "matrix",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "inplaceTransform"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!AABB#intersectedWithBox:member(1)",
              "docComment": "/**\n * Check if the AABB intersects with another AABB.\n *\n * @param other - The destination AABB.\n *\n * @returns true if the AABB intersects with other, otherwise false.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "intersectedWithBox(other: "
                },
                {
                  "kind": "Reference",
                  "text": "AABB",
                  "canonicalReference": "@zephyr3d/base!AABB:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "intersectedWithBox"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!AABB#isValid:member(1)",
              "docComment": "/**\n * Check if the AABB is valid.\n *\n * @returns true if the AABB is valid, otherwise false.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isValid(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "isValid"
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!AABB#maxPoint:member",
              "docComment": "/**\n * Get the max point of the AABB.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get maxPoint(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset maxPoint(p: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "maxPoint",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!AABB#minPoint:member",
              "docComment": "/**\n * Get the min point of the AABB.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get minPoint(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset minPoint(p: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "minPoint",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!AABB#size:member",
              "docComment": "/**\n * Get size of the AABB.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get size(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "size",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!AABB.transform:member(1)",
              "docComment": "/**\n * Get an AABB by transforming another AABB\n *\n * @param bbox - The AABB to be transformed.\n *\n * @param matrix - The transform matrix.\n *\n * @param result - The out AABB to be write to.\n *\n * @returns The out AABB.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static transform(bbox: "
                },
                {
                  "kind": "Reference",
                  "text": "AABB",
                  "canonicalReference": "@zephyr3d/base!AABB:class"
                },
                {
                  "kind": "Content",
                  "text": ", matrix: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "AABB",
                  "canonicalReference": "@zephyr3d/base!AABB:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AABB",
                  "canonicalReference": "@zephyr3d/base!AABB:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "bbox",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "matrix",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "transform"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!AABB#union:member(1)",
              "docComment": "/**\n * Merge the AABB with another AABB.\n *\n * @param other - The AABB to be merged with.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "union(other: "
                },
                {
                  "kind": "Reference",
                  "text": "AABB",
                  "canonicalReference": "@zephyr3d/base!AABB:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "union"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@zephyr3d/base!applyMixins:function(1)",
          "docComment": "/**\n * Applies mixins to a constructor function.\n *\n * @param target - The constructor function of the class that will receive the mixins.\n *\n * @param mixins - mixins\n *\n * @returns Mixed class\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function applyMixins<M extends "
            },
            {
              "kind": "Content",
              "text": "((target: any) => any)[]"
            },
            {
              "kind": "Content",
              "text": ", T>(target: "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ", ...mixins: "
            },
            {
              "kind": "Content",
              "text": "M"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T & "
            },
            {
              "kind": "Reference",
              "text": "ExtractMixinType",
              "canonicalReference": "@zephyr3d/base!ExtractMixinType:type"
            },
            {
              "kind": "Content",
              "text": "<M>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "target",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "mixins",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "applyMixins"
        },
        {
          "kind": "Enum",
          "canonicalReference": "@zephyr3d/base!BoxSide:enum",
          "docComment": "/**\n * Enumerator used to refer to a box side\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare enum BoxSide "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "BoxSide",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@zephyr3d/base!BoxSide.BACK:member",
              "docComment": "/**\n * Back side (-z)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "BACK = "
                },
                {
                  "kind": "Content",
                  "text": "5"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "BACK"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@zephyr3d/base!BoxSide.BOTTOM:member",
              "docComment": "/**\n * Bottom side (-y)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "BOTTOM = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "BOTTOM"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@zephyr3d/base!BoxSide.FRONT:member",
              "docComment": "/**\n * Front side (+z)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "FRONT = "
                },
                {
                  "kind": "Content",
                  "text": "4"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "FRONT"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@zephyr3d/base!BoxSide.LEFT:member",
              "docComment": "/**\n * Left side (-x)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "LEFT = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "LEFT"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@zephyr3d/base!BoxSide.RIGHT:member",
              "docComment": "/**\n * Right side (+x)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "RIGHT = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "RIGHT"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@zephyr3d/base!BoxSide.TOP:member",
              "docComment": "/**\n * Top side (+y)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TOP = "
                },
                {
                  "kind": "Content",
                  "text": "3"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "TOP"
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "@zephyr3d/base!ClipState:enum",
          "docComment": "/**\n * The intersection test result of two object A and B\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare enum ClipState "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "ClipState",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@zephyr3d/base!ClipState.A_INSIDE_B:member",
              "docComment": "/**\n * A is inside B\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "A_INSIDE_B = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "A_INSIDE_B"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@zephyr3d/base!ClipState.B_INSIDE_A:member",
              "docComment": "/**\n * B is inside A\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "B_INSIDE_A = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "B_INSIDE_A"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@zephyr3d/base!ClipState.CLIPPED:member",
              "docComment": "/**\n * A and B partially overlap\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CLIPPED = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "CLIPPED"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@zephyr3d/base!ClipState.NOT_CLIPPED:member",
              "docComment": "/**\n * A does not intersect with B\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "NOT_CLIPPED = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "NOT_CLIPPED"
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@zephyr3d/base!ColorRGBA:interface",
          "docComment": "/**\n * RGBA color type\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface ColorRGBA "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "ColorRGBA",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@zephyr3d/base!ColorRGBA#a:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "a: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "a",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@zephyr3d/base!ColorRGBA#b:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "b: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "b",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@zephyr3d/base!ColorRGBA#g:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "g: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "g",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@zephyr3d/base!ColorRGBA#r:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "r: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "r",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "@zephyr3d/base!CubeFace:enum",
          "docComment": "/**\n * Enumerator used to refer to the cube face\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare enum CubeFace "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "CubeFace",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@zephyr3d/base!CubeFace.NX:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "NX = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "NX"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@zephyr3d/base!CubeFace.NY:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "NY = "
                },
                {
                  "kind": "Content",
                  "text": "3"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "NY"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@zephyr3d/base!CubeFace.NZ:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "NZ = "
                },
                {
                  "kind": "Content",
                  "text": "5"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "NZ"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@zephyr3d/base!CubeFace.PX:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PX = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "PX"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@zephyr3d/base!CubeFace.PY:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PY = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "PY"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@zephyr3d/base!CubeFace.PZ:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PZ = "
                },
                {
                  "kind": "Content",
                  "text": "4"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "PZ"
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@zephyr3d/base!EventListener_2:type",
          "docComment": "/**\n * Event handler type\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type EventListener<T extends "
            },
            {
              "kind": "Reference",
              "text": "EventMap",
              "canonicalReference": "@zephyr3d/base!EventMap:type"
            },
            {
              "kind": "Content",
              "text": ", K extends "
            },
            {
              "kind": "Content",
              "text": "keyof T"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(evt: T[K]) => void | "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "EventListener_2",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "K",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 5,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@zephyr3d/base!EventMap:type",
          "docComment": "/**\n * Mapping table of event types and their constructors\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type EventMap = "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "EventMap",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@zephyr3d/base!EventType:type",
          "docComment": "/**\n * Get the constructor type bye event type\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type EventType<T extends "
            },
            {
              "kind": "Reference",
              "text": "EventMap",
              "canonicalReference": "@zephyr3d/base!EventMap:type"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "T[keyof T]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "EventType",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@zephyr3d/base!ExtractMixinReturnType:type",
          "docComment": "/**\n * Extract mixin return type\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type ExtractMixinReturnType<M> = "
            },
            {
              "kind": "Content",
              "text": "M extends (target: infer A) => infer R ? R : never"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "ExtractMixinReturnType",
          "typeParameters": [
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@zephyr3d/base!ExtractMixinType:type",
          "docComment": "/**\n * Extract mixin type\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type ExtractMixinType<M> = "
            },
            {
              "kind": "Content",
              "text": "M extends [infer First] ? "
            },
            {
              "kind": "Reference",
              "text": "ExtractMixinReturnType",
              "canonicalReference": "@zephyr3d/base!ExtractMixinReturnType:type"
            },
            {
              "kind": "Content",
              "text": "<First> : M extends [infer First, ...infer Rest] ? "
            },
            {
              "kind": "Reference",
              "text": "ExtractMixinReturnType",
              "canonicalReference": "@zephyr3d/base!ExtractMixinReturnType:type"
            },
            {
              "kind": "Content",
              "text": "<First> & "
            },
            {
              "kind": "Reference",
              "text": "ExtractMixinType",
              "canonicalReference": "@zephyr3d/base!ExtractMixinType:type"
            },
            {
              "kind": "Content",
              "text": "<[...Rest]> : never"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "ExtractMixinType",
          "typeParameters": [
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@zephyr3d/base!floatToHalf:function(1)",
          "docComment": "/**\n * Converts float value to half float\n *\n * @param val - The float value to be converted.\n *\n * @returns A 16-bits integer presents the half float value\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function floatToHalf(val: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "val",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "floatToHalf"
        },
        {
          "kind": "Class",
          "canonicalReference": "@zephyr3d/base!Frustum:class",
          "docComment": "/**\n * The frustum class\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class Frustum "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Frustum",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Frustum:constructor(1)",
              "docComment": "/**\n * Creates a frustum from the tranform matrix.\n *\n * @param transform - The transform matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(transform: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "transform",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Frustum:constructor(2)",
              "docComment": "/**\n * Creates a frustum initialized with an existing frustum.\n *\n * @param other - The frustum to copy from.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Frustum",
                  "canonicalReference": "@zephyr3d/base!Frustum:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Frustum#containsPoint:member(1)",
              "docComment": "/**\n * Tests if a point is inside the frustum.\n *\n * @param pt - The point to test.\n *\n * @returns true if the point is inside the frustum, otherwise false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "containsPoint(pt: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", epsl?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pt",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "epsl",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "containsPoint"
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Frustum.CORNER_LEFT_BOTTOM_FAR:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly CORNER_LEFT_BOTTOM_FAR = "
                },
                {
                  "kind": "Content",
                  "text": "3"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "CORNER_LEFT_BOTTOM_FAR",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Frustum.CORNER_LEFT_BOTTOM_NEAR:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly CORNER_LEFT_BOTTOM_NEAR = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "CORNER_LEFT_BOTTOM_NEAR",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Frustum.CORNER_LEFT_TOP_FAR:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly CORNER_LEFT_TOP_FAR = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "CORNER_LEFT_TOP_FAR",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Frustum.CORNER_LEFT_TOP_NEAR:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly CORNER_LEFT_TOP_NEAR = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "CORNER_LEFT_TOP_NEAR",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Frustum.CORNER_RIGHT_BOTTOM_FAR:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly CORNER_RIGHT_BOTTOM_FAR = "
                },
                {
                  "kind": "Content",
                  "text": "7"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "CORNER_RIGHT_BOTTOM_FAR",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Frustum.CORNER_RIGHT_BOTTOM_NEAR:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly CORNER_RIGHT_BOTTOM_NEAR = "
                },
                {
                  "kind": "Content",
                  "text": "6"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "CORNER_RIGHT_BOTTOM_NEAR",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Frustum.CORNER_RIGHT_TOP_FAR:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly CORNER_RIGHT_TOP_FAR = "
                },
                {
                  "kind": "Content",
                  "text": "5"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "CORNER_RIGHT_TOP_FAR",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Frustum.CORNER_RIGHT_TOP_NEAR:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly CORNER_RIGHT_TOP_NEAR = "
                },
                {
                  "kind": "Content",
                  "text": "4"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "CORNER_RIGHT_TOP_NEAR",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Frustum#corners:member",
              "docComment": "/**\n * Get the corner points.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get corners(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "corners",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Frustum#getCorner:member(1)",
              "docComment": "/**\n * Get the point of a given corner.\n *\n * @remarks\n *\n * The possible values of argument 'pos' are: <ul> <li>{@link Frustum.CORNER_LEFT_TOP_NEAR}</li> <li>{@link Frustum.CORNER_LEFT_TOP_FAR}</li> <li>{@link Frustum.CORNER_RIGHT_BOTTOM_FAR}</li> <li>{@link Frustum.CORNER_RIGHT_BOTTOM_NEAR}</li> <li>{@link Frustum.CORNER_LEFT_BOTTOM_NEAR}</li> <li>{@link Frustum.CORNER_LEFT_BOTTOM_FAR}</li> <li>{@link Frustum.CORNER_RIGHT_BOTTOM_FAR}</li> <li>{@link Frustum.CORNER_RIGHT_BOTTOM_NEAR}</li> </ul>\n *\n * @param pos - The corner index.\n *\n * @returns The point of given corner\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCorner(pos: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pos",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getCorner"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Frustum#initWithMatrix:member(1)",
              "docComment": "/**\n * Initialize the frustum by given model-view matrix\n *\n * @param transform - Model-view matrix used to initialize the frustum\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initWithMatrix(transform: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "transform",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "initWithMatrix"
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Frustum#planes:member",
              "docComment": "/**\n * Get the frustum planes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get planes(): "
                },
                {
                  "kind": "Reference",
                  "text": "Plane",
                  "canonicalReference": "@zephyr3d/base!Plane:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "planes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@zephyr3d/base!GenericConstructor:type",
          "docComment": "/**\n * A generic constructor type\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type GenericConstructor<T = "
            },
            {
              "kind": "Content",
              "text": "{}"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    new (...args: any[]): T;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "GenericConstructor",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@zephyr3d/base!halfToFloat:function(1)",
          "docComment": "/**\n * Converts half float value to float\n *\n * @param val - A 16-bits integer presents the half float value to be converted.\n *\n * @returns The converted float value\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function halfToFloat(val: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "val",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "halfToFloat"
        },
        {
          "kind": "Class",
          "canonicalReference": "@zephyr3d/base!HttpRequest:class",
          "docComment": "/**\n * Wrapper of a http get request\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class HttpRequest "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "HttpRequest",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!HttpRequest:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `HttpRequest` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": []
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!HttpRequest#crossOrigin:member",
              "docComment": "/**\n * Get the cross origin property\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get crossOrigin(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset crossOrigin(val: string);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "crossOrigin",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!HttpRequest#headers:member",
              "docComment": "/**\n * Get the request headers\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get headers(): "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, string>"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset headers(val: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, string>);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "headers",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!HttpRequest#request:member(1)",
              "docComment": "/**\n * Send a GET request.\n *\n * @param url - The remote URL to fetch.\n *\n * @returns The fetch result.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "request(url: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Response",
                  "canonicalReference": "!Response:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "url",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "request"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!HttpRequest#requestArrayBuffer:member(1)",
              "docComment": "/**\n * Fetch an array buffer from remote.\n *\n * @param url - The remote URL to fetch.\n *\n * @returns The fetch result.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "requestArrayBuffer(url: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ArrayBuffer",
                  "canonicalReference": "!ArrayBuffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "url",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "requestArrayBuffer"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!HttpRequest#requestBlob:member(1)",
              "docComment": "/**\n * Fetch a blob object from remote.\n *\n * @param url - The remote URL to fetch.\n *\n * @returns The fetch result.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "requestBlob(url: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Blob",
                  "canonicalReference": "!Blob:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "url",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "requestBlob"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!HttpRequest#requestText:member(1)",
              "docComment": "/**\n * Fetch a text string from remote.\n *\n * @param url - The remote URL to fetch.\n *\n * @returns The fetch result.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "requestText(url: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "url",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "requestText"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!HttpRequest#resolveURL:member(1)",
              "docComment": "/**\n * Resolves a URL string.\n *\n * @param url - The input url string,\n *\n * @returns The resolved URL string.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "resolveURL(url: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "url",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "resolveURL"
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!HttpRequest#urlResolver:member",
              "docComment": "/**\n * Get the custom URL resolver\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get urlResolver(): "
                },
                {
                  "kind": "Content",
                  "text": "(url: string) => string"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset urlResolver(resolver: (url: string) => string);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "urlResolver",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@zephyr3d/base!IEventTarget:interface",
          "docComment": "/**\n * The event target interface\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface IEventTarget<T extends "
            },
            {
              "kind": "Reference",
              "text": "EventMap",
              "canonicalReference": "@zephyr3d/base!EventMap:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "IEventTarget",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@zephyr3d/base!IEventTarget#dispatchEvent:member(1)",
              "docComment": "/**\n * Synchronously invoke the affected event listeners with an event object\n *\n * @param evt - The event object to be dispatch.\n *\n * @returns false if the event was canceled, otherwise true\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dispatchEvent(evt: "
                },
                {
                  "kind": "Content",
                  "text": "T[keyof T]"
                },
                {
                  "kind": "Content",
                  "text": ", type?: "
                },
                {
                  "kind": "Content",
                  "text": "string & keyof T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "evt",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "name": "dispatchEvent"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@zephyr3d/base!IEventTarget#off:member(1)",
              "docComment": "/**\n * Removes an event listener function previously registered.\n *\n * @param type - The event type for which to remove an event listener\n *\n * @param listener - The callback function to be removed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "off<K extends "
                },
                {
                  "kind": "Content",
                  "text": "keyof T"
                },
                {
                  "kind": "Content",
                  "text": ">(type: "
                },
                {
                  "kind": "Content",
                  "text": "K"
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Reference",
                  "text": "EventListener",
                  "canonicalReference": "@zephyr3d/base!EventListener_2:type"
                },
                {
                  "kind": "Content",
                  "text": "<T, K>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "K",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "off"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@zephyr3d/base!IEventTarget#on:member(1)",
              "docComment": "/**\n * Sets up a function that will be called whenever the specified event is delivered to the target\n *\n * @param type - The event type to listen for\n *\n * @param listener - The callback function\n *\n * @param context - Context object of the listener function\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "on<K extends "
                },
                {
                  "kind": "Content",
                  "text": "keyof T"
                },
                {
                  "kind": "Content",
                  "text": ">(type: "
                },
                {
                  "kind": "Content",
                  "text": "K"
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Reference",
                  "text": "EventListener",
                  "canonicalReference": "@zephyr3d/base!EventListener_2:type"
                },
                {
                  "kind": "Content",
                  "text": "<T, K>"
                },
                {
                  "kind": "Content",
                  "text": ", context?: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "K",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "on"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@zephyr3d/base!IEventTarget#once:member(1)",
              "docComment": "/**\n * Sets up a function that will be called only once when the specified event is delivered to the target\n *\n * @param type - The event type to listen for\n *\n * @param listener - The callback function\n *\n * @param context - Context object of the listener function\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "once<K extends "
                },
                {
                  "kind": "Content",
                  "text": "keyof T"
                },
                {
                  "kind": "Content",
                  "text": ">(type: "
                },
                {
                  "kind": "Content",
                  "text": "K"
                },
                {
                  "kind": "Content",
                  "text": ", listener: "
                },
                {
                  "kind": "Reference",
                  "text": "EventListener",
                  "canonicalReference": "@zephyr3d/base!EventListener_2:type"
                },
                {
                  "kind": "Content",
                  "text": "<T, K>"
                },
                {
                  "kind": "Content",
                  "text": ", context?: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "K",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "once"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@zephyr3d/base!InterpolationMode:type",
          "docComment": "/**\n * The interpolation mode\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type InterpolationMode = "
            },
            {
              "kind": "Content",
              "text": "'unknown' | 'step' | 'linear' | 'cubicspline'"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "InterpolationMode",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@zephyr3d/base!InterpolationTarget:type",
          "docComment": "/**\n * Target of interpolation\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type InterpolationTarget = "
            },
            {
              "kind": "Content",
              "text": "'number' | 'vec2' | 'vec3' | 'vec4' | 'quat'"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "InterpolationTarget",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@zephyr3d/base!Interpolator:class",
          "docComment": "/**\n * The interpolator class\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class Interpolator "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Interpolator",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Interpolator:constructor(1)",
              "docComment": "/**\n * Creates a interpolator instance\n *\n * @param mode - The interpolation mode\n *\n * @param target - The interpolation target\n *\n * @param inputs - Linear time in seconds\n *\n * @param outputs - Vector or scalars representing the properties to be interpolated\n *\n * @param stride - Stride of outputs\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(mode: "
                },
                {
                  "kind": "Reference",
                  "text": "InterpolationMode",
                  "canonicalReference": "@zephyr3d/base!InterpolationMode:type"
                },
                {
                  "kind": "Content",
                  "text": ", target: "
                },
                {
                  "kind": "Reference",
                  "text": "InterpolationTarget",
                  "canonicalReference": "@zephyr3d/base!InterpolationTarget:type"
                },
                {
                  "kind": "Content",
                  "text": ", inputs: "
                },
                {
                  "kind": "Reference",
                  "text": "TypedArray",
                  "canonicalReference": "@zephyr3d/base!TypedArray:type"
                },
                {
                  "kind": "Content",
                  "text": ", outputs: "
                },
                {
                  "kind": "Reference",
                  "text": "TypedArray",
                  "canonicalReference": "@zephyr3d/base!TypedArray:type"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mode",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "target",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "inputs",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "outputs",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Interpolator.getTargetStride:member(1)",
              "docComment": "/**\n * Interpolation target to stride\n *\n * @param target - The interpolation target\n *\n * @returns Stride of the target\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static getTargetStride(target: "
                },
                {
                  "kind": "Reference",
                  "text": "InterpolationTarget",
                  "canonicalReference": "@zephyr3d/base!InterpolationTarget:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "target",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getTargetStride"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Interpolator#interpolate:member(1)",
              "docComment": "/**\n * Calculates the interpolated value at a given time\n *\n * @param t - The time to calcuate interpolation\n *\n * @param maxTime - The maxmium time duration\n *\n * @param result - The calculated interpolation value\n *\n * @returns The calcuated interpolation value\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interpolate(t: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", maxTime: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", result: "
                },
                {
                  "kind": "Reference",
                  "text": "Float32Array",
                  "canonicalReference": "!Float32Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Float32Array",
                  "canonicalReference": "!Float32Array:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "t",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "maxTime",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "interpolate"
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Interpolator#maxTime:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get maxTime(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "maxTime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Interpolator#mode:member",
              "docComment": "/**\n * Gets the interpolation mode\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get mode(): "
                },
                {
                  "kind": "Reference",
                  "text": "InterpolationMode",
                  "canonicalReference": "@zephyr3d/base!InterpolationMode:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Interpolator#target:member",
              "docComment": "/**\n * Gets the interpolation target\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get target(): "
                },
                {
                  "kind": "Reference",
                  "text": "InterpolationTarget",
                  "canonicalReference": "@zephyr3d/base!InterpolationTarget:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "target",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@zephyr3d/base!isPowerOf2:function(1)",
          "docComment": "/**\n * Check if a number is a power of 2.\n *\n * @param value - The number to be checked.\n *\n * @returns true if the number is a power of 2, otherwise false.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function isPowerOf2(value: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "isPowerOf2"
        },
        {
          "kind": "Class",
          "canonicalReference": "@zephyr3d/base!List:class",
          "docComment": "/**\n * The double list class\n *\n * @typeParam T - The data type associated with the linked list class\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class List<T = "
            },
            {
              "kind": "Content",
              "text": "unknown"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "isAbstract": false,
          "name": "List",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!List:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `List` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": []
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!List#append:member(1)",
              "docComment": "/**\n * Append an element to the end of the linked list\n *\n * @param data - The data associated to the element\n *\n * @returns An iterator pointing to the newly added element\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "append(data: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ListIterator",
                  "canonicalReference": "@zephyr3d/base!ListIterator:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "append"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!List#back:member(1)",
              "docComment": "/**\n * Gets the data associated to the last element in the linked list\n *\n * @returns The data associated to the last element in the linked list\n *\n * @throws\n *\n * Error The exception is thrown if the list is empty\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "back(): "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "back"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!List#begin:member(1)",
              "docComment": "/**\n * Returns an iterator pointing to the first element in the list.\n *\n * @returns An iterator to the beginning of the list.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "begin(): "
                },
                {
                  "kind": "Reference",
                  "text": "ListIterator",
                  "canonicalReference": "@zephyr3d/base!ListIterator:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "begin"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!List#clear:member(1)",
              "docComment": "/**\n * Remove all elements in the linked list\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clear(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "clear"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!List#end:member(1)",
              "docComment": "/**\n * Returns an iterator referring to the past-the-end element in the list.\n *\n * @returns An iterator to the element past the end of the list.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "end(): "
                },
                {
                  "kind": "Reference",
                  "text": "ListIterator",
                  "canonicalReference": "@zephyr3d/base!ListIterator:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "end"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!List#forEach:member(1)",
              "docComment": "/**\n * Execute the callback function sequentially for each element of the linked list\n *\n * @param callback - The function to be executed\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forEach(callback: "
                },
                {
                  "kind": "Content",
                  "text": "(data: T) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forEach"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!List#forEachReverse:member(1)",
              "docComment": "/**\n * Execute the callback function sequentially for each element of the linked list in the reversed order\n *\n * @param callback - The function to be executed\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forEachReverse(callback: "
                },
                {
                  "kind": "Content",
                  "text": "(data: T) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forEachReverse"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!List#front:member(1)",
              "docComment": "/**\n * Gets the data associated to the first element in the linked list\n *\n * @returns The data associated to the first element in the linked list\n *\n * @throws\n *\n * Error The exception is thrown if the list is empty\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "front(): "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "front"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!List#insert:member(1)",
              "docComment": "/**\n * Inserts an element into the linked list\n *\n * @param data - The data to be inserted to the list\n *\n * @param at - An iterator pointing to the element at the insert position\n *\n * @returns An iterator pointing to the element that was inserted\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "insert(data: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ", at: "
                },
                {
                  "kind": "Reference",
                  "text": "ListIterator",
                  "canonicalReference": "@zephyr3d/base!ListIterator:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ListIterator",
                  "canonicalReference": "@zephyr3d/base!ListIterator:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "at",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "insert"
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!List#length:member",
              "docComment": "/**\n * Get the number of elements in the linked list\n *\n * @returns The number of elements in the linked list\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get length(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "length",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!List#prepend:member(1)",
              "docComment": "/**\n * Add a new element to the linked list header\n *\n * @param data - The data associated to the element\n *\n * @returns An iterator pointing to the newly added element\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "prepend(data: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ListIterator",
                  "canonicalReference": "@zephyr3d/base!ListIterator:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "prepend"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!List#rbegin:member(1)",
              "docComment": "/**\n * Returns a reverse iterator pointing to the last element in the list (i.e., its reverse beginning).\n *\n * @returns A reverse iterator to the reverse beginning of the list.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rbegin(): "
                },
                {
                  "kind": "Reference",
                  "text": "ListIterator",
                  "canonicalReference": "@zephyr3d/base!ListIterator:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "rbegin"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!List#remove:member(1)",
              "docComment": "/**\n * Deletes an element from the linked list\n *\n * @param it - An iterator pointing to the element that needs to be removed\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "remove(it: "
                },
                {
                  "kind": "Reference",
                  "text": "ListIterator",
                  "canonicalReference": "@zephyr3d/base!ListIterator:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "it",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "remove"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!List#rend:member(1)",
              "docComment": "/**\n * Returns a reverse iterator pointing to the theoretical element preceding the first element in the list (which is considered its reverse end).\n *\n * @returns A reverse iterator to the reverse end of the list.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rend(): "
                },
                {
                  "kind": "Reference",
                  "text": "ListIterator",
                  "canonicalReference": "@zephyr3d/base!ListIterator:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "rend"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@zephyr3d/base!ListIterator:class",
          "docComment": "/**\n * The list iterator class\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class ListIterator<T = "
            },
            {
              "kind": "Content",
              "text": "unknown"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "isAbstract": false,
          "name": "ListIterator",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!ListIterator#data:member",
              "docComment": "/**\n * Gets the data associated with the iterator\n *\n * @throws\n *\n * Error The exception is thrown if the iterator is invalid\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get data(): "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset data(val: T);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!ListIterator#getNext:member(1)",
              "docComment": "/**\n * Get a new iterator pointing to the next list node\n *\n * @returns the new iterator\n *\n * @throws\n *\n * Error The exception is thrown if the iterator is not valid\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getNext(): "
                },
                {
                  "kind": "Reference",
                  "text": "ListIterator",
                  "canonicalReference": "@zephyr3d/base!ListIterator:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getNext"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!ListIterator#getPrev:member(1)",
              "docComment": "/**\n * Get a new iterator pointing to the previous list node\n *\n * @returns the new iterator\n *\n * @throws\n *\n * Error The exception is thrown if the iterator is not valid\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getPrev(): "
                },
                {
                  "kind": "Reference",
                  "text": "ListIterator",
                  "canonicalReference": "@zephyr3d/base!ListIterator:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getPrev"
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!ListIterator#list:member",
              "docComment": "/**\n * Returns the list object to which the iterator belongs.\n *\n * @returns The list object to which the iterator belongs.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get list(): "
                },
                {
                  "kind": "Reference",
                  "text": "List",
                  "canonicalReference": "@zephyr3d/base!List:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "list",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!ListIterator#next:member(1)",
              "docComment": "/**\n * Let the iterator point to the next list node\n *\n * @returns self\n *\n * @throws\n *\n * Error The exception is thrown if the iterator is not valid\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "next(): "
                },
                {
                  "kind": "Reference",
                  "text": "ListIterator",
                  "canonicalReference": "@zephyr3d/base!ListIterator:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "next"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!ListIterator#prev:member(1)",
              "docComment": "/**\n * Let the iterator point to the previous list node\n *\n * @returns self\n *\n * @throws\n *\n * Error The exception is thrown if the iterator is not valid\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "prev(): "
                },
                {
                  "kind": "Reference",
                  "text": "ListIterator",
                  "canonicalReference": "@zephyr3d/base!ListIterator:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "prev"
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!ListIterator#reversed:member",
              "docComment": "/**\n * Returns whether the iterator is reversed.\n *\n * @returns true if the iterator is reversed, otherwise false\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get reversed(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "reversed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!ListIterator#valid:member(1)",
              "docComment": "/**\n * Check that the iterator points to a valid list node\n *\n * @returns true if the iterator points to a valid list node, otherwise false\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "valid(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "valid"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@zephyr3d/base!makeEventTarget:function(1)",
          "docComment": "/**\n * This mixin make a class an event target\n *\n * @param cls - the class to make\n *\n * @returns - The event target class\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function makeEventTarget<C extends "
            },
            {
              "kind": "Reference",
              "text": "GenericConstructor",
              "canonicalReference": "@zephyr3d/base!GenericConstructor:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ObjectConstructor",
              "canonicalReference": "!ObjectConstructor:interface"
            },
            {
              "kind": "Content",
              "text": ">(cls: "
            },
            {
              "kind": "Content",
              "text": "C"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "<X extends "
            },
            {
              "kind": "Reference",
              "text": "EventMap",
              "canonicalReference": "@zephyr3d/base!EventMap:type"
            },
            {
              "kind": "Content",
              "text": ">() => {\n    new (...args: any[]): {\n        _listeners: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<{\n            [type: string]: {\n                handler: "
            },
            {
              "kind": "Reference",
              "text": "EventListener",
              "canonicalReference": "@zephyr3d/base!EventListener_2:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "InstanceType",
              "canonicalReference": "!InstanceType:type"
            },
            {
              "kind": "Content",
              "text": "<C> extends "
            },
            {
              "kind": "Reference",
              "text": "IEventTarget",
              "canonicalReference": "@zephyr3d/base!IEventTarget:interface"
            },
            {
              "kind": "Content",
              "text": "<infer U extends "
            },
            {
              "kind": "Reference",
              "text": "EventMap",
              "canonicalReference": "@zephyr3d/base!EventMap:type"
            },
            {
              "kind": "Content",
              "text": "> ? X & U : X, any>;\n                options: "
            },
            {
              "kind": "Reference",
              "text": "REventHandlerOptions",
              "canonicalReference": "@zephyr3d/base!REventHandlerOptions:type"
            },
            {
              "kind": "Content",
              "text": ";\n                removed: boolean;\n            }[];\n        }>;\n        on<K extends keyof ("
            },
            {
              "kind": "Reference",
              "text": "InstanceType",
              "canonicalReference": "!InstanceType:type"
            },
            {
              "kind": "Content",
              "text": "<C> extends "
            },
            {
              "kind": "Reference",
              "text": "IEventTarget",
              "canonicalReference": "@zephyr3d/base!IEventTarget:interface"
            },
            {
              "kind": "Content",
              "text": "<infer U extends "
            },
            {
              "kind": "Reference",
              "text": "EventMap",
              "canonicalReference": "@zephyr3d/base!EventMap:type"
            },
            {
              "kind": "Content",
              "text": "> ? X & U : X)>(type: K, listener: "
            },
            {
              "kind": "Reference",
              "text": "EventListener",
              "canonicalReference": "@zephyr3d/base!EventListener_2:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "InstanceType",
              "canonicalReference": "!InstanceType:type"
            },
            {
              "kind": "Content",
              "text": "<C> extends "
            },
            {
              "kind": "Reference",
              "text": "IEventTarget",
              "canonicalReference": "@zephyr3d/base!IEventTarget:interface"
            },
            {
              "kind": "Content",
              "text": "<infer U extends "
            },
            {
              "kind": "Reference",
              "text": "EventMap",
              "canonicalReference": "@zephyr3d/base!EventMap:type"
            },
            {
              "kind": "Content",
              "text": "> ? X & U : X, K>, context?: unknown): void;\n        once<K_1 extends keyof ("
            },
            {
              "kind": "Reference",
              "text": "InstanceType",
              "canonicalReference": "!InstanceType:type"
            },
            {
              "kind": "Content",
              "text": "<C> extends "
            },
            {
              "kind": "Reference",
              "text": "IEventTarget",
              "canonicalReference": "@zephyr3d/base!IEventTarget:interface"
            },
            {
              "kind": "Content",
              "text": "<infer U extends "
            },
            {
              "kind": "Reference",
              "text": "EventMap",
              "canonicalReference": "@zephyr3d/base!EventMap:type"
            },
            {
              "kind": "Content",
              "text": "> ? X & U : X)>(type: K_1, listener: "
            },
            {
              "kind": "Reference",
              "text": "EventListener",
              "canonicalReference": "@zephyr3d/base!EventListener_2:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "InstanceType",
              "canonicalReference": "!InstanceType:type"
            },
            {
              "kind": "Content",
              "text": "<C> extends "
            },
            {
              "kind": "Reference",
              "text": "IEventTarget",
              "canonicalReference": "@zephyr3d/base!IEventTarget:interface"
            },
            {
              "kind": "Content",
              "text": "<infer U extends "
            },
            {
              "kind": "Reference",
              "text": "EventMap",
              "canonicalReference": "@zephyr3d/base!EventMap:type"
            },
            {
              "kind": "Content",
              "text": "> ? X & U : X, K_1>, context?: unknown): void;\n        off<K_2 extends keyof ("
            },
            {
              "kind": "Reference",
              "text": "InstanceType",
              "canonicalReference": "!InstanceType:type"
            },
            {
              "kind": "Content",
              "text": "<C> extends "
            },
            {
              "kind": "Reference",
              "text": "IEventTarget",
              "canonicalReference": "@zephyr3d/base!IEventTarget:interface"
            },
            {
              "kind": "Content",
              "text": "<infer U extends "
            },
            {
              "kind": "Reference",
              "text": "EventMap",
              "canonicalReference": "@zephyr3d/base!EventMap:type"
            },
            {
              "kind": "Content",
              "text": "> ? X & U : X)>(type: K_2, listener: "
            },
            {
              "kind": "Reference",
              "text": "EventListener",
              "canonicalReference": "@zephyr3d/base!EventListener_2:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "InstanceType",
              "canonicalReference": "!InstanceType:type"
            },
            {
              "kind": "Content",
              "text": "<C> extends "
            },
            {
              "kind": "Reference",
              "text": "IEventTarget",
              "canonicalReference": "@zephyr3d/base!IEventTarget:interface"
            },
            {
              "kind": "Content",
              "text": "<infer U extends "
            },
            {
              "kind": "Reference",
              "text": "EventMap",
              "canonicalReference": "@zephyr3d/base!EventMap:type"
            },
            {
              "kind": "Content",
              "text": "> ? X & U : X, K_2>): void;\n        dispatchEvent(evt: ("
            },
            {
              "kind": "Reference",
              "text": "InstanceType",
              "canonicalReference": "!InstanceType:type"
            },
            {
              "kind": "Content",
              "text": "<C> extends "
            },
            {
              "kind": "Reference",
              "text": "IEventTarget",
              "canonicalReference": "@zephyr3d/base!IEventTarget:interface"
            },
            {
              "kind": "Content",
              "text": "<infer U extends "
            },
            {
              "kind": "Reference",
              "text": "EventMap",
              "canonicalReference": "@zephyr3d/base!EventMap:type"
            },
            {
              "kind": "Content",
              "text": "> ? X & U : X)[keyof ("
            },
            {
              "kind": "Reference",
              "text": "InstanceType",
              "canonicalReference": "!InstanceType:type"
            },
            {
              "kind": "Content",
              "text": "<C> extends "
            },
            {
              "kind": "Reference",
              "text": "IEventTarget",
              "canonicalReference": "@zephyr3d/base!IEventTarget:interface"
            },
            {
              "kind": "Content",
              "text": "<infer U extends "
            },
            {
              "kind": "Reference",
              "text": "EventMap",
              "canonicalReference": "@zephyr3d/base!EventMap:type"
            },
            {
              "kind": "Content",
              "text": "> ? X & U : X)], type?: string & keyof ("
            },
            {
              "kind": "Reference",
              "text": "InstanceType",
              "canonicalReference": "!InstanceType:type"
            },
            {
              "kind": "Content",
              "text": "<C> extends "
            },
            {
              "kind": "Reference",
              "text": "IEventTarget",
              "canonicalReference": "@zephyr3d/base!IEventTarget:interface"
            },
            {
              "kind": "Content",
              "text": "<infer U extends "
            },
            {
              "kind": "Reference",
              "text": "EventMap",
              "canonicalReference": "@zephyr3d/base!EventMap:type"
            },
            {
              "kind": "Content",
              "text": "> ? X & U : X)): void;\n        _internalAddEventListener<K_3 extends keyof ("
            },
            {
              "kind": "Reference",
              "text": "InstanceType",
              "canonicalReference": "!InstanceType:type"
            },
            {
              "kind": "Content",
              "text": "<C> extends "
            },
            {
              "kind": "Reference",
              "text": "IEventTarget",
              "canonicalReference": "@zephyr3d/base!IEventTarget:interface"
            },
            {
              "kind": "Content",
              "text": "<infer U extends "
            },
            {
              "kind": "Reference",
              "text": "EventMap",
              "canonicalReference": "@zephyr3d/base!EventMap:type"
            },
            {
              "kind": "Content",
              "text": "> ? X & U : X)>(listenerMap: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<{\n            [type: string]: {\n                handler: "
            },
            {
              "kind": "Reference",
              "text": "EventListener",
              "canonicalReference": "@zephyr3d/base!EventListener_2:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "InstanceType",
              "canonicalReference": "!InstanceType:type"
            },
            {
              "kind": "Content",
              "text": "<C> extends "
            },
            {
              "kind": "Reference",
              "text": "IEventTarget",
              "canonicalReference": "@zephyr3d/base!IEventTarget:interface"
            },
            {
              "kind": "Content",
              "text": "<infer U extends "
            },
            {
              "kind": "Reference",
              "text": "EventMap",
              "canonicalReference": "@zephyr3d/base!EventMap:type"
            },
            {
              "kind": "Content",
              "text": "> ? X & U : X, any>;\n                options: "
            },
            {
              "kind": "Reference",
              "text": "REventHandlerOptions",
              "canonicalReference": "@zephyr3d/base!REventHandlerOptions:type"
            },
            {
              "kind": "Content",
              "text": ";\n                removed: boolean;\n            }[];\n        }>, type: K_3, listener: "
            },
            {
              "kind": "Reference",
              "text": "EventListener",
              "canonicalReference": "@zephyr3d/base!EventListener_2:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "InstanceType",
              "canonicalReference": "!InstanceType:type"
            },
            {
              "kind": "Content",
              "text": "<C> extends "
            },
            {
              "kind": "Reference",
              "text": "IEventTarget",
              "canonicalReference": "@zephyr3d/base!IEventTarget:interface"
            },
            {
              "kind": "Content",
              "text": "<infer U extends "
            },
            {
              "kind": "Reference",
              "text": "EventMap",
              "canonicalReference": "@zephyr3d/base!EventMap:type"
            },
            {
              "kind": "Content",
              "text": "> ? X & U : X, K_3>, options?: "
            },
            {
              "kind": "Reference",
              "text": "REventHandlerOptions",
              "canonicalReference": "@zephyr3d/base!REventHandlerOptions:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<{\n            [type: string]: {\n                handler: "
            },
            {
              "kind": "Reference",
              "text": "EventListener",
              "canonicalReference": "@zephyr3d/base!EventListener_2:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "InstanceType",
              "canonicalReference": "!InstanceType:type"
            },
            {
              "kind": "Content",
              "text": "<C> extends "
            },
            {
              "kind": "Reference",
              "text": "IEventTarget",
              "canonicalReference": "@zephyr3d/base!IEventTarget:interface"
            },
            {
              "kind": "Content",
              "text": "<infer U extends "
            },
            {
              "kind": "Reference",
              "text": "EventMap",
              "canonicalReference": "@zephyr3d/base!EventMap:type"
            },
            {
              "kind": "Content",
              "text": "> ? X & U : X, any>;\n                options: "
            },
            {
              "kind": "Reference",
              "text": "REventHandlerOptions",
              "canonicalReference": "@zephyr3d/base!REventHandlerOptions:type"
            },
            {
              "kind": "Content",
              "text": ";\n                removed: boolean;\n            }[];\n        }>;\n        _internalRemoveEventListener<K_4 extends keyof ("
            },
            {
              "kind": "Reference",
              "text": "InstanceType",
              "canonicalReference": "!InstanceType:type"
            },
            {
              "kind": "Content",
              "text": "<C> extends "
            },
            {
              "kind": "Reference",
              "text": "IEventTarget",
              "canonicalReference": "@zephyr3d/base!IEventTarget:interface"
            },
            {
              "kind": "Content",
              "text": "<infer U extends "
            },
            {
              "kind": "Reference",
              "text": "EventMap",
              "canonicalReference": "@zephyr3d/base!EventMap:type"
            },
            {
              "kind": "Content",
              "text": "> ? X & U : X)>(listenerMap: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<{\n            [type: string]: {\n                handler: "
            },
            {
              "kind": "Reference",
              "text": "EventListener",
              "canonicalReference": "@zephyr3d/base!EventListener_2:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "InstanceType",
              "canonicalReference": "!InstanceType:type"
            },
            {
              "kind": "Content",
              "text": "<C> extends "
            },
            {
              "kind": "Reference",
              "text": "IEventTarget",
              "canonicalReference": "@zephyr3d/base!IEventTarget:interface"
            },
            {
              "kind": "Content",
              "text": "<infer U extends "
            },
            {
              "kind": "Reference",
              "text": "EventMap",
              "canonicalReference": "@zephyr3d/base!EventMap:type"
            },
            {
              "kind": "Content",
              "text": "> ? X & U : X, any>;\n                options: "
            },
            {
              "kind": "Reference",
              "text": "REventHandlerOptions",
              "canonicalReference": "@zephyr3d/base!REventHandlerOptions:type"
            },
            {
              "kind": "Content",
              "text": ";\n                removed: boolean;\n            }[];\n        }>, type: K_4, listener: "
            },
            {
              "kind": "Reference",
              "text": "EventListener",
              "canonicalReference": "@zephyr3d/base!EventListener_2:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "InstanceType",
              "canonicalReference": "!InstanceType:type"
            },
            {
              "kind": "Content",
              "text": "<C> extends "
            },
            {
              "kind": "Reference",
              "text": "IEventTarget",
              "canonicalReference": "@zephyr3d/base!IEventTarget:interface"
            },
            {
              "kind": "Content",
              "text": "<infer U extends "
            },
            {
              "kind": "Reference",
              "text": "EventMap",
              "canonicalReference": "@zephyr3d/base!EventMap:type"
            },
            {
              "kind": "Content",
              "text": "> ? X & U : X, K_4>): void;\n        _invokeLocalListeners(evt: "
            },
            {
              "kind": "Reference",
              "text": "EventType",
              "canonicalReference": "@zephyr3d/base!EventType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "InstanceType",
              "canonicalReference": "!InstanceType:type"
            },
            {
              "kind": "Content",
              "text": "<C> extends "
            },
            {
              "kind": "Reference",
              "text": "IEventTarget",
              "canonicalReference": "@zephyr3d/base!IEventTarget:interface"
            },
            {
              "kind": "Content",
              "text": "<infer U extends "
            },
            {
              "kind": "Reference",
              "text": "EventMap",
              "canonicalReference": "@zephyr3d/base!EventMap:type"
            },
            {
              "kind": "Content",
              "text": "> ? X & U : X>, type?: string): void;\n    };\n} & C"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 156
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "cls",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "C",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "makeEventTarget"
        },
        {
          "kind": "Class",
          "canonicalReference": "@zephyr3d/base!Matrix3x3:class",
          "docComment": "/**\n * 3x3 Matrix\n *\n * @remarks\n *\n * The matrix is column-major: | m00, m10, m20 | | m01, m11, m21 | | m02, m12, m22 |\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class Matrix3x3 extends "
            },
            {
              "kind": "Reference",
              "text": "VectorBase",
              "canonicalReference": "@zephyr3d/base!VectorBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Matrix3x3",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Matrix3x3:constructor(1)",
              "docComment": "/**\n * Creates a Matrix3x3 initialized with values.\n *\n * @param m00 - element at row 0, column 0\n *\n * @param m10 - element at row 0, column 1\n *\n * @param m20 - element at row 0, column 2\n *\n * @param m01 - element at row 1, column 0\n *\n * @param m11 - element at row 1, column 1\n *\n * @param m21 - element at row 1, column 2\n *\n * @param m02 - element at row 2, column 0\n *\n * @param m12 - element at row 2, column 1\n *\n * @param m22 - element at row 2, column 2\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(m00: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", m10: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", m20: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", m01: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", m11: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", m21: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", m02: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", m12: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", m22: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "m00",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "m10",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "m20",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "m01",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "m11",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "m21",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "m02",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 14
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "m12",
                  "parameterTypeTokenRange": {
                    "startIndex": 15,
                    "endIndex": 16
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "m22",
                  "parameterTypeTokenRange": {
                    "startIndex": 17,
                    "endIndex": 18
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Matrix3x3:constructor(2)",
              "docComment": "/**\n * Creates a Matrix3x3 initialized with values in an array.\n *\n * @param elements - Array that contains the values.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(elements: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "elements",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Matrix3x3:constructor(3)",
              "docComment": "/**\n * Cerates a Matrix3x3 initialized with values in a Float32Array.\n *\n * @param array - Float32Array object that contains the values.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(array: "
                },
                {
                  "kind": "Reference",
                  "text": "Float32Array",
                  "canonicalReference": "!Float32Array:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "array",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Matrix3x3:constructor(4)",
              "docComment": "/**\n * Creates a new Matrix3x3 placed on a given ArrayBuffer object.\n *\n * @param buffer - The array buffer object.\n *\n * @param offset - The byte offset of the buffer where the matrix placed at.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(buffer: "
                },
                {
                  "kind": "Reference",
                  "text": "ArrayBuffer",
                  "canonicalReference": "!ArrayBuffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ", offset: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "buffer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "offset",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Matrix3x3:constructor(5)",
              "docComment": "/**\n * Creates a new identity Matrix3x3.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 5,
              "parameters": []
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix3x3.add:member(1)",
              "docComment": "/**\n * Adds two Matrix3x3's component-wise.\n *\n * @param a - The first operand.\n *\n * @param b - The second operand.\n *\n * @param result - The output matrix (can be the same as a or b), if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static add(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "add"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix3x3#addBy:member(1)",
              "docComment": "/**\n * Add a matrix to this matrix component-wise.\n *\n * @param other - The matrix that will be added.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addBy(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addBy"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix3x3#clone:member(1)",
              "docComment": "/**\n * Creates a new Matrix3x3 initialized with values from this matrix.\n *\n * @returns The new matrix.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clone(): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "clone"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix3x3.div:member(1)",
              "docComment": "/**\n * Divides two Matrix3x3's component-wise.\n *\n * @param a - The first operand.\n *\n * @param b - The second operand.\n *\n * @param result - The output matrix (can be the same as a or b), if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static div(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "div"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix3x3#divBy:member(1)",
              "docComment": "/**\n * Divide this matrix by a matrix component-wise.\n *\n * @param other - The matrix that will be divide by.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "divBy(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "divBy"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix3x3#getCol:member(1)",
              "docComment": "/**\n * Get the values in a column as a Vector3\n *\n * @param col - The column index\n *\n * @param result - The output vector, if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCol(col: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "col",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getCol"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix3x3#getRow:member(1)",
              "docComment": "/**\n * Get the values in a row as a Vector3\n *\n * @param row - The row index\n *\n * @param result - The output vector, if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getRow(row: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "row",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getRow"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix3x3#identity:member(1)",
              "docComment": "/**\n * Make this matrix identity.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "identity(): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "identity"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix3x3.identity:member(1)",
              "docComment": "/**\n * Creates an identity Matrix3x3.\n *\n * @param result - The output matrix, if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static identity(result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "identity"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix3x3#inplaceInvert:member(1)",
              "docComment": "/**\n * Calculate the inverse of this matrix inplace.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inplaceInvert(): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "inplaceInvert"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix3x3.invert:member(1)",
              "docComment": "/**\n * Inverts a Matrix3x3\n *\n * @param matrix - The matrix to be inverted.\n *\n * @param result - The output matrix (can be the same as matrix). if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static invert(matrix: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "matrix",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "invert"
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Matrix3x3#m00:member",
              "docComment": "/**\n * Get the element at row 0, column 0\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get m00(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset m00(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "m00",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Matrix3x3#m01:member",
              "docComment": "/**\n * Get the element at row 1, column 0\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get m01(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset m01(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "m01",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Matrix3x3#m02:member",
              "docComment": "/**\n * Get the element at row 2, column 0\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get m02(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset m02(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "m02",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Matrix3x3#m10:member",
              "docComment": "/**\n * Get the element at row 0, column 1\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get m10(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset m10(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "m10",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Matrix3x3#m11:member",
              "docComment": "/**\n * Get the element at row 1, column 1\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get m11(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset m11(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "m11",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Matrix3x3#m12:member",
              "docComment": "/**\n * Get the element at row 2, column 1\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get m12(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset m12(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "m12",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Matrix3x3#m20:member",
              "docComment": "/**\n * Get the element at row 0, column 2\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get m20(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset m20(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "m20",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Matrix3x3#m21:member",
              "docComment": "/**\n * Get the element at row 1, column 2\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get m21(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset m21(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "m21",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Matrix3x3#m22:member",
              "docComment": "/**\n * Get the element at row 2, column 2\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get m22(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset m22(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "m22",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix3x3.mul:member(1)",
              "docComment": "/**\n * Multiplys two Matrix3x3's component-wise.\n *\n * @param a - The first operand.\n *\n * @param b - The second operand.\n *\n * @param result - The output matrix (can be the same as a or b), if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static mul(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mul"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix3x3#mulBy:member(1)",
              "docComment": "/**\n * Multiplies this matrix by a matrix component-wise.\n *\n * @param other - The matrix that will be multiplied by.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mulBy(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mulBy"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix3x3.multiply:member(1)",
              "docComment": "/**\n * Multiplies two Matrix3x3's\n *\n * @param m1 - The first operand.\n *\n * @param m2 - The second operand.\n *\n * @param result - The output matrix (can be the same as m1 or m2), if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static multiply(m1: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ", m2: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "m1",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "m2",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "multiply"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix3x3#multiplyLeft:member(1)",
              "docComment": "/**\n * Pre-multiply by a matrix inplace.\n *\n * @remarks\n *\n * this = other * this\n *\n * @param other - The matrix that will be multiplied by.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "multiplyLeft(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "multiplyLeft"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix3x3#multiplyRight:member(1)",
              "docComment": "/**\n * Post-multiply by a matrix inplace.\n *\n * @remarks\n *\n * this = this * other\n *\n * @param other - The matrix that will be multiplied by.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "multiplyRight(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "multiplyRight"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix3x3#rotation:member(1)",
              "docComment": "/**\n * Calculates a rotation around a given axis.\n *\n * @param axis - The rotation axis.\n *\n * @param angle - The rotate angle in radians.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rotation(axis: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", angle: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "axis",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "angle",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "rotation"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix3x3.rotation:member(1)",
              "docComment": "/**\n * Creates a Matrix3x3 that presents a rotation around a given axis.\n *\n * @param axis - The rotation axis.\n *\n * @param angle - The rotate angle in radians.\n *\n * @param result - The output matrix, if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static rotation(axis: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", angle: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "axis",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "angle",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "rotation"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix3x3#rotationX:member(1)",
              "docComment": "/**\n * Calculates a rotation around x axis inplace.\n *\n * @param angle - The rotate angle in radians.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rotationX(angle: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "angle",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "rotationX"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix3x3.rotationX:member(1)",
              "docComment": "/**\n * Creates a Matrix3x3 that presents a rotation around x axis.\n *\n * @param angle - The rotate angle in radians.\n *\n * @param result - The output matrix, if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static rotationX(angle: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "angle",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "rotationX"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix3x3#rotationY:member(1)",
              "docComment": "/**\n * Calculates a rotation around y axis inplace.\n *\n * @param angle - The rotate angle in radians.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rotationY(angle: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "angle",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "rotationY"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix3x3.rotationY:member(1)",
              "docComment": "/**\n * Creates a Matrix3x3 that presents a rotation around y axis.\n *\n * @param angle - The rotate angle in radians.\n *\n * @param result - The output matrix, if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static rotationY(angle: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "angle",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "rotationY"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix3x3#rotationZ:member(1)",
              "docComment": "/**\n * Calculates a rotation around z axis inplace.\n *\n * @param angle - The rotate angle in radians.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rotationZ(angle: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "angle",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "rotationZ"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix3x3.rotationZ:member(1)",
              "docComment": "/**\n * Creates a Matrix3x3 that presents a rotation around z axis.\n *\n * @param angle - The rotate angle in radians.\n *\n * @param result - The output matrix, if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static rotationZ(angle: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "angle",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "rotationZ"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix3x3.scale:member(1)",
              "docComment": "/**\n * Scales a Matrix3x3 by a scalar number component-wise.\n *\n * @param a - The matrix to be scaled.\n *\n * @param f - The scalar number.\n *\n * @param result - The output matrix (can be the same as a), if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static scale(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ", f: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "f",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "scale"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix3x3#scaleBy:member(1)",
              "docComment": "/**\n * Scale this matrix by a scalar number component-wise.\n *\n * @param f - amount to scale this matrix by.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scaleBy(f: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "f",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "scaleBy"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix3x3#setCol:member(1)",
              "docComment": "/**\n * Set values to a column in the matrix.\n *\n * @param col - The column index.\n *\n * @param v - The values to be set.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setCol(col: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", v: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "col",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "v",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setCol"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix3x3#setColXYZ:member(1)",
              "docComment": "/**\n * Set values to a column in the matrix.\n *\n * @param col - The column index.\n *\n * @param x - The first value of the column to be set.\n *\n * @param y - The second value of the column to be set.\n *\n * @param z - The third value of the column to be set.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setColXYZ(col: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", z: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "col",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "z",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setColXYZ"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix3x3#setRow:member(1)",
              "docComment": "/**\n * Set values to a row in the matrix.\n *\n * @param row - The row index\n *\n * @param v - The values to be set\n *\n * @returns - self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setRow(row: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", v: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "row",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "v",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setRow"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix3x3#setRowXYZ:member(1)",
              "docComment": "/**\n * Set values to a row in the matrix.\n *\n * @param row - The row index\n *\n * @param x - The first value of the row to be set\n *\n * @param y - The second value of the row to be set\n *\n * @param z - The third value of the row to be set\n *\n * @returns - self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setRowXYZ(row: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", z: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "row",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "z",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setRowXYZ"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix3x3.sub:member(1)",
              "docComment": "/**\n * Subtracts two Matrix3x3's component-wise.\n *\n * @param a - The first operand.\n *\n * @param b - The second operand.\n *\n * @param result - The output matrix (can be the same as a or b), if not specified, a new matrix will be created.\n *\n * @returns \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static sub(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "sub"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix3x3#subBy:member(1)",
              "docComment": "/**\n * Subtract a matrix from this matrix component-wise.\n *\n * @param other - The matrix that will be subtract.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "subBy(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "subBy"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix3x3#transform:member(1)",
              "docComment": "/**\n * Transform a vector by this matrix.\n *\n * @param vec - The vector to be transformed.\n *\n * @param result - The output vector (can be the same as vec), if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "transform(vec: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "vec",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "transform"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix3x3#transformPoint:member(1)",
              "docComment": "/**\n * Transform a vector by this matrix.\n *\n * @param vec - The vector to be transformed.\n *\n * @param result - The output vector (can be the same as vec), if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "transformPoint(vec: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "vec",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "transformPoint"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix3x3#transformVector:member(1)",
              "docComment": "/**\n * Transform a vector by this matrix.\n *\n * @param vec - The vector to be transformed.\n *\n * @param result - The output vector (can be the same as vec), if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "transformVector(vec: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "vec",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "transformVector"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix3x3#transpose:member(1)",
              "docComment": "/**\n * Calculate the transpose of this matrix inplace.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "transpose(): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "transpose"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix3x3.transpose:member(1)",
              "docComment": "/**\n * Transpose a Matrix3x3.\n *\n * @param matrix - The matrix to be transposed.\n *\n * @param result - The output matrix (can be the same as matrix), if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static transpose(matrix: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "matrix",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "transpose"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@zephyr3d/base!Matrix4x4:class",
          "docComment": "/**\n * 4x4 Matrix\n *\n * @remarks\n *\n * The matrix is column-major: | m00, m10, m20, m30 | | m01, m11, m21, m31 | | m02, m12, m22, m32 | | m03, m13, m23, m33 |\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class Matrix4x4 extends "
            },
            {
              "kind": "Reference",
              "text": "VectorBase",
              "canonicalReference": "@zephyr3d/base!VectorBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Matrix4x4",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Matrix4x4:constructor(1)",
              "docComment": "/**\n * Creates a Matrix4x4 initialized with values.\n *\n * @param m00 - element at row 0, column 0\n *\n * @param m10 - element at row 0, column 1\n *\n * @param m20 - element at row 0, column 2\n *\n * @param m30 - element at row 0, column 3\n *\n * @param m01 - element at row 1, column 0\n *\n * @param m11 - element at row 1, column 1\n *\n * @param m21 - element at row 1, column 2\n *\n * @param m31 - element at row 1, column 3\n *\n * @param m02 - element at row 2, column 0\n *\n * @param m12 - element at row 2, column 1\n *\n * @param m22 - element at row 2, column 2\n *\n * @param m32 - element at row 2, column 3\n *\n * @param m03 - element at row 3, column 0\n *\n * @param m13 - element at row 3, column 1\n *\n * @param m23 - element at row 3, column 2\n *\n * @param m33 - element at row 3, column 3\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(m00: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", m10: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", m20: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", m30: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", m01: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", m11: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", m21: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", m31: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", m02: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", m12: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", m22: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", m32: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", m03: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", m13: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", m23: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", m33: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "m00",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "m10",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "m20",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "m30",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "m01",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "m11",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "m21",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 14
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "m31",
                  "parameterTypeTokenRange": {
                    "startIndex": 15,
                    "endIndex": 16
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "m02",
                  "parameterTypeTokenRange": {
                    "startIndex": 17,
                    "endIndex": 18
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "m12",
                  "parameterTypeTokenRange": {
                    "startIndex": 19,
                    "endIndex": 20
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "m22",
                  "parameterTypeTokenRange": {
                    "startIndex": 21,
                    "endIndex": 22
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "m32",
                  "parameterTypeTokenRange": {
                    "startIndex": 23,
                    "endIndex": 24
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "m03",
                  "parameterTypeTokenRange": {
                    "startIndex": 25,
                    "endIndex": 26
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "m13",
                  "parameterTypeTokenRange": {
                    "startIndex": 27,
                    "endIndex": 28
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "m23",
                  "parameterTypeTokenRange": {
                    "startIndex": 29,
                    "endIndex": 30
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "m33",
                  "parameterTypeTokenRange": {
                    "startIndex": 31,
                    "endIndex": 32
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Matrix4x4:constructor(2)",
              "docComment": "/**\n * Creates a Matrix4x4 initialized with values in an array.\n *\n * @param elements - Array that contains the values.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(elements: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "elements",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Matrix4x4:constructor(3)",
              "docComment": "/**\n * Cerates a Matrix4x4 initialized with values in a Float32Array.\n *\n * @param array - Float32Array object that contains the values.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(array: "
                },
                {
                  "kind": "Reference",
                  "text": "Float32Array",
                  "canonicalReference": "!Float32Array:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "array",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Matrix4x4:constructor(4)",
              "docComment": "/**\n * Creates a new Matrix4x4 placed on a given ArrayBuffer object.\n *\n * @param buffer - The array buffer object.\n *\n * @param offset - The byte offset of the buffer where the matrix placed at.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(buffer: "
                },
                {
                  "kind": "Reference",
                  "text": "ArrayBuffer",
                  "canonicalReference": "!ArrayBuffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ", offset: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "buffer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "offset",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Matrix4x4:constructor(5)",
              "docComment": "/**\n * Creates a new identity Matrix4x4.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 5,
              "parameters": []
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4.add:member(1)",
              "docComment": "/**\n * Adds two Matrix4x4's component-wise.\n *\n * @param a - The first operand.\n *\n * @param b - The second operand.\n *\n * @param result - The output matrix (can be the same as a or b), if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static add(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "add"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#addBy:member(1)",
              "docComment": "/**\n * Add a matrix to this matrix component-wise.\n *\n * @param other - The matrix that will be added.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addBy(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addBy"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#clone:member(1)",
              "docComment": "/**\n * Creates a new Matrix4x4 initialized with values from this matrix.\n *\n * @returns The new matrix.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clone(): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "clone"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#decompose:member(1)",
              "docComment": "/**\n * Decompose this matrix into its rotation, translation and scale components.\n *\n * @param scale - The output scale vector.\n *\n * @param rotation - The output rotation matrix or quaternion.\n *\n * @param translation - The output translation vector.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "decompose(scale?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", rotation?: "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ", translation?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scale",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "rotation",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 8
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "translation",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "decompose"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#decomposeLookAt:member(1)",
              "docComment": "/**\n * Decompose this matrix into a look-at form.\n *\n * @param eye - The output eye vector.\n *\n * @param target - The output target vector.\n *\n * @param up - The output up vector.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "decomposeLookAt(eye?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", target?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", up?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "eye",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "target",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "up",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "decomposeLookAt"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#det:member(1)",
              "docComment": "/**\n * Calculates the determinant of this matrix.\n *\n * @returns The determinant\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "det(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "det"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4.div:member(1)",
              "docComment": "/**\n * Divides two Matrix4x4's component-wise.\n *\n * @param a - The first operand.\n *\n * @param b - The second operand.\n *\n * @param result - The output matrix (can be the same as a or b), if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static div(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "div"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#divBy:member(1)",
              "docComment": "/**\n * Divide this matrix by a matrix component-wise.\n *\n * @param other - The matrix that will be divide by.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "divBy(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "divBy"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#frustum:member(1)",
              "docComment": "/**\n * Calculates a perspective projection matrix from a frustum inplace.\n *\n * @param left - Left bound of the frustum.\n *\n * @param right - Right bound of the frustum.\n *\n * @param bottom - Bottom bound of the frustum.\n *\n * @param top - Top bound of the frustum.\n *\n * @param znear - Near bound of the frustum.\n *\n * @param zfar - Far bound of the frustum.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "frustum(left: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", right: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", bottom: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", top: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", znear: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", zfar: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "left",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "right",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "bottom",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "top",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "znear",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "zfar",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "frustum"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4.frustum:member(1)",
              "docComment": "/**\n * Creates a perspective projection matrix from a frustum.\n *\n * @param left - Left bound of the frustum.\n *\n * @param right - Right bound of the frustum.\n *\n * @param bottom - Bottom bound of the frustum.\n *\n * @param top - Top bound of the frustum.\n *\n * @param znear - Near bound of the frustum.\n *\n * @param zfar - Far bound of the frustum.\n *\n * @param result - The output matrix, if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static frustum(left: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", right: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", bottom: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", top: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", znear: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", zfar: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 15,
                "endIndex": 16
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "left",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "right",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "bottom",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "top",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "znear",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "zfar",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 14
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "frustum"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#getAspect:member(1)",
              "docComment": "/**\n * Get the aspect ratio.\n *\n * @remarks\n *\n * This method assumes that the matrix is a perspective projection matrix.\n *\n * @returns The aspect ratio\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAspect(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getAspect"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#getBottomPlane:member(1)",
              "docComment": "/**\n * Get the bottom clip plane.\n *\n * @remarks\n *\n * This method assumes that the matrix is an orthogonal projection matrix.\n *\n * @returns The bottom clip plane\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getBottomPlane(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getBottomPlane"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#getCol:member(1)",
              "docComment": "/**\n * Get the values in a column as a Vector4\n *\n * @param col - The column index\n *\n * @param result - The output vector, if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCol(col: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "col",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getCol"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#getFarPlane:member(1)",
              "docComment": "/**\n * Get far clip plane.\n *\n * @remarks\n *\n * This method assumes that this is a projection matrix (perspective or orthogonal).\n *\n * @returns The far clip plane\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getFarPlane(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getFarPlane"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#getFarPlaneHeight:member(1)",
              "docComment": "/**\n * Get height of the far clip plane.\n *\n * @remarks\n *\n * This method assumes that this is a projection matrix (perspective or orthogonal).\n *\n * @returns Height of the far clip plane\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getFarPlaneHeight(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getFarPlaneHeight"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#getFarPlaneWidth:member(1)",
              "docComment": "/**\n * Get width of the far clip plane.\n *\n * @remarks\n *\n * This method assumes that this is a projection matrix (perspective or orthogonal).\n *\n * @returns Width of the far clip plane\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getFarPlaneWidth(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getFarPlaneWidth"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#getFov:member(1)",
              "docComment": "/**\n * Get the vertical field of view in radians.\n *\n * @remarks\n *\n * This method assumes that this is a projection matrix (perspective or orthogonal).\n *\n * @returns 0 if this is an orthogonal projection matrix, otherwise the vertical field of view\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getFov(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getFov"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#getLeftPlane:member(1)",
              "docComment": "/**\n * Get the left clip plane.\n *\n * @remarks\n *\n * This method assumes that the matrix is an orthogonal projection matrix.\n *\n * @returns The left clip plane\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getLeftPlane(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getLeftPlane"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#getNearPlane:member(1)",
              "docComment": "/**\n * Get near clip plane.\n *\n * @remarks\n *\n * This method assumes that this is a projection matrix (perspective or orthogonal).\n *\n * @returns The near clip plane\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getNearPlane(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getNearPlane"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#getNearPlaneHeight:member(1)",
              "docComment": "/**\n * Get height of the near clip plane.\n *\n * @remarks\n *\n * This method assumes that this is a projection matrix (perspective or orthogonal).\n *\n * @returns Height of the near clip plane\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getNearPlaneHeight(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getNearPlaneHeight"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#getNearPlaneWidth:member(1)",
              "docComment": "/**\n * Get width of the near clip plane.\n *\n * @remarks\n *\n * This method assumes that this is a projection matrix (perspective or orthogonal).\n *\n * @returns Width of the near clip plane\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getNearPlaneWidth(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getNearPlaneWidth"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#getRightPlane:member(1)",
              "docComment": "/**\n * Get the right clip plane.\n *\n * @remarks\n *\n * This method assumes that the matrix is an orthogonal projection matrix.\n *\n * @returns The right clip plane\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getRightPlane(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getRightPlane"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#getRow:member(1)",
              "docComment": "/**\n * Get the values in a row as a Vector4\n *\n * @param row - The row index\n *\n * @param result - The output vector, if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getRow(row: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "row",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getRow"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#getTanHalfFov:member(1)",
              "docComment": "/**\n * Get tangent value of half of the vertical field of view.\n *\n * @remarks\n *\n * This method assumes that this is a projection matrix (perspective or orthogonal). If the matrix is orthogonal, 0 is returned.\n *\n * @returns 0 if this is an orthogonal projection matrix, otherwise the tangent value of half of the vertical field of view\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTanHalfFov(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getTanHalfFov"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#getTopPlane:member(1)",
              "docComment": "/**\n * Get the top clip plane.\n *\n * @remarks\n *\n * This method assumes that the matrix is an orthogonal projection matrix.\n *\n * @returns The top clip plane\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTopPlane(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getTopPlane"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#identity:member(1)",
              "docComment": "/**\n * Make this matrix identity.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "identity(): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "identity"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4.identity:member(1)",
              "docComment": "/**\n * Creates an identity Matrix4x4.\n *\n * @param result - The output matrix, if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static identity(result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "identity"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#inplaceInvert:member(1)",
              "docComment": "/**\n * Invert this matrix inplace.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inplaceInvert(): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "inplaceInvert"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#inplaceInvertAffine:member(1)",
              "docComment": "/**\n * Invert this matrix inplace, assuming this matrix presents an affine transformation.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inplaceInvertAffine(): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "inplaceInvertAffine"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4.invert:member(1)",
              "docComment": "/**\n * Inverts a Matrix4x4\n *\n * @param matrix - The matrix to be inverted.\n *\n * @param result - The output matrix (can be the same as matrix). if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static invert(matrix: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "matrix",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "invert"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4.invertAffine:member(1)",
              "docComment": "/**\n * Inverts a Matrix4x4 which presents an affine transformation.\n *\n * @param matrix - The matrix to be inverted.\n *\n * @param result - The output matrix (can be the same as matrix). if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static invertAffine(matrix: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "matrix",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "invertAffine"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#isOrtho:member(1)",
              "docComment": "/**\n * Check if this matrix is orthogonal projection matrix.\n *\n * @remarks\n *\n * This method assumes that this is an affine transform matrix or a projection matrix (perspective or orthogonal).\n *\n * @returns true if this is an orthogonal projection matrix, otherwise false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isOrtho(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "isOrtho"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#isPerspective:member(1)",
              "docComment": "/**\n * Check if this matrix is perspective projection matrix.\n *\n * @remarks\n *\n * This method assumes that this is an affine transform matrix or a projection matrix (perspective or orthogonal).\n *\n * @returns true if this is a perspective projection matrix, otherwise false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isPerspective(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "isPerspective"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#lookAt:member(1)",
              "docComment": "/**\n * Calculates a look-at matrix inplace.\n *\n * @param eye - Position of the eye.\n *\n * @param target - The point that the eye is looking at.\n *\n * @param up - The up vector.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lookAt(eye: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", target: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", up: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "eye",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "target",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "up",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "lookAt"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4.lookAt:member(1)",
              "docComment": "/**\n * Creates a look-at matrix.\n *\n * @param eye - Position of the eye.\n *\n * @param target - The point that the eye is looking at.\n *\n * @param up - The up vector.\n *\n * @param result - The output matrix, if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static lookAt(eye: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", target: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", up: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "eye",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "target",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "up",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "lookAt"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4.lookAtCubeFace:member(1)",
              "docComment": "/**\n * Creates a matrix, which presents a transform of looking at given cube face.\n *\n * @param face - The cube face to be looked at.\n *\n * @param result - The output matrix, if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static lookAtCubeFace(face: "
                },
                {
                  "kind": "Reference",
                  "text": "CubeFace",
                  "canonicalReference": "@zephyr3d/base!CubeFace:enum"
                },
                {
                  "kind": "Content",
                  "text": ", pos: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "face",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "pos",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "lookAtCubeFace"
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#m00:member",
              "docComment": "/**\n * Get the element at row 0, column 0\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get m00(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset m00(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "m00",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#m01:member",
              "docComment": "/**\n * Get the element at row 1, column 0\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get m01(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset m01(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "m01",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#m02:member",
              "docComment": "/**\n * Get the element at row 2, column 0\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get m02(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset m02(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "m02",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#m03:member",
              "docComment": "/**\n * Get the element at row 3, column 0\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get m03(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset m03(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "m03",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#m10:member",
              "docComment": "/**\n * Get the element at row 0, column 1\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get m10(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset m10(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "m10",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#m11:member",
              "docComment": "/**\n * Get the element at row 1, column 1\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get m11(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset m11(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "m11",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#m12:member",
              "docComment": "/**\n * Get the element at row 2, column 1\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get m12(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset m12(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "m12",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#m13:member",
              "docComment": "/**\n * Get the element at row 3, column 1\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get m13(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset m13(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "m13",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#m20:member",
              "docComment": "/**\n * Get the element at row 0, column 2\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get m20(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset m20(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "m20",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#m21:member",
              "docComment": "/**\n * Get the element at row 1, column 2\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get m21(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset m21(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "m21",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#m22:member",
              "docComment": "/**\n * Get the element at row 2, column 2\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get m22(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset m22(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "m22",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#m23:member",
              "docComment": "/**\n * Get the element at row 3, column 2\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get m23(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset m23(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "m23",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#m30:member",
              "docComment": "/**\n * Get the element at row 0, column 3\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get m30(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset m30(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "m30",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#m31:member",
              "docComment": "/**\n * Get the element at row 1, column 3\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get m31(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset m31(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "m31",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#m32:member",
              "docComment": "/**\n * Get the element at row 2, column 3\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get m32(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset m32(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "m32",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#m33:member",
              "docComment": "/**\n * Get the element at row 3, column 3\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get m33(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset m33(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "m33",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4.mul:member(1)",
              "docComment": "/**\n * Multiplys two Matrix4x4's component-wise.\n *\n * @param a - The first operand.\n *\n * @param b - The second operand.\n *\n * @param result - The output matrix (can be the same as a or b), if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static mul(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mul"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#mulBy:member(1)",
              "docComment": "/**\n * Multiplies this matrix by a matrix component-wise.\n *\n * @param other - The matrix that will be multiplied by.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mulBy(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mulBy"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4.multiply:member(1)",
              "docComment": "/**\n * Multiplies two Matrix4x4's\n *\n * @param m1 - The first operand.\n *\n * @param m2 - The second operand.\n *\n * @param result - The output matrix (can be the same as m1 or m2), if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static multiply(m1: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ", m2: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "m1",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "m2",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "multiply"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4.multiplyAffine:member(1)",
              "docComment": "/**\n * Multiplies two Matrix4x4's which present affine transformations.\n *\n * @param m1 - The first operand.\n *\n * @param m2 - The second operand.\n *\n * @param result - The output matrix (can be the same as m1 or m2), if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static multiplyAffine(m1: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ", m2: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "m1",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "m2",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "multiplyAffine"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#multiplyLeft:member(1)",
              "docComment": "/**\n * Pre-multiply by a matrix inplace.\n *\n * @remarks\n *\n * this = other * this\n *\n * @param other - The matrix that will be multiplied by.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "multiplyLeft(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "multiplyLeft"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#multiplyLeftAffine:member(1)",
              "docComment": "/**\n * Pre-multiply by a matrix inplace, assuming both matrices present affine transformations.\n *\n * @remarks\n *\n * this = other * this\n *\n * @param other - The matrix that will be multiplied by.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "multiplyLeftAffine(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "multiplyLeftAffine"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#multiplyRight:member(1)",
              "docComment": "/**\n * Post-multiply by a matrix inplace.\n *\n * @remarks\n *\n * this = this * other\n *\n * @param other - The matrix that will be multiplied by.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "multiplyRight(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "multiplyRight"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#multiplyRightAffine:member(1)",
              "docComment": "/**\n * Post-multiply by a matrix inplace, assuming both matrices present affine transformations.\n *\n * @remarks\n *\n * this = this * other\n *\n * @param other - The matrix that will be multiplied by.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "multiplyRightAffine(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "multiplyRightAffine"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4.obliquePerspective:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static obliquePerspective(perspectiveMatrix: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ", nearPlane: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "perspectiveMatrix",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "nearPlane",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "obliquePerspective"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4.obliqueProjection:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static obliqueProjection(projectionMatrix: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ", clipPlane: "
                },
                {
                  "kind": "Reference",
                  "text": "Plane",
                  "canonicalReference": "@zephyr3d/base!Plane:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "projectionMatrix",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "clipPlane",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "obliqueProjection"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#ortho:member(1)",
              "docComment": "/**\n * Calculates an orthogonal projection matrix inplace.\n *\n * @param left - Left bound of the frustum.\n *\n * @param right - Right bound of the frustum.\n *\n * @param bottom - Bottom bound of the frustum.\n *\n * @param top - Top bound of the frustum.\n *\n * @param near - Near bound of the frustum.\n *\n * @param far - Far bound of the frustum.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ortho(left: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", right: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", bottom: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", top: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", near: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", far: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "left",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "right",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "bottom",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "top",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "near",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "far",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ortho"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4.ortho:member(1)",
              "docComment": "/**\n * Creates an orthogonal projection matrix from a given frustum.\n *\n * @param left - Left bound of the frustum.\n *\n * @param right - Right bound of the frustum.\n *\n * @param bottom - Bottom bound of the frustum.\n *\n * @param top - Top bound of the frustum.\n *\n * @param near - Near bound of the frustum.\n *\n * @param far - Far bound of the frustum.\n *\n * @param result - The output matrix, if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static ortho(left: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", right: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", bottom: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", top: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", near: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", far: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 15,
                "endIndex": 16
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "left",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "right",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "bottom",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "top",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "near",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "far",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 14
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ortho"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#perspective:member(1)",
              "docComment": "/**\n * Calculates a right-handed perspective projection matrix inplace.\n *\n * @param fovY - The vertical field of view in radians.\n *\n * @param aspect - The aspect ratio.\n *\n * @param znear - The near clip plane.\n *\n * @param zfar - The far clip plane.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "perspective(fovY: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", aspect: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", znear: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", zfar: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fovY",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "aspect",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "znear",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "zfar",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "perspective"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4.perspective:member(1)",
              "docComment": "/**\n * Creates a right-handed perspective projection matrix.\n *\n * @param fovY - The vertical field of view in radians.\n *\n * @param aspect - The aspect ratio.\n *\n * @param znear - The near clip plane.\n *\n * @param zfar - The far clip plane.\n *\n * @param result - The output matrix, if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static perspective(fovY: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", aspect: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", znear: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", zfar: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fovY",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "aspect",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "znear",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "zfar",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "perspective"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4.reflection:member(1)",
              "docComment": "/**\n * Creates a reflection matrix from a plane.\n *\n * @param nx - The x component of the plane normal.\n *\n * @param ny - The y component of the plane normal.\n *\n * @param nz - The z component of the plane normal.\n *\n * @param d - The plane distance.\n *\n * @param result - The output matrix, if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static reflection(nx: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", ny: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", nz: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", d: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "nx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "ny",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "nz",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "reflection"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#rotateLeft:member(1)",
              "docComment": "/**\n * Pre-rotate by a rotation matrix or quaternion inplace.\n *\n * @remarks\n *\n * this = r * this\n *\n * @param r - The rotation matrix or quaternion.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rotateLeft(r: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "r",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "rotateLeft"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4.rotateLeft:member(1)",
              "docComment": "/**\n * Pre-rotate a Matrix4x4 by a rotation matrix or quaternion.\n *\n * @remarks\n *\n * result = r * m\n *\n * @param m - The matrix that will be translated.\n *\n * @param r - The rotate matrix or quaternion.\n *\n * @param result - The output matrix (can be the same as m), if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static rotateLeft(m: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ", r: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "m",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "r",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "rotateLeft"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#rotateRight:member(1)",
              "docComment": "/**\n * Post-rotate by a rotation matrix or quaternion inplace.\n *\n * @remarks\n *\n * this = this * r\n *\n * @param r - The rotation matrix or quaternion.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rotateRight(r: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "r",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "rotateRight"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4.rotateRight:member(1)",
              "docComment": "/**\n * Post-rotate a Matrix4x4 by a rotation matrix or quaternion.\n *\n * @remarks\n *\n * result = m * r\n *\n * @param m - The matrix that will be translated.\n *\n * @param r - The rotate matrix or quaternion.\n *\n * @param result - The output matrix (can be the same as m), if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static rotateRight(m: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ", r: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "m",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "r",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "rotateRight"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#rotation:member(1)",
              "docComment": "/**\n * Calculates a rotation around a given axis inplace.\n *\n * @param axis - The rotation axis.\n *\n * @param angle - The rotate angle in radians.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rotation(axis: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", angle: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "axis",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "angle",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "rotation"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4.rotation:member(1)",
              "docComment": "/**\n * Creates a Matrix4x4 which presents a rotation around a given axis.\n *\n * @param axis - The axis vector.\n *\n * @param angle - The rotate angle in radians.\n *\n * @param result - The output matrix. if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static rotation(axis: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", angle: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "axis",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "angle",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "rotation"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#rotationX:member(1)",
              "docComment": "/**\n * Calculates a rotation around x axis inplace.\n *\n * @param angle - The rotate angle in radians.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rotationX(angle: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "angle",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "rotationX"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4.rotationX:member(1)",
              "docComment": "/**\n * Creates a Matrix4x4 which presents a rotation around the x axis.\n *\n * @param angle - The rotate angle in radians.\n *\n * @param result - The output matrix. if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static rotationX(angle: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "angle",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "rotationX"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#rotationY:member(1)",
              "docComment": "/**\n * Calculates a rotation around y axis inplace.\n *\n * @param angle - The rotate angle in radians.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rotationY(angle: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "angle",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "rotationY"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4.rotationY:member(1)",
              "docComment": "/**\n * Creates a Matrix4x4 which presents a rotation around the y axis.\n *\n * @param angle - The rotate angle in radians.\n *\n * @param result - The output matrix. if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static rotationY(angle: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "angle",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "rotationY"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#rotationZ:member(1)",
              "docComment": "/**\n * Calculates a rotation around z axis inplace.\n *\n * @param angle - The rotate angle in radians.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rotationZ(angle: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "angle",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "rotationZ"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4.rotationZ:member(1)",
              "docComment": "/**\n * Creates a Matrix4x4 which presents a rotation around the z axis.\n *\n * @param angle - The rotate angle in radians.\n *\n * @param result - The output matrix. if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static rotationZ(angle: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "angle",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "rotationZ"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4.scale:member(1)",
              "docComment": "/**\n * Scales a Matrix4x4 by a scalar number component-wise.\n *\n * @param a - The matrix to be scaled.\n *\n * @param f - The scalar number.\n *\n * @param result - The output matrix (can be the same as a), if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static scale(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ", f: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "f",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "scale"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#scaleBy:member(1)",
              "docComment": "/**\n * Scale this matrix by a scalar number component-wise.\n *\n * @param f - amount to scale this matrix by.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scaleBy(f: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "f",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "scaleBy"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#scaleLeft:member(1)",
              "docComment": "/**\n * Pre-scale by a vector inplace.\n *\n * @remarks\n *\n * this = (scale matrix for s) * this\n *\n * @param s - The scale vector.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scaleLeft(s: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "s",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "scaleLeft"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4.scaleLeft:member(1)",
              "docComment": "/**\n * Pre-scale a Matrix4x4 by a vector.\n *\n * @remarks\n *\n * result = (scale matrix for s) * m\n *\n * @param m - The matrix that will be translated.\n *\n * @param s - The scale vector.\n *\n * @param result - The output matrix (can be the same as m), if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static scaleLeft(m: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ", s: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "m",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "s",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "scaleLeft"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#scaleRight:member(1)",
              "docComment": "/**\n * Post-scale by a vector inplace.\n *\n * @remarks\n *\n * this = this * (scale matrix for s)\n *\n * @param s - The scale vector.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scaleRight(s: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "s",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "scaleRight"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4.scaleRight:member(1)",
              "docComment": "/**\n * Post-scale a Matrix4x4 by a vector.\n *\n * @remarks\n *\n * result = m * (scale matrix for s)\n *\n * @param m - The matrix that will be scaled.\n *\n * @param s - The scale vector.\n *\n * @param result - The output matrix (can be the same as m), if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static scaleRight(m: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ", s: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "m",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "s",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "scaleRight"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#scaling:member(1)",
              "docComment": "/**\n * Calculates a scale matrix inplace.\n *\n * @param s - The scale vector.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scaling(s: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "s",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "scaling"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4.scaling:member(1)",
              "docComment": "/**\n * Creates a Matrix4x4 which presents a scaling.\n *\n * @param s - The scale vector.\n *\n * @param result - The output matrix. if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static scaling(s: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "s",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "scaling"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#setCol:member(1)",
              "docComment": "/**\n * Set values to a column in the matrix.\n *\n * @param col - The column index.\n *\n * @param v - The values to be set.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setCol(col: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", v: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "col",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "v",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setCol"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#setColXYZW:member(1)",
              "docComment": "/**\n * Set values to a column in the matrix.\n *\n * @param col - The column index.\n *\n * @param x - The first value of the column to be set.\n *\n * @param y - The second value of the column to be set.\n *\n * @param z - The third value of the column to be set.\n *\n * @param w - The fourth value of the column to be set.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setColXYZW(col: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", z: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", w: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "col",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "z",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "w",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setColXYZW"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#setNearFar:member(1)",
              "docComment": "/**\n * Set the near clip plane and far clip plane.\n *\n * @remarks\n *\n * This method assumes that the matrix is a projection matrix (perspective or orthogonal).\n *\n * @param znear - The near clip plane.\n *\n * @param zfar - The far clip plane.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setNearFar(znear: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", zfar: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "znear",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "zfar",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setNearFar"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#setRow:member(1)",
              "docComment": "/**\n * Set values to a row in the matrix.\n *\n * @param row - The row index\n *\n * @param v - The values to be set\n *\n * @returns - self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setRow(row: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", v: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "row",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "v",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setRow"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#setRowXYZW:member(1)",
              "docComment": "/**\n * Set values to a row in the matrix.\n *\n * @param row - The row index\n *\n * @param x - The first value of the row to be set\n *\n * @param y - The second value of the row to be set\n *\n * @param z - The third value of the row to be set\n *\n * @param w - The fourth value of the row to be set\n *\n * @returns - self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setRowXYZW(row: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", z: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", w: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "row",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "z",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "w",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setRowXYZW"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4.sub:member(1)",
              "docComment": "/**\n * Subtracts two Matrix4x4's component-wise.\n *\n * @param a - The first operand.\n *\n * @param b - The second operand.\n *\n * @param result - The output matrix (can be the same as a or b), if not specified, a new matrix will be created.\n *\n * @returns \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static sub(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "sub"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#subBy:member(1)",
              "docComment": "/**\n * Subtract a matrix from this matrix component-wise.\n *\n * @param other - The matrix that will be subtract.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "subBy(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "subBy"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#transform:member(1)",
              "docComment": "/**\n * Transform a vector by this matrix.\n *\n * @param vec - The vector to be transformed.\n *\n * @param result - The output vector (can be the same as vec), if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "transform(vec: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "vec",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "transform"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#transformAffine:member(1)",
              "docComment": "/**\n * Transform a vector by this matrix, assuming this matrix presents an affine transformation.\n *\n * @param vec - The vector to be transformed.\n *\n * @param result - The output vector (can be the same as vec), if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "transformAffine(vec: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "vec",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "transformAffine"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#transformPoint:member(1)",
              "docComment": "/**\n * Transform a point by this matrix.\n *\n * @param point - The point to be transformed.\n *\n * @param result - The output vector, if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "transformPoint(point: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "point",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "transformPoint"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#transformPointAffine:member(1)",
              "docComment": "/**\n * Transform a point by this matrix, assuming this matrix presents an affine transformation.\n *\n * @param point - The point to be transformed.\n *\n * @param result - The output vector (can be the same as point), if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "transformPointAffine(point: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "point",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "transformPointAffine"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#transformPointP:member(1)",
              "docComment": "/**\n * Transform a point by this matrix and then do a perspective divide.\n *\n * @param point - The point to be transformed.\n *\n * @param result - The output vector, if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "transformPointP(point: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "point",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "transformPointP"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#transformVector:member(1)",
              "docComment": "/**\n * Transform a vector by this matrix.\n *\n * @param vec - The vector to be transformed.\n *\n * @param result - The output vector, if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "transformVector(vec: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "vec",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "transformVector"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#transformVectorAffine:member(1)",
              "docComment": "/**\n * Transform a vector by this matrix assuming this matrix presents an affine transformation.\n *\n * @param vec - The vector to be transformed.\n *\n * @param result - The output vector (can be the same as vec), if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "transformVectorAffine(vec: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "vec",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "transformVectorAffine"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#translateLeft:member(1)",
              "docComment": "/**\n * Pre-translate by a vector inplace.\n *\n * @remarks\n *\n * this = (translate matrix for t) * this\n *\n * @param t - The translate vector.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "translateLeft(t: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "t",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "translateLeft"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4.translateLeft:member(1)",
              "docComment": "/**\n * Pre-translate a Matrix4x4 by a vector.\n *\n * @remarks\n *\n * result = (translate matrix for t) * m\n *\n * @param m - The matrix that will be translated.\n *\n * @param t - The translate vector.\n *\n * @param result - The output matrix (can be the same as m), if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static translateLeft(m: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ", t: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "m",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "t",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "translateLeft"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#translateRight:member(1)",
              "docComment": "/**\n * Post-translate by a vector inplace.\n *\n * @remarks\n *\n * this = this * (translate matrix for t)\n *\n * @param t - The translate vector.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "translateRight(t: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "t",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "translateRight"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4.translateRight:member(1)",
              "docComment": "/**\n * Post-translate a Matrix4x4 by a vector.\n *\n * @remarks\n *\n * result = m * (translate matrix for t)\n *\n * @param m - The matrix that will be translated.\n *\n * @param t - The translate vector.\n *\n * @param result - The output matrix (can be the same as m), if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static translateRight(m: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ", t: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "m",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "t",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "translateRight"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#translation:member(1)",
              "docComment": "/**\n * Calculate a translation matrix inplace.\n *\n * @param t - The translate vector.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "translation(t: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "t",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "translation"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4.translation:member(1)",
              "docComment": "/**\n * Creates a Matrix4x4 which presents a translation.\n *\n * @param t - The translate vector.\n *\n * @param result - The output matrix. if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static translation(t: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "t",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "translation"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4#transpose:member(1)",
              "docComment": "/**\n * Calculates the transpose of this matrix inplace.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "transpose(): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "transpose"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Matrix4x4.transpose:member(1)",
              "docComment": "/**\n * Transpose a Matrix4x4.\n *\n * @param matrix - The matrix to be transposed.\n *\n * @param result - The output matrix (can be the same as matrix), if not specified, a new matrix will be created.\n *\n * @returns The output matrix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static transpose(matrix: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "matrix",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "transpose"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@zephyr3d/base!nextPowerOf2:function(1)",
          "docComment": "/**\n * Given a number, find the next number power of 2.\n *\n * @param value - The given number.\n *\n * @returns The next number power of 2.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function nextPowerOf2(value: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "nextPowerOf2"
        },
        {
          "kind": "Class",
          "canonicalReference": "@zephyr3d/base!ObservableQuaternion:class",
          "docComment": "/**\n * Observable 4 dimentional vector\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class ObservableQuaternion extends "
            },
            {
              "kind": "Reference",
              "text": "Quaternion",
              "canonicalReference": "@zephyr3d/base!Quaternion:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ObservableQuaternion",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!ObservableQuaternion#callback:member",
              "docComment": "/**\n * The callback function which will be executed when the value changed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get callback(): "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset callback(cb: () => void);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "callback",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!ObservableQuaternion#copyWithin:member(1)",
              "docComment": "/**\n * Inherited from Float32Array.copyWithin\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "copyWithin(target: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", start: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", end?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "target",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "end",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "copyWithin"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!ObservableQuaternion#fill:member(1)",
              "docComment": "/**\n * Inherited from Float32Array.fill\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fill(value: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", start?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", end?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "end",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fill"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!ObservableQuaternion#reverse:member(1)",
              "docComment": "/**\n * Inherited from Float32Array.reverse\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reverse(): "
                },
                {
                  "kind": "Reference",
                  "text": "Float32Array",
                  "canonicalReference": "!Float32Array:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "reverse"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!ObservableQuaternion#set:member(1)",
              "docComment": "/**\n * Inherited from Float32Array.set\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "set(array: "
                },
                {
                  "kind": "Reference",
                  "text": "ArrayLike",
                  "canonicalReference": "!ArrayLike:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": ", offset?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "array",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "offset",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "set"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!ObservableQuaternion#setXYZW:member(1)",
              "docComment": "/**\n * Set component values.\n *\n * @param x - The x component value.\n *\n * @param y - The y component value.\n *\n * @param z - The z component value.\n *\n * @param w - The w component value.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setXYZW(x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", z: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", w: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "z",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "w",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setXYZW"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!ObservableQuaternion#sort:member(1)",
              "docComment": "/**\n * Inherited from Float32Array.sort\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sort(compareFn?: "
                },
                {
                  "kind": "Content",
                  "text": "(a: number, b: number) => number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "compareFn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "sort"
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!ObservableQuaternion#w:member",
              "docComment": "/**\n * Get the w component value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get w(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset w(val: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "w",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!ObservableQuaternion#x:member",
              "docComment": "/**\n * Get the x component value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get x(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset x(val: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "x",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!ObservableQuaternion#y:member",
              "docComment": "/**\n * Get the y component value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get y(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset y(val: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "y",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!ObservableQuaternion#z:member",
              "docComment": "/**\n * Get the z component value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get z(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset z(val: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "z",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@zephyr3d/base!ObservableVector2:class",
          "docComment": "/**\n * Observable 2 dimentional vector\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class ObservableVector2 extends "
            },
            {
              "kind": "Reference",
              "text": "Vector2",
              "canonicalReference": "@zephyr3d/base!Vector2:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ObservableVector2",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!ObservableVector2#callback:member",
              "docComment": "/**\n * The callback function which will be executed when the value changed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get callback(): "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset callback(cb: () => void);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "callback",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!ObservableVector2#copyWithin:member(1)",
              "docComment": "/**\n * Inherited from Float32Array.copyWithin\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "copyWithin(target: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", start: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", end?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "target",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "end",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "copyWithin"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!ObservableVector2#fill:member(1)",
              "docComment": "/**\n * Inherited from Float32Array.fill\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fill(value: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", start?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", end?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "end",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fill"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!ObservableVector2#reverse:member(1)",
              "docComment": "/**\n * Inherited from Float32Array.reverse\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reverse(): "
                },
                {
                  "kind": "Reference",
                  "text": "Float32Array",
                  "canonicalReference": "!Float32Array:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "reverse"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!ObservableVector2#set:member(1)",
              "docComment": "/**\n * Inherited from Float32Array.set\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "set(array: "
                },
                {
                  "kind": "Reference",
                  "text": "ArrayLike",
                  "canonicalReference": "!ArrayLike:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": ", offset?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "array",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "offset",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "set"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!ObservableVector2#setXY:member(1)",
              "docComment": "/**\n * Set component values.\n *\n * @param x - The x component value.\n *\n * @param y - The y component value.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setXY(x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setXY"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!ObservableVector2#sort:member(1)",
              "docComment": "/**\n * Inherited from Float32Array.sort\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sort(compareFn?: "
                },
                {
                  "kind": "Content",
                  "text": "(a: number, b: number) => number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "compareFn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "sort"
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!ObservableVector2#x:member",
              "docComment": "/**\n * Get the x component value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get x(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset x(val: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "x",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!ObservableVector2#y:member",
              "docComment": "/**\n * Get the y component value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get y(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset y(val: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "y",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@zephyr3d/base!ObservableVector3:class",
          "docComment": "/**\n * Observable 3 dimentional vector\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class ObservableVector3 extends "
            },
            {
              "kind": "Reference",
              "text": "Vector3",
              "canonicalReference": "@zephyr3d/base!Vector3:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ObservableVector3",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!ObservableVector3#callback:member",
              "docComment": "/**\n * The callback function which will be executed when the value changed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get callback(): "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset callback(cb: () => void);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "callback",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!ObservableVector3#copyWithin:member(1)",
              "docComment": "/**\n * Inherited from Float32Array.copyWithin\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "copyWithin(target: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", start: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", end?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "target",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "end",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "copyWithin"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!ObservableVector3#fill:member(1)",
              "docComment": "/**\n * Inherited from Float32Array.fill\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fill(value: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", start?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", end?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "end",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fill"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!ObservableVector3#reverse:member(1)",
              "docComment": "/**\n * Inherited from Float32Array.reverse\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reverse(): "
                },
                {
                  "kind": "Reference",
                  "text": "Float32Array",
                  "canonicalReference": "!Float32Array:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "reverse"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!ObservableVector3#set:member(1)",
              "docComment": "/**\n * Inherited from Float32Array.set\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "set(array: "
                },
                {
                  "kind": "Reference",
                  "text": "ArrayLike",
                  "canonicalReference": "!ArrayLike:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": ", offset?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "array",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "offset",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "set"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!ObservableVector3#setXYZ:member(1)",
              "docComment": "/**\n * Set component values.\n *\n * @param x - The x component value.\n *\n * @param y - The y component value.\n *\n * @param z - The z component value.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setXYZ(x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", z: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "z",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setXYZ"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!ObservableVector3#sort:member(1)",
              "docComment": "/**\n * Inherited from Float32Array.sort\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sort(compareFn?: "
                },
                {
                  "kind": "Content",
                  "text": "(a: number, b: number) => number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "compareFn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "sort"
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!ObservableVector3#x:member",
              "docComment": "/**\n * Get the x component value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get x(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset x(val: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "x",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!ObservableVector3#y:member",
              "docComment": "/**\n * Get the y component value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get y(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset y(val: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "y",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!ObservableVector3#z:member",
              "docComment": "/**\n * Get the z component value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get z(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset z(val: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "z",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@zephyr3d/base!ObservableVector4:class",
          "docComment": "/**\n * Observable 4 dimentional vector\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class ObservableVector4 extends "
            },
            {
              "kind": "Reference",
              "text": "Vector4",
              "canonicalReference": "@zephyr3d/base!Vector4:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ObservableVector4",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!ObservableVector4#callback:member",
              "docComment": "/**\n * The callback function which will be executed when the value changed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get callback(): "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset callback(cb: () => void);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "callback",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!ObservableVector4#copyWithin:member(1)",
              "docComment": "/**\n * Inherited from Float32Array.copyWithin\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "copyWithin(target: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", start: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", end?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "target",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "end",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "copyWithin"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!ObservableVector4#fill:member(1)",
              "docComment": "/**\n * Inherited from Float32Array.fill\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fill(value: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", start?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", end?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "start",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "end",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fill"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!ObservableVector4#reverse:member(1)",
              "docComment": "/**\n * Inherited from Float32Array.reverse\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reverse(): "
                },
                {
                  "kind": "Reference",
                  "text": "Float32Array",
                  "canonicalReference": "!Float32Array:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "reverse"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!ObservableVector4#set:member(1)",
              "docComment": "/**\n * Inherited from Float32Array.set\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "set(array: "
                },
                {
                  "kind": "Reference",
                  "text": "ArrayLike",
                  "canonicalReference": "!ArrayLike:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": ", offset?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "array",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "offset",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "set"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!ObservableVector4#setXYZW:member(1)",
              "docComment": "/**\n * Set component values.\n *\n * @param x - The x component value.\n *\n * @param y - The y component value.\n *\n * @param z - The z component value.\n *\n * @param w - The w component value.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setXYZW(x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", z: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", w: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "z",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "w",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setXYZW"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!ObservableVector4#sort:member(1)",
              "docComment": "/**\n * Inherited from Float32Array.sort\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sort(compareFn?: "
                },
                {
                  "kind": "Content",
                  "text": "(a: number, b: number) => number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "compareFn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "sort"
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!ObservableVector4#w:member",
              "docComment": "/**\n * Get the w component value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get w(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset w(val: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "w",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!ObservableVector4#x:member",
              "docComment": "/**\n * Get the x component value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get x(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset x(val: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "x",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!ObservableVector4#y:member",
              "docComment": "/**\n * Get the y component value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get y(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset y(val: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "y",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!ObservableVector4#z:member",
              "docComment": "/**\n * Get the z component value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get z(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset z(val: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "z",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@zephyr3d/base!packFloat3:function(1)",
          "docComment": "/**\n * Compresses three floats to R11F_G11F_B10F format\n *\n * @remarks\n *\n * The implementation is adopt from https://github.com/microsoft/DirectXMath\n *\n * @param a - first of the three floats\n *\n * @param b - second of the three floats\n *\n * @param c - third of the tree floats\n *\n * @returns The compressed result\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function packFloat3(a: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", b: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", c: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "a",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "b",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "c",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "packFloat3"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@zephyr3d/base!PackRect:type",
          "docComment": "/**\n * The type of packed result.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type PackRect = "
            },
            {
              "kind": "Content",
              "text": "{\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    binIndex: number;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "PackRect",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@zephyr3d/base!parseColor:function(1)",
          "docComment": "/**\n * parse a css color value to RGBA color type.\n *\n * @param input - The css color value.\n *\n * @returns The RGBA color value.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function parseColor(input: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ColorRGBA",
              "canonicalReference": "@zephyr3d/base!ColorRGBA:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "input",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "parseColor"
        },
        {
          "kind": "Class",
          "canonicalReference": "@zephyr3d/base!Plane:class",
          "docComment": "/**\n * The plane class\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class Plane extends "
            },
            {
              "kind": "Reference",
              "text": "VectorBase",
              "canonicalReference": "@zephyr3d/base!VectorBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Plane",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Plane:constructor(1)",
              "docComment": "/**\n * Construct a plane lying on the XZ axis with upwards normal\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": []
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Plane:constructor(2)",
              "docComment": "/**\n * Construct a plane that satisfies the equation Ax+By+Cz+D=0\n *\n * @param a - The coefficient A of the equation\n *\n * @param b - The coefficient B of the equation\n *\n * @param c - The coefficient C of the equation\n *\n * @param d - The coefficient D of the equation\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(a: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", c: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", d: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "c",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Plane:constructor(3)",
              "docComment": "/**\n * Construct a plane by copying another plane\n *\n * @param other - The plane to be copied from.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Plane",
                  "canonicalReference": "@zephyr3d/base!Plane:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Plane:constructor(4)",
              "docComment": "/**\n * Construct a plane from normal and a point on the plane.\n *\n * @param origin - The point on the plane.\n *\n * @param normal - Normal of the plane.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(origin: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", normal: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "origin",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "normal",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Plane:constructor(5)",
              "docComment": "/**\n * Construct a plane from three points on the plane.\n *\n * @param p0 - The first point.\n *\n * @param p1 - The second point.\n *\n * @param p2 - The third point.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(p0: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", p1: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", p2: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 5,
              "parameters": [
                {
                  "parameterName": "p0",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "p1",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "p2",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Plane#a:member",
              "docComment": "/**\n * Get the coefficient A of the plane equation\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get a(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset a(val: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "a",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Plane#assign:member(1)",
              "docComment": "/**\n * Set coefficients of the plane equation.\n *\n * @param other - An array holding the coefficients.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "assign(other: "
                },
                {
                  "kind": "Reference",
                  "text": "ArrayLike",
                  "canonicalReference": "!ArrayLike:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "assign"
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Plane#b:member",
              "docComment": "/**\n * Get the coefficient B of the plane equation\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get b(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset b(val: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "b",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Plane#c:member",
              "docComment": "/**\n * Get the coefficient C of the plane equation\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get c(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset c(val: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "c",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Plane#d:member",
              "docComment": "/**\n * Get the coefficient D of the plane equation\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get d(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset d(val: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "d",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Plane#distanceToPoint:member(1)",
              "docComment": "/**\n * Calculate the distance from a point to the plane.\n *\n * @param p - The point\n *\n * @returns The distance value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "distanceToPoint(p: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "p",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "distanceToPoint"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Plane.flip:member(1)",
              "docComment": "/**\n * Create a new plane object by flipping another plane's normal.\n *\n * @param plane - The plane to which the normal will be flipped.\n *\n * @param result - A plane object to which the result will be written, if not specified, a new plane object will be returned.\n *\n * @returns The result plane.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static flip(plane: "
                },
                {
                  "kind": "Reference",
                  "text": "Plane",
                  "canonicalReference": "@zephyr3d/base!Plane:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Plane",
                  "canonicalReference": "@zephyr3d/base!Plane:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Plane",
                  "canonicalReference": "@zephyr3d/base!Plane:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "plane",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "flip"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Plane#getNormal:member(1)",
              "docComment": "/**\n * Get normal vector of the plane.\n *\n * @param result - A vector object to which the result will be written, if not specified, a new vector will be returned.\n *\n * @returns The result vector.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getNormal(result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getNormal"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Plane#initWithOriginNormal:member(1)",
              "docComment": "/**\n * Initialize the plane by normal vector and a point on the plane.\n *\n * @param origin - A point on the plane.\n *\n * @param normal - Normal of the plane.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initWithOriginNormal(origin: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", normal: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "origin",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "normal",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "initWithOriginNormal"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Plane#initWithPoints:member(1)",
              "docComment": "/**\n * Initialize the plane by three points on the plane.\n *\n * @param p0 - The first point.\n *\n * @param p1 - The second point.\n *\n * @param p2 - The third point.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initWithPoints(p0: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", p1: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", p2: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "p0",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "p1",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "p2",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "initWithPoints"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Plane#inplaceFlip:member(1)",
              "docComment": "/**\n * Inplace flip the normal vector .\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inplaceFlip(): "
                },
                {
                  "kind": "Reference",
                  "text": "Plane",
                  "canonicalReference": "@zephyr3d/base!Plane:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "inplaceFlip"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Plane#inplaceNormalize:member(1)",
              "docComment": "/**\n * Inplace normalize the plane equation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inplaceNormalize(): "
                },
                {
                  "kind": "Reference",
                  "text": "Plane",
                  "canonicalReference": "@zephyr3d/base!Plane:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "inplaceNormalize"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Plane#nearestPointToPoint:member(1)",
              "docComment": "/**\n * Given a point, calucate the closest point on the plane to that point.\n *\n * @param p - The given point.\n *\n * @param result - A point object to which the result will be written, if not specified, a new point object will be returned.\n *\n * @returns The result value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nearestPointToPoint(p: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "p",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "nearestPointToPoint"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Plane.normalize:member(1)",
              "docComment": "/**\n * Create a new plane object by normalizing another plane.\n *\n * @param plane - The plane that will be normalized.\n *\n * @param result - A plane object to which the result will be written, if not specified, a new plane object will be returned.\n *\n * @returns The result plane.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static normalize(plane: "
                },
                {
                  "kind": "Reference",
                  "text": "Plane",
                  "canonicalReference": "@zephyr3d/base!Plane:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Plane",
                  "canonicalReference": "@zephyr3d/base!Plane:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Plane",
                  "canonicalReference": "@zephyr3d/base!Plane:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "plane",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "normalize"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Plane#setEquation:member(1)",
              "docComment": "/**\n * Set coefficients of the plane equation.\n *\n * @param a - The coefficient A of the equation\n *\n * @param b - The coefficient B of the equation\n *\n * @param c - The coefficient C of the equation\n *\n * @param d - The coefficient D of the equation\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setEquation(a: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", c: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", d: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "c",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setEquation"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Plane.transform:member(1)",
              "docComment": "/**\n * Create a new plane object by transforming another plane.\n *\n * @param plane - The plane that will be transformed.\n *\n * @param matrix - The transform matrix.\n *\n * @param result - A plane object to which the result will be written, if not specified, a new plane object will be returned.\n *\n * @returns The result plane.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static transform(plane: "
                },
                {
                  "kind": "Reference",
                  "text": "Plane",
                  "canonicalReference": "@zephyr3d/base!Plane:class"
                },
                {
                  "kind": "Content",
                  "text": ", matrix: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Plane",
                  "canonicalReference": "@zephyr3d/base!Plane:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Plane",
                  "canonicalReference": "@zephyr3d/base!Plane:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "plane",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "matrix",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "transform"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@zephyr3d/base!PRNG:class",
          "docComment": "/**\n * Pseudorandom number generator\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class PRNG "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "PRNG",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!PRNG:constructor(1)",
              "docComment": "/**\n * Creates an instance of PRNG\n *\n * @param seed - The random seed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(seed?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "seed",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!PRNG#get:member(1)",
              "docComment": "/**\n * Gets next random value between 0 and 1\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "get"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@zephyr3d/base!Quaternion:class",
          "docComment": "/**\n * Quaternion\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class Quaternion extends "
            },
            {
              "kind": "Reference",
              "text": "VectorBase",
              "canonicalReference": "@zephyr3d/base!VectorBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Quaternion",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Quaternion:constructor(1)",
              "docComment": "/**\n * Creates a new Quaternion initialized with values.\n *\n * @param x - The x component.\n *\n * @param y - The y component.\n *\n * @param z - The z component.\n *\n * @param w - The w component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", z: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", w: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "z",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "w",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Quaternion:constructor(2)",
              "docComment": "/**\n * Creates a new Quaternion initialized with values in an array.\n *\n * @param elements - Array that contains the x, y, z, w values.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(elements: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "elements",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Quaternion:constructor(3)",
              "docComment": "/**\n * Creates a new Quaternion initialized with values in a Float32Array.\n *\n * @param array - Float32Array object that contains the x, y, z, w values.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(array: "
                },
                {
                  "kind": "Reference",
                  "text": "Float32Array",
                  "canonicalReference": "!Float32Array:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "array",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Quaternion:constructor(4)",
              "docComment": "/**\n * Creates a new Quaternion placed on a given ArrayBuffer object.\n *\n * @param buffer - The array buffer object.\n *\n * @param offset - The byte offset of the buffer where the vector placed at.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(buffer: "
                },
                {
                  "kind": "Reference",
                  "text": "ArrayBuffer",
                  "canonicalReference": "!ArrayBuffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ", offset: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "buffer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "offset",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Quaternion:constructor(5)",
              "docComment": "/**\n * Creates a new identity Quaternion.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 5,
              "parameters": []
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Quaternion.angleBetween:member(1)",
              "docComment": "/**\n * Gets the angular distance between two unit quaternions.\n *\n * @param a - The origin quaternion\n *\n * @param b - The destination quaternion\n *\n * @returns - The angle in radians\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static angleBetween(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "angleBetween"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Quaternion#clone:member(1)",
              "docComment": "/**\n * Creates a new Quaternion initialized with values from this quaternion.\n *\n * @returns The new quaternion.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clone(): "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "clone"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Quaternion.conjugate:member(1)",
              "docComment": "/**\n * Gets the conjugate of a quaternion\n *\n * @param q - The input quaternion\n *\n * @param result - The output quaternion (can be the same as q), if not specified, a new quaternion will be created.\n *\n * @returns The output quaternion\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static conjugate(q: "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "q",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "conjugate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Quaternion.dot:member(1)",
              "docComment": "/**\n * Calculates the dot product of two Quaternion's.\n *\n * @param a - The first operand.\n *\n * @param b - The second operand.\n *\n * @returns dot product of a and b\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static dot(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "dot"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Quaternion#fromAxisAngle:member(1)",
              "docComment": "/**\n * Calculates the quaternion from the given angle and rotation axis inplace.\n *\n * @param axis - The rotation axis.\n *\n * @param angle - The rotate angle.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fromAxisAngle(axis: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", angle: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "axis",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "angle",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromAxisAngle"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Quaternion.fromAxisAngle:member(1)",
              "docComment": "/**\n * Creates a quaternion from the given angle and rotation axis.\n *\n * @param axis - The rotation axis.\n *\n * @param angle - The rotate angle.\n *\n * @param result - The output quaternion, if not specified, a new quaternion will be created.\n *\n * @returns The output quaternion\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromAxisAngle(axis: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", angle: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "axis",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "angle",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromAxisAngle"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Quaternion#fromEulerAngle:member(1)",
              "docComment": "/**\n * Calculates the quaternion from an euler angle in specific order inplace.\n *\n * @param x - Angle to rotate around X axis in radians.\n *\n * @param y - Angle to rotate around Y axis in radians.\n *\n * @param z - Angle to rotate around Z axis in radians.\n *\n * @param order - Intrinsic order for conversion.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fromEulerAngle(x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", z: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", order: "
                },
                {
                  "kind": "Content",
                  "text": "'XYZ' | 'YXZ' | 'ZXY' | 'ZYX' | 'YZX' | 'XZY'"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "z",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "order",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromEulerAngle"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Quaternion.fromEulerAngle:member(1)",
              "docComment": "/**\n * Creates a quaternion from an euler angle in specific order.\n *\n * @param x - Angle to rotate around X axis in radians.\n *\n * @param y - Angle to rotate around Y axis in radians.\n *\n * @param z - Angle to rotate around Z axis in radians.\n *\n * @param order - Intrinsic order for conversion.\n *\n * @param result - The output quaternion, if not specified, a new quaternion will be created.\n *\n * @returns The output quaternion\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromEulerAngle(a: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", c: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", order: "
                },
                {
                  "kind": "Content",
                  "text": "'XYZ' | 'YXZ' | 'ZXY' | 'ZYX' | 'YZX' | 'XZY'"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "c",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "order",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromEulerAngle"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Quaternion#fromRotationMatrix:member(1)",
              "docComment": "/**\n * Calculates the quaternion from a rotation matrix inplace.\n *\n * @param matrix - The rotation matrix.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fromRotationMatrix(matrix: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "matrix",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromRotationMatrix"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Quaternion.fromRotationMatrix:member(1)",
              "docComment": "/**\n * Creates a quaternion from a rotation matrix.\n *\n * @param matrix - The rotation matrix.\n *\n * @param result - The output quaternion, if not specified, a new quaternion will be created.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static fromRotationMatrix(matrix: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "matrix",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fromRotationMatrix"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Quaternion#getAxisAngle:member(1)",
              "docComment": "/**\n * Get the rotate angle and the rotation axis for this quaternion.\n *\n * @param result - The output vector, if not specified, a new vector will be created.\n *\n * @returns An vector4 that the x, y, z component presents the axis and the w component presents the angle.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAxisAngle(result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getAxisAngle"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Quaternion#getDirectionX:member(1)",
              "docComment": "/**\n * Get the direction of axis x\n *\n * @param result - The output vector, if not specified, a new vector will be created.\n *\n * @returns The direction of axis x\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getDirectionX(result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getDirectionX"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Quaternion#getDirectionY:member(1)",
              "docComment": "/**\n * Get the direction of axis y\n *\n * @param result - The output vector, if not specified, a new vector will be created.\n *\n * @returns The direction of axis y\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getDirectionY(result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getDirectionY"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Quaternion#getDirectionZ:member(1)",
              "docComment": "/**\n * Get the direction of axis z\n *\n * @param result - The output vector, if not specified, a new vector will be created.\n *\n * @returns The direction of axis z\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getDirectionZ(result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getDirectionZ"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Quaternion#identity:member(1)",
              "docComment": "/**\n * Make this quaternion an identity quaternion\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "identity(): "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "identity"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Quaternion.identity:member(1)",
              "docComment": "/**\n * Create an identity quaternion\n *\n * @param q - The output quaternion, if not specified, a new quaternion will be created.\n *\n * @returns The output quaternion\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static identity(q?: "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "q",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "identity"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Quaternion#inplaceConjugate:member(1)",
              "docComment": "/**\n * Calculates the conjugate of this quaternion inplace.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inplaceConjugate(): "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "inplaceConjugate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Quaternion#inplaceNormalize:member(1)",
              "docComment": "/**\n * Normalize this quaternion inplace.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inplaceNormalize(): "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "inplaceNormalize"
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Quaternion#magnitude:member",
              "docComment": "/**\n * Get the length of the quaternion.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get magnitude(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "magnitude",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Quaternion#magnitudeSq:member",
              "docComment": "/**\n * Get the squared length of the quaternion.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get magnitudeSq(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "magnitudeSq",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Quaternion.multiply:member(1)",
              "docComment": "/**\n * Multiply two Quaternion's.\n *\n * @param a - The first operand.\n *\n * @param b - The second operand.\n *\n * @param result - The output quaternion (can be the same as a or b). if not specified, a new quaternion will be created.\n *\n * @returns The output quaternion\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static multiply(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "multiply"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Quaternion#multiplyLeft:member(1)",
              "docComment": "/**\n * Multiply this quaternion by another quaternion at the left side inplace.\n *\n * @param other - The quaternion that to be multiplied by.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "multiplyLeft(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "multiplyLeft"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Quaternion#multiplyRight:member(1)",
              "docComment": "/**\n * Multiply this quaternion by another quaternion at the right side inplace.\n *\n * @param other - The quaternion that to be multiplied by.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "multiplyRight(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "multiplyRight"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Quaternion.normalize:member(1)",
              "docComment": "/**\n * Normalize a quaternion\n *\n * @param q - The input quaternion\n *\n * @param result - The output quaternion (can be the same as q), if not specified, a new quaternion will be created.\n *\n * @returns The output quaternion\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static normalize(q: "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "q",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "normalize"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Quaternion.scale:member(1)",
              "docComment": "/**\n * Scale a Quaternion by a scalar number.\n *\n * @param a - The quaternion to be scaled.\n *\n * @param b - The scalar number.\n *\n * @param result - The output quaternion (can be the same quaternion as a). if not specified, a new quaternion will be created.\n *\n * @returns The output quaternion\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static scale(q: "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": ", t: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "q",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "t",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "scale"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Quaternion#scaleBy:member(1)",
              "docComment": "/**\n * Scale this quaternion by a scalar number.\n *\n * @param f - amount to scale this quaternion by.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scaleBy(f: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "f",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "scaleBy"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Quaternion#setAndNormalize:member(1)",
              "docComment": "/**\n * Set component values and then normalize the quaternion.\n *\n * @param x - The x component value.\n *\n * @param y - The y component value.\n *\n * @param z - The z component value.\n *\n * @param w - The w component value.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setAndNormalize(x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", z: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", w: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "z",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "w",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setAndNormalize"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Quaternion#setXYZW:member(1)",
              "docComment": "/**\n * Set component values.\n *\n * @param x - The x component value.\n *\n * @param y - The y component value.\n *\n * @param z - The z component value.\n *\n * @param w - The w component value.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setXYZW(x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", z: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", w: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "z",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "w",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setXYZW"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Quaternion.slerp:member(1)",
              "docComment": "/**\n * Performs a spherical linear interpolation between two quat.\n *\n * @param a - The first operand.\n *\n * @param b - The second operand.\n *\n * @param t - The interpolation amount, in the range [0-1].\n *\n * @param result - The output quaternion (can be the same as a or b), if not specified, a new quaternion will be created.\n *\n * @returns The output quaternion\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static slerp(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": ", t: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "t",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "slerp"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Quaternion#toAxisAngle:member(1)",
              "docComment": "/**\n * Calculates the rotation axis and angle for this quaternion\n *\n * @param axis - A vector that receives the rotation axis.\n *\n * @returns - The rotation angle\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toAxisAngle(axis: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "axis",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "toAxisAngle"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Quaternion#toEulerAngles:member(1)",
              "docComment": "/**\n * Convert this rotation to euler angles in ZYX order\n *\n * @param angles - A vector that receives the euler angles. If not given, a new vector will be created.\n *\n * @returns The vector that holds the euler angles.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toEulerAngles(angles?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "angles",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "toEulerAngles"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Quaternion#toMatrix3x3:member(1)",
              "docComment": "/**\n * Convert this quaternion to a 3x3 rotation matrix.\n *\n * @param matrix - The output matrix, if not specified, a new matrix will be created.\n *\n * @returns The output matrix.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toMatrix3x3(matrix?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix3x3",
                  "canonicalReference": "@zephyr3d/base!Matrix3x3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "matrix",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "toMatrix3x3"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Quaternion#toMatrix4x4:member(1)",
              "docComment": "/**\n * Convert this quaternion to a 4x4 rotation matrix.\n *\n * @remarks\n *\n * Only left top 3x3 part of the matrix will be changed.\n *\n * @param matrix - The output matrix, if not specified, a new matrix will be created.\n *\n * @returns The output matrix.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toMatrix4x4(matrix?: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "matrix",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "toMatrix4x4"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Quaternion#transform:member(1)",
              "docComment": "/**\n * Rotate a vector\n *\n * @param v - The vector to be rotated.\n *\n * @param result - The output vector, if not specified, a new vector will be created.\n *\n * @returns The rotation result.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "transform(v: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "v",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "transform"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Quaternion#unitVectorToUnitVector:member(1)",
              "docComment": "/**\n * Make a quaternion used to rotate a unit vector to another inplace.\n *\n * @param from - The unit vector to be rotated.\n *\n * @param to - The destination unit vector.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "unitVectorToUnitVector(from: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", to: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "from",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "to",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "unitVectorToUnitVector"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Quaternion.unitVectorToUnitVector:member(1)",
              "docComment": "/**\n * Creates a quaternion used to rotate a unit vector to another.\n *\n * @param from - The unit vector to be rotated.\n *\n * @param to - The destination unit vector.\n *\n * @param result - The output quaternion, if not specified, a new quaternion will be created.\n *\n * @returns The output quaternion\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static unitVectorToUnitVector(from: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", to: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Quaternion",
                  "canonicalReference": "@zephyr3d/base!Quaternion:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "from",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "to",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "unitVectorToUnitVector"
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Quaternion#w:member",
              "docComment": "/**\n * Get the w component value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get w(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset w(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "w",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Quaternion#x:member",
              "docComment": "/**\n * Get the x component value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get x(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset x(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "x",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Quaternion#y:member",
              "docComment": "/**\n * Get the y component value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get y(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset y(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "y",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Quaternion#z:member",
              "docComment": "/**\n * Get the z component value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get z(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset z(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "z",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@zephyr3d/base!Ray:class",
          "docComment": "/**\n * The ray class\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class Ray "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Ray",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Ray:constructor(1)",
              "docComment": "/**\n * Construct a ray from origin and normalized direction vector.\n *\n * @param origin - The ray origin if not specified, zero vector will be used.\n *\n * @param directionNormalized - The normalized direction vector. if not specified, (0, 0, 1) will be used.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(origin?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", directionNormalized?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "origin",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "directionNormalized",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Ray#bboxIntersectionTest:member",
              "docComment": "/**\n * Do a intersection test with an AABB.\n *\n * @param bbox - The box to be test.\n *\n * @returns true if the ray intersect with the box, otherwise false.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bboxIntersectionTest: "
                },
                {
                  "kind": "Content",
                  "text": "(bbox: "
                },
                {
                  "kind": "Reference",
                  "text": "AABB",
                  "canonicalReference": "@zephyr3d/base!AABB:class"
                },
                {
                  "kind": "Content",
                  "text": ") => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "bboxIntersectionTest",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Ray#bboxIntersectionTestEx:member",
              "docComment": "/**\n * Do a intersection test with an AABB.\n *\n * @param bbox - The box to be test.\n *\n * @returns The distance from the origin to intersected point if the ray intersect with the box, otherwise null.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bboxIntersectionTestEx: "
                },
                {
                  "kind": "Content",
                  "text": "(bbox: "
                },
                {
                  "kind": "Reference",
                  "text": "AABB",
                  "canonicalReference": "@zephyr3d/base!AABB:class"
                },
                {
                  "kind": "Content",
                  "text": ") => number | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "bboxIntersectionTestEx",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Ray#direction:member",
              "docComment": "/**\n * Get the ray direction vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get direction(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "direction",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Ray#intersectionTestTriangle:member(1)",
              "docComment": "/**\n * Do a ray triangle intersection test.\n *\n * @param v1 - The first triangle vertex.\n *\n * @param v2 - The second triangle vertex.\n *\n * @param v3 - The third triangle vertex.\n *\n * @param cull - Allow back side intersection if true.\n *\n * @returns Distance from origin to the intersected point if the ray intersects with the triangle, otherwise null.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "intersectionTestTriangle(v1: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", v2: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", v3: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", cull: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "v1",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "v2",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "v3",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "cull",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "intersectionTestTriangle"
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Ray#origin:member",
              "docComment": "/**\n * Get the ray origin point\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get origin(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "origin",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Ray#set:member(1)",
              "docComment": "/**\n * Set the ray origin and normalized direction vector.\n *\n * @param origin - The ray origin point.\n *\n * @param directionNormalized - The normalized direction vector.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "set(origin: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", directionNormalized: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "origin",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "directionNormalized",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "set"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Ray#transform:member(1)",
              "docComment": "/**\n * Transform the ray.\n *\n * @param matrix - The transform matrix.\n *\n * @param other - A ray object to which the result will be written, if not specified, a new ray object will be returned.\n *\n * @returns The transform result.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "transform(matrix: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix4x4",
                  "canonicalReference": "@zephyr3d/base!Matrix4x4:class"
                },
                {
                  "kind": "Content",
                  "text": ", other?: "
                },
                {
                  "kind": "Reference",
                  "text": "Ray",
                  "canonicalReference": "@zephyr3d/base!Ray:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Ray",
                  "canonicalReference": "@zephyr3d/base!Ray:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "matrix",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "transform"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@zephyr3d/base!RectsPacker:class",
          "docComment": "/**\n * The rectangle packer class\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class RectsPacker "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "RectsPacker",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!RectsPacker:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `RectsPacker` class\n *\n * @param width - width of image bin\n *\n * @param height - height of image bin\n *\n * @param maxBins - max count of image bins\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(width: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", height: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", maxBins?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "width",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "height",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "maxBins",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!RectsPacker#clear:member(1)",
              "docComment": "/**\n * Clear all image bins of the packer\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clear(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "clear"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!RectsPacker#insert:member(1)",
              "docComment": "/**\n * Inserts a new rectangle\n *\n * @param width - Width of the rectangle.\n *\n * @param height - Height of the rectangle.\n *\n * @returns The pack result.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "insert(width: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", height: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "PackRect",
                  "canonicalReference": "@zephyr3d/base!PackRect:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "width",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "height",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "insert"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@zephyr3d/base!REventHandlerOptions:type",
          "docComment": "/**\n * Options of event handler\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type REventHandlerOptions = "
            },
            {
              "kind": "Content",
              "text": "{\n    once?: boolean;\n    context?: unknown;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "REventHandlerOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@zephyr3d/base!SH:class",
          "docComment": "/**\n * Spherical harmonics utilities\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class SH "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "SH",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!SH.evalBasis:member(1)",
              "docComment": "/**\n * Evaluate SH basis for specific order\n *\n * @param direction - Direction to evaluate, must be normalized\n *\n * @param order - SH order\n *\n * @returns The SH basis evaluate at given direction\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static evalBasis(direction: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", order: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "direction",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "order",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "evalBasis"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!SH.evalDirectionLight:member(1)",
              "docComment": "/**\n * Evaluates a directional light and returns spectral SH data\n *\n * @param direction - Direction of the light\n *\n * @param color - Light color\n *\n * @param order - SH order\n *\n * @returns Evaluated SH data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static evalDirectionLight(direction: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", color: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", order: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "direction",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "order",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "evalDirectionLight"
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!SH.MAX_ORDER:member",
              "docComment": "/**\n * Maximum supported harmonics order\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly MAX_ORDER = "
                },
                {
                  "kind": "Content",
                  "text": "3"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MAX_ORDER",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!SH.MIN_ORDER:member",
              "docComment": "/**\n * Minimum supported harmonics order\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly MIN_ORDER = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MIN_ORDER",
              "propertyTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@zephyr3d/base!toFloat:function(1)",
          "docComment": "/**\n * Convert a number to 32 bit float value\n *\n * @param val - The number to be converted\n *\n * @returns 32bit float value\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function toFloat(val: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "val",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "toFloat"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@zephyr3d/base!Tuple2:interface",
          "docComment": "/**\n * two elements tuple type\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface Tuple2 "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "Tuple2",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@zephyr3d/base!Tuple2#x:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "x",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@zephyr3d/base!Tuple2#y:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "y",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@zephyr3d/base!Tuple3:interface",
          "docComment": "/**\n * three elements tuple type\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface Tuple3 "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "Tuple3",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@zephyr3d/base!Tuple3#x:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "x",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@zephyr3d/base!Tuple3#y:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "y",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@zephyr3d/base!Tuple3#z:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "z: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "z",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@zephyr3d/base!Tuple4:interface",
          "docComment": "/**\n * four elements tuple type\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface Tuple4 "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "Tuple4",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@zephyr3d/base!Tuple4#w:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "w: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "w",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@zephyr3d/base!Tuple4#x:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "x",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@zephyr3d/base!Tuple4#y:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "y",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@zephyr3d/base!Tuple4#z:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "z: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "z",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@zephyr3d/base!TypedArray:type",
          "docComment": "/**\n * Typed array\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type TypedArray = "
            },
            {
              "kind": "Reference",
              "text": "Int8Array",
              "canonicalReference": "!Int8Array:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Uint8Array",
              "canonicalReference": "!Uint8Array:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Uint8ClampedArray",
              "canonicalReference": "!Uint8ClampedArray:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Int16Array",
              "canonicalReference": "!Int16Array:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Uint16Array",
              "canonicalReference": "!Uint16Array:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Int32Array",
              "canonicalReference": "!Int32Array:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Uint32Array",
              "canonicalReference": "!Uint32Array:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Float32Array",
              "canonicalReference": "!Float32Array:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "TypedArray",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 16
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@zephyr3d/base!TypedArrayConstructor:type",
          "docComment": "/**\n * Type of a typed array constructor\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type TypedArrayConstructor<T extends "
            },
            {
              "kind": "Reference",
              "text": "TypedArray",
              "canonicalReference": "@zephyr3d/base!TypedArray:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    new (): T;\n    new (size: number): T;\n    new (elements: number[]): T;\n    new (buffer: "
            },
            {
              "kind": "Reference",
              "text": "ArrayBuffer",
              "canonicalReference": "!ArrayBuffer:interface"
            },
            {
              "kind": "Content",
              "text": "): T;\n    new (buffer: "
            },
            {
              "kind": "Reference",
              "text": "ArrayBuffer",
              "canonicalReference": "!ArrayBuffer:interface"
            },
            {
              "kind": "Content",
              "text": ", byteOffset: number): T;\n    new (buffer: "
            },
            {
              "kind": "Reference",
              "text": "ArrayBuffer",
              "canonicalReference": "!ArrayBuffer:interface"
            },
            {
              "kind": "Content",
              "text": ", byteOffset: number, length: number): T;\n    BYTES_PER_ELEMENT: number;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "TypedArrayConstructor",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 5,
            "endIndex": 12
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@zephyr3d/base!UnionToIntersection:type",
          "docComment": "/**\n * Convert union type to intersection\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type UnionToIntersection<U> = "
            },
            {
              "kind": "Content",
              "text": "(U extends any ? (k: U) => void : never) extends (k: infer I) => void ? I : never"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "name": "UnionToIntersection",
          "typeParameters": [
            {
              "typeParameterName": "U",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@zephyr3d/base!unpackFloat3:function(1)",
          "docComment": "/**\n * Decompresses the three floats that was compressed to R11F_G11F_B10F format\n *\n * @param pk - The compressed value\n *\n * @param result - A float array that will store the decompressed floats\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function unpackFloat3<T extends "
            },
            {
              "kind": "Content",
              "text": "number[] | "
            },
            {
              "kind": "Reference",
              "text": "Float32Array",
              "canonicalReference": "!Float32Array:interface"
            },
            {
              "kind": "Content",
              "text": ">(pk: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", result: "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "pk",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "isOptional": false
            },
            {
              "parameterName": "result",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "unpackFloat3"
        },
        {
          "kind": "Class",
          "canonicalReference": "@zephyr3d/base!Vector2:class",
          "docComment": "/**\n * 2 dimentional vector\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class Vector2 extends "
            },
            {
              "kind": "Reference",
              "text": "VectorBase",
              "canonicalReference": "@zephyr3d/base!VectorBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Vector2",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Vector2:constructor(1)",
              "docComment": "/**\n * Creates a new Vector2 initialized with values.\n *\n * @param x - The x component.\n *\n * @param y - The y component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Vector2:constructor(2)",
              "docComment": "/**\n * Creates a new Vector2 initialized with values in an array.\n *\n * @param elements - Array that contains the x, y values.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(elements: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "elements",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Vector2:constructor(3)",
              "docComment": "/**\n * Creates a new Vector2 initialized with values in a Float32Array.\n *\n * @param array - Float32Array object that contains the x, y values.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(array: "
                },
                {
                  "kind": "Reference",
                  "text": "Float32Array",
                  "canonicalReference": "!Float32Array:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "array",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Vector2:constructor(4)",
              "docComment": "/**\n * Creates a new Vector2 placed on a given ArrayBuffer object.\n *\n * @param buffer - The array buffer object.\n *\n * @param offset - The byte offset of the buffer where the vector placed at.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(buffer: "
                },
                {
                  "kind": "Reference",
                  "text": "ArrayBuffer",
                  "canonicalReference": "!ArrayBuffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ", offset: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "buffer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "offset",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Vector2:constructor(5)",
              "docComment": "/**\n * Creates a new Vector2 filled with zero values.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 5,
              "parameters": []
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector2.abs:member(1)",
              "docComment": "/**\n * Calculates the absolute values of a Vector2.\n *\n * @param a - The input vector.\n *\n * @param result - The output vector (can be the same vector as a or b). if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static abs(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "abs"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector2.add:member(1)",
              "docComment": "/**\n * Add two Vector2's.\n *\n * @param a - The first operand.\n *\n * @param b - The second operand.\n *\n * @param result - The output vector (can be the same vector as a or b). if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static add(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "add"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector2#addBy:member(1)",
              "docComment": "/**\n * Add a vector to this vector.\n *\n * @param other - The vector that will be added.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addBy(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addBy"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector2.axisNX:member(1)",
              "docComment": "/**\n * Creates a new Vector2 pointing in the negative direction of the X axis, i.e. vec2(-1, 0)\n *\n * @returns The new vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static axisNX(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "axisNX"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector2.axisNY:member(1)",
              "docComment": "/**\n * Creates a new Vector2 pointing in the negative direction of the Y axis, i.e. vec2(0, -1)\n *\n * @returns The new vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static axisNY(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "axisNY"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector2.axisPX:member(1)",
              "docComment": "/**\n * Creates a new Vector2 pointing in the positive direction of the X axis, i.e. vec2(1, 0)\n *\n * @returns The new vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static axisPX(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "axisPX"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector2.axisPY:member(1)",
              "docComment": "/**\n * Creates a new Vector2 pointing in the positive direction of the Y axis, i.e. vec2(0, 1)\n *\n * @returns The new vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static axisPY(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "axisPY"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector2#clone:member(1)",
              "docComment": "/**\n * Creates a new Vector2 initialized with values from this vector.\n *\n * @returns The new Vector2.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clone(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "clone"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector2.cross:member(1)",
              "docComment": "/**\n * Calculates the cross product of two Vector2's.\n *\n * @param a - The first operand.\n *\n * @param b - The second operand.\n *\n * @returns z component of the cross product of the two vectors.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static cross(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "cross"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector2.distance:member(1)",
              "docComment": "/**\n * Calculates the distance between two Vector2's.\n *\n * @param v1 - The first vector.\n *\n * @param v2 - The second vector.\n *\n * @returns distance between v1 and v2\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static distance(v1: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ", v2: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "v1",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "v2",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "distance"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector2.distanceSq:member(1)",
              "docComment": "/**\n * Calculates the squared distance between two Vector2's.\n *\n * @param v1 - The first vector.\n *\n * @param v2 - The second vector.\n *\n * @returns squared distance between v1 and v2\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static distanceSq(v1: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ", v2: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "v1",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "v2",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "distanceSq"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector2.div:member(1)",
              "docComment": "/**\n * Divide two Vector2's.\n *\n * @param a - The first operand.\n *\n * @param b - The second operand.\n *\n * @param result - The output vector (can be the same vector as a or b). if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static div(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "div"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector2#divBy:member(1)",
              "docComment": "/**\n * Divide this vector by a vector.\n *\n * @param other - The vector that will be divide by.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "divBy(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "divBy"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector2.dot:member(1)",
              "docComment": "/**\n * Calculates the dot product of two Vector2's.\n *\n * @param a - The first operand.\n *\n * @param b - The second operand.\n *\n * @returns dot product of a and b\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static dot(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "dot"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector2#inplaceInverse:member(1)",
              "docComment": "/**\n * Inverse this vector inplace.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inplaceInverse(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "inplaceInverse"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector2#inplaceMax:member(1)",
              "docComment": "/**\n * Set the component values to the maximum of this vector and another vector.\n *\n * @param other - The vector that to be compared with.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inplaceMax(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "inplaceMax"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector2#inplaceMin:member(1)",
              "docComment": "/**\n * Set the component values to the minimum of this vector and another vector.\n *\n * @param other - The vector that to be compared with.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inplaceMin(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "inplaceMin"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector2#inplaceNormalize:member(1)",
              "docComment": "/**\n * Normalize this vector inplace.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inplaceNormalize(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "inplaceNormalize"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector2.inverse:member(1)",
              "docComment": "/**\n * Inverse a Vector2\n *\n * @param v - The input vector\n *\n * @param result - The output vector (can be the same vector as v). if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static inverse(v: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "v",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "inverse"
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Vector2#magnitude:member",
              "docComment": "/**\n * Get the length of the vector.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get magnitude(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "magnitude",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Vector2#magnitudeSq:member",
              "docComment": "/**\n * Get the squared length of the vector.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get magnitudeSq(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "magnitudeSq",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector2.max:member(1)",
              "docComment": "/**\n * Calculates the maximum of two Vector2's.\n *\n * @param a - The first operand.\n *\n * @param b - The second operand.\n *\n * @param result - The output vector (can be the same vector as a or b). if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static max(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "max"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector2.min:member(1)",
              "docComment": "/**\n * Calculates the minimum of two Vector2's.\n *\n * @param a - The first operand.\n *\n * @param b - The second operand.\n *\n * @param result - The output vector (can be the same vector as a or b). if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static min(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "min"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector2.mul:member(1)",
              "docComment": "/**\n * Multiply two Vector2's.\n *\n * @param a - The first operand.\n *\n * @param b - The second operand.\n *\n * @param result - The output vector (can be the same vector as a or b). if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static mul(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mul"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector2#mulBy:member(1)",
              "docComment": "/**\n * Multiply this vector by a vector.\n *\n * @param other - The vector that will be multiplied by.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mulBy(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mulBy"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector2.normalize:member(1)",
              "docComment": "/**\n * Normalize a Vector2\n *\n * @param v - The input vector\n *\n * @param result - The output vector (can be the same vector as v). if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static normalize(v: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "v",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "normalize"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector2.one:member(1)",
              "docComment": "/**\n * Creates a new Vector2 initialized with one.\n *\n * @returns The new vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static one(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "one"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector2.scale:member(1)",
              "docComment": "/**\n * Scale a Vector2 by a scalar number.\n *\n * @param a - The vector to be scaled.\n *\n * @param b - The scalar number.\n *\n * @param result - The output vector (can be the same vector as a). if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static scale(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "scale"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector2#scaleBy:member(1)",
              "docComment": "/**\n * Scale this vector by a scalar number.\n *\n * @param f - amount to scale this vector by.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scaleBy(f: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "f",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "scaleBy"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector2#setAndNormalize:member(1)",
              "docComment": "/**\n * Set component values and then normalize the vector.\n *\n * @param x - The x component value.\n *\n * @param y - The y component value.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setAndNormalize(x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setAndNormalize"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector2#setXY:member(1)",
              "docComment": "/**\n * Set component values.\n *\n * @param x - The x component value.\n *\n * @param y - The y component value.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setXY(x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setXY"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector2.sub:member(1)",
              "docComment": "/**\n * Subtract two Vector2's.\n *\n * @param a - The first operand.\n *\n * @param b - The second operand.\n *\n * @param result - The output vector (can be the same vector as a or b). if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static sub(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "sub"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector2#subBy:member(1)",
              "docComment": "/**\n * Subtract a vector from this vector.\n *\n * @param other - The vector that will be subtract.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "subBy(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "subBy"
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Vector2#x:member",
              "docComment": "/**\n * Get the x component value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get x(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset x(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "x",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Vector2#y:member",
              "docComment": "/**\n * Get the y component value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get y(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset y(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "y",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector2.zero:member(1)",
              "docComment": "/**\n * Creates a new Vector2 initialized with zero values.\n *\n * @returns The new vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static zero(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "zero"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@zephyr3d/base!Vector3:class",
          "docComment": "/**\n * 3 dimentional vector\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class Vector3 extends "
            },
            {
              "kind": "Reference",
              "text": "VectorBase",
              "canonicalReference": "@zephyr3d/base!VectorBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Vector3",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Vector3:constructor(1)",
              "docComment": "/**\n * Creates a new Vector3 initialized with values.\n *\n * @param x - The x component.\n *\n * @param y - The y component.\n *\n * @param z - The z component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", z: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "z",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Vector3:constructor(2)",
              "docComment": "/**\n * Creates a new Vector3 initialized with values in an array.\n *\n * @param elements - Array that contains the x, y, z values.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(elements: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "elements",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Vector3:constructor(3)",
              "docComment": "/**\n * Creates a new Vector3 initialized with values in a Float32Array.\n *\n * @param array - Float32Array object that contains the x, y, z values.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(array: "
                },
                {
                  "kind": "Reference",
                  "text": "Float32Array",
                  "canonicalReference": "!Float32Array:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "array",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Vector3:constructor(4)",
              "docComment": "/**\n * Creates a new Vector3 placed on a given ArrayBuffer object.\n *\n * @param buffer - The array buffer object.\n *\n * @param offset - The byte offset of the buffer where the vector placed at.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(buffer: "
                },
                {
                  "kind": "Reference",
                  "text": "ArrayBuffer",
                  "canonicalReference": "!ArrayBuffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ", offset: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "buffer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "offset",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Vector3:constructor(5)",
              "docComment": "/**\n * Creates a new Vector3 filled with zero values.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 5,
              "parameters": []
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector3.abs:member(1)",
              "docComment": "/**\n * Calculates the absolute values of a Vector3.\n *\n * @param a - The input vector.\n *\n * @param result - The output vector (can be the same vector as a or b). if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static abs(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "abs"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector3.add:member(1)",
              "docComment": "/**\n * Add two Vector3's.\n *\n * @param a - The first operand.\n *\n * @param b - The second operand.\n *\n * @param result - The output vector (can be the same vector as a or b). if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static add(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "add"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector3#addBy:member(1)",
              "docComment": "/**\n * Add a vector to this vector.\n *\n * @param other - The vector that will be added.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addBy(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addBy"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector3.axisNX:member(1)",
              "docComment": "/**\n * Creates a new Vector3 pointing in the negative direction of the X axis, i.e. vec3(-1, 0, 0)\n *\n * @returns The new vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static axisNX(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "axisNX"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector3.axisNY:member(1)",
              "docComment": "/**\n * Creates a new Vector3 pointing in the negative direction of the Y axis, i.e. vec3(0, -1, 0)\n *\n * @returns The new vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static axisNY(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "axisNY"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector3.axisNZ:member(1)",
              "docComment": "/**\n * Creates a new Vector2 pointing in the negative direction of the Z axis, i.e. vec3(0, 0, -1)\n *\n * @returns The new vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static axisNZ(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "axisNZ"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector3.axisPX:member(1)",
              "docComment": "/**\n * Creates a new Vector3 pointing in the positive direction of the X axis, i.e. vec3(1, 0, 0)\n *\n * @returns The new vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static axisPX(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "axisPX"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector3.axisPY:member(1)",
              "docComment": "/**\n * Creates a new Vector3 pointing in the positive direction of the Y axis, i.e. vec3(0, 1, 0)\n *\n * @returns The new vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static axisPY(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "axisPY"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector3.axisPZ:member(1)",
              "docComment": "/**\n * Creates a new Vector3 pointing in the positive direction of the Z axis, i.e. vec3(0, 0, 1)\n *\n * @returns The new vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static axisPZ(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "axisPZ"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector3#clone:member(1)",
              "docComment": "/**\n * Creates a new Vector3 initialized with values from this vector.\n *\n * @returns The new vector.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clone(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "clone"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector3.cross:member(1)",
              "docComment": "/**\n * Calculates the cross product of two Vector3's.\n *\n * @param a - The first operand.\n *\n * @param b - The second operand.\n *\n * @returns the cross product of the two vectors.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static cross(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "cross"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector3.distance:member(1)",
              "docComment": "/**\n * Calculates the distance between two Vector3's.\n *\n * @param v1 - The first vector.\n *\n * @param v2 - The second vector.\n *\n * @returns distance between v1 and v2\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static distance(v1: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", v2: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "v1",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "v2",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "distance"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector3.distanceSq:member(1)",
              "docComment": "/**\n * Calculates the squared distance between two Vector3's.\n *\n * @param v1 - The first vector.\n *\n * @param v2 - The second vector.\n *\n * @returns squared distance between v1 and v2\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static distanceSq(v1: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", v2: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "v1",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "v2",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "distanceSq"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector3.div:member(1)",
              "docComment": "/**\n * Divide two Vector3's.\n *\n * @param a - The first operand.\n *\n * @param b - The second operand.\n *\n * @param result - The output vector (can be the same vector as a or b). if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static div(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "div"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector3#divBy:member(1)",
              "docComment": "/**\n * Divide this vector by a vector.\n *\n * @param other - The vector that will be divide by.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "divBy(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "divBy"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector3.dot:member(1)",
              "docComment": "/**\n * Calculates the dot product of two Vector3's.\n *\n * @param a - The first operand.\n *\n * @param b - The second operand.\n *\n * @returns dot product of a and b\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static dot(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "dot"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector3#inplaceInverse:member(1)",
              "docComment": "/**\n * Inverse this vector inplace.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inplaceInverse(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "inplaceInverse"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector3#inplaceMax:member(1)",
              "docComment": "/**\n * Set the component values to the maximum of this vector and another vector.\n *\n * @param other - The vector that to be compared with.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inplaceMax(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "inplaceMax"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector3#inplaceMin:member(1)",
              "docComment": "/**\n * Set the component values to the minimum of this vector and another vector.\n *\n * @param other - The vector that to be compared with.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inplaceMin(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "inplaceMin"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector3#inplaceNormalize:member(1)",
              "docComment": "/**\n * Normalize this vector inplace.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inplaceNormalize(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "inplaceNormalize"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector3.inverse:member(1)",
              "docComment": "/**\n * Inverse a Vector3\n *\n * @param v - The input vector\n *\n * @param result - The output vector (can be the same vector as v). if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static inverse(v: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "v",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "inverse"
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Vector3#magnitude:member",
              "docComment": "/**\n * Get the length of the vector.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get magnitude(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "magnitude",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Vector3#magnitudeSq:member",
              "docComment": "/**\n * Get the squared length of the vector.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get magnitudeSq(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "magnitudeSq",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector3.max:member(1)",
              "docComment": "/**\n * Calculates the maximum of two Vector3's.\n *\n * @param a - The first operand.\n *\n * @param b - The second operand.\n *\n * @param result - The output vector (can be the same vector as a or b). if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static max(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "max"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector3.min:member(1)",
              "docComment": "/**\n * Calculates the minimum of two Vector3's.\n *\n * @param a - The first operand.\n *\n * @param b - The second operand.\n *\n * @param result - The output vector (can be the same vector as a or b). if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static min(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "min"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector3.mul:member(1)",
              "docComment": "/**\n * Multiply two Vector3's.\n *\n * @param a - The first operand.\n *\n * @param b - The second operand.\n *\n * @param result - The output vector (can be the same vector as a or b). if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static mul(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mul"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector3#mulBy:member(1)",
              "docComment": "/**\n * Multiply this vector by a vector.\n *\n * @param other - The vector that will be multiplied by.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mulBy(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mulBy"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector3.normalize:member(1)",
              "docComment": "/**\n * Normalize a Vector3\n *\n * @param v - The input vector\n *\n * @param result - The output vector (can be the same vector as v). if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static normalize(v: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "v",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "normalize"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector3.one:member(1)",
              "docComment": "/**\n * Creates a new Vector3 initialized with one.\n *\n * @returns The new vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static one(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "one"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector3.scale:member(1)",
              "docComment": "/**\n * Scale a Vector3 by a scalar number.\n *\n * @param a - The vector to be scaled.\n *\n * @param b - The scalar number.\n *\n * @param result - The output vector (can be the same vector as a). if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static scale(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "scale"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector3#scaleBy:member(1)",
              "docComment": "/**\n * Scale this vector by a scalar number.\n *\n * @param f - amount to scale this vector by.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scaleBy(f: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "f",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "scaleBy"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector3#setAndNormalize:member(1)",
              "docComment": "/**\n * Set component values and then normalize the vector.\n *\n * @param x - The x component value.\n *\n * @param y - The y component value.\n *\n * @param z - The z component value.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setAndNormalize(x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", z: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "z",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setAndNormalize"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector3#setXYZ:member(1)",
              "docComment": "/**\n * Set component values.\n *\n * @param x - The x component value.\n *\n * @param y - The y component value.\n *\n * @param z - The z component value.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setXYZ(x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", z: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "z",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setXYZ"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector3.sub:member(1)",
              "docComment": "/**\n * Subtract two Vector3's.\n *\n * @param a - The first operand.\n *\n * @param b - The second operand.\n *\n * @param result - The output vector (can be the same vector as a or b). if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static sub(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "sub"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector3#subBy:member(1)",
              "docComment": "/**\n * Subtract a vector from this vector.\n *\n * @param other - The vector that will be subtract.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "subBy(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "subBy"
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Vector3#x:member",
              "docComment": "/**\n * Get the x component value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get x(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset x(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "x",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector3#xy:member(1)",
              "docComment": "/**\n * Creates a new Vector2 initialized with x, y component of this vector.\n *\n * @returns The new vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "xy(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "xy"
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Vector3#y:member",
              "docComment": "/**\n * Get the y component value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get y(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset y(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "y",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Vector3#z:member",
              "docComment": "/**\n * Get the z component value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get z(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset z(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "z",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector3.zero:member(1)",
              "docComment": "/**\n * Creates a new Vector3 initialized with zero values.\n *\n * @returns The new vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static zero(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "zero"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@zephyr3d/base!Vector4:class",
          "docComment": "/**\n * 4 dimentional vector\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class Vector4 extends "
            },
            {
              "kind": "Reference",
              "text": "VectorBase",
              "canonicalReference": "@zephyr3d/base!VectorBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Vector4",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Vector4:constructor(1)",
              "docComment": "/**\n * Creates a new Vector4 initialized with values.\n *\n * @param x - The x component.\n *\n * @param y - The y component.\n *\n * @param z - The z component.\n *\n * @param w - The w component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", z: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", w: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "z",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "w",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Vector4:constructor(2)",
              "docComment": "/**\n * Creates a new Vector4 initialized with values in an array.\n *\n * @param elements - Array that contains the x, y, z, w values.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(elements: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "elements",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Vector4:constructor(3)",
              "docComment": "/**\n * Creates a new Vector4 initialized with values in a Float32Array.\n *\n * @param array - Float32Array object that contains the x, y, z, w values.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(array: "
                },
                {
                  "kind": "Reference",
                  "text": "Float32Array",
                  "canonicalReference": "!Float32Array:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "array",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Vector4:constructor(4)",
              "docComment": "/**\n * Creates a new Vector4 placed on a given ArrayBuffer object.\n *\n * @param buffer - The array buffer object.\n *\n * @param offset - The byte offset of the buffer where the vector placed at.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(buffer: "
                },
                {
                  "kind": "Reference",
                  "text": "ArrayBuffer",
                  "canonicalReference": "!ArrayBuffer:interface"
                },
                {
                  "kind": "Content",
                  "text": ", offset: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "buffer",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "offset",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@zephyr3d/base!Vector4:constructor(5)",
              "docComment": "/**\n * Creates a new Vector4 filled with zero values.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 5,
              "parameters": []
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector4.abs:member(1)",
              "docComment": "/**\n * Calculates the absolute values of a Vector4.\n *\n * @param a - The input vector.\n *\n * @param result - The output vector (can be the same vector as a or b). if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static abs(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "abs"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector4.add:member(1)",
              "docComment": "/**\n * Add two Vector4's.\n *\n * @param a - The first operand.\n *\n * @param b - The second operand.\n *\n * @param result - The output vector (can be the same vector as a or b). if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static add(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "add"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector4#addBy:member(1)",
              "docComment": "/**\n * Add a vector to this vector.\n *\n * @param other - The vector that will be added.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addBy(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addBy"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector4.axisNW:member(1)",
              "docComment": "/**\n * Creates a new Vector4 pointing in the negative direction of the W axis, i.e. vec4(0, 0, 0, -1)\n *\n * @returns The new vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static axisNW(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "axisNW"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector4.axisNX:member(1)",
              "docComment": "/**\n * Creates a new Vector4 pointing in the negative direction of the X axis, i.e. vec4(-1, 0, 0, 0)\n *\n * @returns The new vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static axisNX(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "axisNX"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector4.axisNY:member(1)",
              "docComment": "/**\n * Creates a new Vector4 pointing in the negative direction of the Y axis, i.e. vec4(0, -1, 0, 0)\n *\n * @returns The new vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static axisNY(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "axisNY"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector4.axisNZ:member(1)",
              "docComment": "/**\n * Creates a new Vector4 pointing in the negative direction of the Z axis, i.e. vec4(0, 0, -1, 0)\n *\n * @returns The new vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static axisNZ(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "axisNZ"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector4.axisPW:member(1)",
              "docComment": "/**\n * Creates a new Vector4 pointing in the positive direction of the W axis, i.e. vec4(0, 0, 0, 1)\n *\n * @returns The new vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static axisPW(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "axisPW"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector4.axisPX:member(1)",
              "docComment": "/**\n * Creates a new Vector4 pointing in the positive direction of the X axis, i.e. vec4(1, 0, 0, 0)\n *\n * @returns The new vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static axisPX(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "axisPX"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector4.axisPY:member(1)",
              "docComment": "/**\n * Creates a new Vector4 pointing in the positive direction of the Y axis, i.e. vec4(0, 1, 0, 0)\n *\n * @returns The new vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static axisPY(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "axisPY"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector4.axisPZ:member(1)",
              "docComment": "/**\n * Creates a new Vector4 pointing in the positive direction of the Z axis, i.e. vec4(0, 0, 1, 0)\n *\n * @returns The new vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static axisPZ(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "axisPZ"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector4#clone:member(1)",
              "docComment": "/**\n * Creates a new Vector4 initialized with values from this vector.\n *\n * @returns The new vector.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clone(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "clone"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector4.div:member(1)",
              "docComment": "/**\n * Divide two Vector4's.\n *\n * @param a - The first operand.\n *\n * @param b - The second operand.\n *\n * @param result - The output vector (can be the same vector as a or b). if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static div(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "div"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector4#divBy:member(1)",
              "docComment": "/**\n * Divide this vector by a vector.\n *\n * @param other - The vector that will be divide by.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "divBy(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "divBy"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector4.dot:member(1)",
              "docComment": "/**\n * Calculates the dot product of two Vector4's.\n *\n * @param a - The first operand.\n *\n * @param b - The second operand.\n *\n * @returns dot product of a and b\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static dot(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "dot"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector4#inplaceInverse:member(1)",
              "docComment": "/**\n * Inverse this vector inplace.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inplaceInverse(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "inplaceInverse"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector4#inplaceMax:member(1)",
              "docComment": "/**\n * Set the component values to the maximum of this vector and another vector.\n *\n * @param other - The vector that to be compared with.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inplaceMax(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "inplaceMax"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector4#inplaceMin:member(1)",
              "docComment": "/**\n * Set the component values to the minimum of this vector and another vector.\n *\n * @param other - The vector that to be compared with.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inplaceMin(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "inplaceMin"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector4#inplaceNormalize:member(1)",
              "docComment": "/**\n * Normalize this vector inplace.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inplaceNormalize(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "inplaceNormalize"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector4.inverse:member(1)",
              "docComment": "/**\n * Inverse a Vector4\n *\n * @param v - The input vector\n *\n * @param result - The output vector (can be the same vector as v). if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static inverse(v: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "v",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "inverse"
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Vector4#magnitude:member",
              "docComment": "/**\n * Get the length of the vector.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get magnitude(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "magnitude",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Vector4#magnitudeSq:member",
              "docComment": "/**\n * Get the squared length of the vector.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get magnitudeSq(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "magnitudeSq",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector4.max:member(1)",
              "docComment": "/**\n * Calculates the maximum of two Vector4's.\n *\n * @param a - The first operand.\n *\n * @param b - The second operand.\n *\n * @param result - The output vector (can be the same vector as a or b). if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static max(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "max"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector4.min:member(1)",
              "docComment": "/**\n * Calculates the minimum of two Vector4's.\n *\n * @param a - The first operand.\n *\n * @param b - The second operand.\n *\n * @param result - The output vector (can be the same vector as a or b). if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static min(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "min"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector4.mul:member(1)",
              "docComment": "/**\n * Multiply two Vector4's.\n *\n * @param a - The first operand.\n *\n * @param b - The second operand.\n *\n * @param result - The output vector (can be the same vector as a or b). if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static mul(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mul"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector4#mulBy:member(1)",
              "docComment": "/**\n * Multiply this vector by a vector.\n *\n * @param other - The vector that will be multiplied by.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mulBy(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mulBy"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector4.normalize:member(1)",
              "docComment": "/**\n * Normalize a Vector4\n *\n * @param v - The input vector\n *\n * @param result - The output vector (can be the same as v). if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static normalize(v: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "v",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "normalize"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector4.one:member(1)",
              "docComment": "/**\n * Creates a new Vector4 initialized with one.\n *\n * @returns The new vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static one(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "one"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector4.scale:member(1)",
              "docComment": "/**\n * Scale a Vector4 by a scalar number.\n *\n * @param a - The vector to be scaled.\n *\n * @param b - The scalar number.\n *\n * @param result - The output vector (can be the same vector as a). if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static scale(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "scale"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector4#scaleBy:member(1)",
              "docComment": "/**\n * Scale this vector by a scalar number.\n *\n * @param f - amount to scale this vector by.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scaleBy(f: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "f",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "scaleBy"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector4#setAndNormalize:member(1)",
              "docComment": "/**\n * Set component values and then normalize the vector.\n *\n * @param x - The x component value.\n *\n * @param y - The y component value.\n *\n * @param z - The z component value.\n *\n * @param w - The w component value.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setAndNormalize(x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", z: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", w: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "z",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "w",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setAndNormalize"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector4#setXYZW:member(1)",
              "docComment": "/**\n * Set component values.\n *\n * @param x - The x component value.\n *\n * @param y - The y component value.\n *\n * @param z - The z component value.\n *\n * @param w - The w component value.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setXYZW(x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", z: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", w: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "z",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "w",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setXYZW"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector4.sub:member(1)",
              "docComment": "/**\n * Subtract two Vector4's.\n *\n * @param a - The first operand.\n *\n * @param b - The second operand.\n *\n * @param result - The output vector (can be the same vector as a or b). if not specified, a new vector will be created.\n *\n * @returns The output vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static sub(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ", result?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "sub"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector4#subBy:member(1)",
              "docComment": "/**\n * Subtract a vector from this vector.\n *\n * @param other - The vector that will be subtract.\n *\n * @returns self\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "subBy(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "subBy"
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Vector4#w:member",
              "docComment": "/**\n * Get the w component value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get w(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset w(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "w",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Vector4#x:member",
              "docComment": "/**\n * Get the x component value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get x(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset x(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "x",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector4#xy:member(1)",
              "docComment": "/**\n * Creates a new Vector2 initialized with x, y component of this vector.\n *\n * @returns The new vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "xy(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector2",
                  "canonicalReference": "@zephyr3d/base!Vector2:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "xy"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector4#xyz:member(1)",
              "docComment": "/**\n * Creates a new Vector3 initialized with x, y, z component of this vector.\n *\n * @returns The new vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "xyz(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector3",
                  "canonicalReference": "@zephyr3d/base!Vector3:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "xyz"
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Vector4#y:member",
              "docComment": "/**\n * Get the y component value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get y(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset y(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "y",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@zephyr3d/base!Vector4#z:member",
              "docComment": "/**\n * Get the z component value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get z(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset z(v: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "z",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!Vector4.zero:member(1)",
              "docComment": "/**\n * Creates a new Vector4 initialized with zero values.\n *\n * @returns The new vector\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static zero(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vector4",
                  "canonicalReference": "@zephyr3d/base!Vector4:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "zero"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@zephyr3d/base!VectorBase:class",
          "docComment": "/**\n * Base class for vector and matrix types.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class VectorBase extends "
            },
            {
              "kind": "Reference",
              "text": "Float32Array",
              "canonicalReference": "!Float32Array:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/index.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "VectorBase",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!VectorBase#equalsTo:member(1)",
              "docComment": "/**\n * Check if all data is close enough to another\n *\n * @param other - The data to be compared with.\n *\n * @param epsilon - The minimal error allowd.\n *\n * @returns true if close enough, otherwise false.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "equalsTo(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Float32Array",
                  "canonicalReference": "!Float32Array:interface"
                },
                {
                  "kind": "Content",
                  "text": ", epsl?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "epsl",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "equalsTo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!VectorBase#isNaN:member(1)",
              "docComment": "/**\n * Check the data for the presence of NaN.\n *\n * @returns true if NaN is present, otherwise false.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isNaN(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "isNaN"
            },
            {
              "kind": "Method",
              "canonicalReference": "@zephyr3d/base!VectorBase#toString:member(1)",
              "docComment": "/**\n * Convert this to string object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toString(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toString"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        }
      ]
    }
  ]
}
