{"version":3,"file":"demo-5.js","sources":["../../../../../common/temp/node_modules/.pnpm/lil-gui@0.19.2/node_modules/lil-gui/dist/lil-gui.esm.js"],"sourcesContent":["/**\n * lil-gui\n * https://lil-gui.georgealways.com\n * @version 0.19.2\n * @author George Michael Brower\n * @license MIT\n */\n\n/**\n * Base class for all controllers.\n */\nclass Controller {\n\n\tconstructor( parent, object, property, className, elementType = 'div' ) {\n\n\t\t/**\n\t\t * The GUI that contains this controller.\n\t\t * @type {GUI}\n\t\t */\n\t\tthis.parent = parent;\n\n\t\t/**\n\t\t * The object this controller will modify.\n\t\t * @type {object}\n\t\t */\n\t\tthis.object = object;\n\n\t\t/**\n\t\t * The name of the property to control.\n\t\t * @type {string}\n\t\t */\n\t\tthis.property = property;\n\n\t\t/**\n\t\t * Used to determine if the controller is disabled.\n\t\t * Use `controller.disable( true|false )` to modify this value.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._disabled = false;\n\n\t\t/**\n\t\t * Used to determine if the Controller is hidden.\n\t\t * Use `controller.show()` or `controller.hide()` to change this.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._hidden = false;\n\n\t\t/**\n\t\t * The value of `object[ property ]` when the controller was created.\n\t\t * @type {any}\n\t\t */\n\t\tthis.initialValue = this.getValue();\n\n\t\t/**\n\t\t * The outermost container DOM element for this controller.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.domElement = document.createElement( elementType );\n\t\tthis.domElement.classList.add( 'controller' );\n\t\tthis.domElement.classList.add( className );\n\n\t\t/**\n\t\t * The DOM element that contains the controller's name.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.$name = document.createElement( 'div' );\n\t\tthis.$name.classList.add( 'name' );\n\n\t\tController.nextNameID = Controller.nextNameID || 0;\n\t\tthis.$name.id = `lil-gui-name-${++Controller.nextNameID}`;\n\n\t\t/**\n\t\t * The DOM element that contains the controller's \"widget\" (which differs by controller type).\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.$widget = document.createElement( 'div' );\n\t\tthis.$widget.classList.add( 'widget' );\n\n\t\t/**\n\t\t * The DOM element that receives the disabled attribute when using disable().\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.$disable = this.$widget;\n\n\t\tthis.domElement.appendChild( this.$name );\n\t\tthis.domElement.appendChild( this.$widget );\n\n\t\t// Don't fire global key events while typing in a controller\n\t\tthis.domElement.addEventListener( 'keydown', e => e.stopPropagation() );\n\t\tthis.domElement.addEventListener( 'keyup', e => e.stopPropagation() );\n\n\t\tthis.parent.children.push( this );\n\t\tthis.parent.controllers.push( this );\n\n\t\tthis.parent.$children.appendChild( this.domElement );\n\n\t\tthis._listenCallback = this._listenCallback.bind( this );\n\n\t\tthis.name( property );\n\n\t}\n\n\t/**\n\t * Sets the name of the controller and its label in the GUI.\n\t * @param {string} name\n\t * @returns {this}\n\t */\n\tname( name ) {\n\t\t/**\n\t\t * The controller's name. Use `controller.name( 'Name' )` to modify this value.\n\t\t * @type {string}\n\t\t */\n\t\tthis._name = name;\n\t\tthis.$name.textContent = name;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Pass a function to be called whenever the value is modified by this controller.\n\t * The function receives the new value as its first parameter. The value of `this` will be the\n\t * controller.\n\t *\n\t * For function controllers, the `onChange` callback will be fired on click, after the function\n\t * executes.\n\t * @param {Function} callback\n\t * @returns {this}\n\t * @example\n\t * const controller = gui.add( object, 'property' );\n\t *\n\t * controller.onChange( function( v ) {\n\t * \tconsole.log( 'The value is now ' + v );\n\t * \tconsole.assert( this === controller );\n\t * } );\n\t */\n\tonChange( callback ) {\n\t\t/**\n\t\t * Used to access the function bound to `onChange` events. Don't modify this value directly.\n\t\t * Use the `controller.onChange( callback )` method instead.\n\t\t * @type {Function}\n\t\t */\n\t\tthis._onChange = callback;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Calls the onChange methods of this controller and its parent GUI.\n\t * @protected\n\t */\n\t_callOnChange() {\n\n\t\tthis.parent._callOnChange( this );\n\n\t\tif ( this._onChange !== undefined ) {\n\t\t\tthis._onChange.call( this, this.getValue() );\n\t\t}\n\n\t\tthis._changed = true;\n\n\t}\n\n\t/**\n\t * Pass a function to be called after this controller has been modified and loses focus.\n\t * @param {Function} callback\n\t * @returns {this}\n\t * @example\n\t * const controller = gui.add( object, 'property' );\n\t *\n\t * controller.onFinishChange( function( v ) {\n\t * \tconsole.log( 'Changes complete: ' + v );\n\t * \tconsole.assert( this === controller );\n\t * } );\n\t */\n\tonFinishChange( callback ) {\n\t\t/**\n\t\t * Used to access the function bound to `onFinishChange` events. Don't modify this value\n\t\t * directly. Use the `controller.onFinishChange( callback )` method instead.\n\t\t * @type {Function}\n\t\t */\n\t\tthis._onFinishChange = callback;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Should be called by Controller when its widgets lose focus.\n\t * @protected\n\t */\n\t_callOnFinishChange() {\n\n\t\tif ( this._changed ) {\n\n\t\t\tthis.parent._callOnFinishChange( this );\n\n\t\t\tif ( this._onFinishChange !== undefined ) {\n\t\t\t\tthis._onFinishChange.call( this, this.getValue() );\n\t\t\t}\n\n\t\t}\n\n\t\tthis._changed = false;\n\n\t}\n\n\t/**\n\t * Sets the controller back to its initial value.\n\t * @returns {this}\n\t */\n\treset() {\n\t\tthis.setValue( this.initialValue );\n\t\tthis._callOnFinishChange();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Enables this controller.\n\t * @param {boolean} enabled\n\t * @returns {this}\n\t * @example\n\t * controller.enable();\n\t * controller.enable( false ); // disable\n\t * controller.enable( controller._disabled ); // toggle\n\t */\n\tenable( enabled = true ) {\n\t\treturn this.disable( !enabled );\n\t}\n\n\t/**\n\t * Disables this controller.\n\t * @param {boolean} disabled\n\t * @returns {this}\n\t * @example\n\t * controller.disable();\n\t * controller.disable( false ); // enable\n\t * controller.disable( !controller._disabled ); // toggle\n\t */\n\tdisable( disabled = true ) {\n\n\t\tif ( disabled === this._disabled ) return this;\n\n\t\tthis._disabled = disabled;\n\n\t\tthis.domElement.classList.toggle( 'disabled', disabled );\n\t\tthis.$disable.toggleAttribute( 'disabled', disabled );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Shows the Controller after it's been hidden.\n\t * @param {boolean} show\n\t * @returns {this}\n\t * @example\n\t * controller.show();\n\t * controller.show( false ); // hide\n\t * controller.show( controller._hidden ); // toggle\n\t */\n\tshow( show = true ) {\n\n\t\tthis._hidden = !show;\n\n\t\tthis.domElement.style.display = this._hidden ? 'none' : '';\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Hides the Controller.\n\t * @returns {this}\n\t */\n\thide() {\n\t\treturn this.show( false );\n\t}\n\n\t/**\n\t * Changes this controller into a dropdown of options.\n\t *\n\t * Calling this method on an option controller will simply update the options. However, if this\n\t * controller was not already an option controller, old references to this controller are\n\t * destroyed, and a new controller is added to the end of the GUI.\n\t * @example\n\t * // safe usage\n\t *\n\t * gui.add( obj, 'prop1' ).options( [ 'a', 'b', 'c' ] );\n\t * gui.add( obj, 'prop2' ).options( { Big: 10, Small: 1 } );\n\t * gui.add( obj, 'prop3' );\n\t *\n\t * // danger\n\t *\n\t * const ctrl1 = gui.add( obj, 'prop1' );\n\t * gui.add( obj, 'prop2' );\n\t *\n\t * // calling options out of order adds a new controller to the end...\n\t * const ctrl2 = ctrl1.options( [ 'a', 'b', 'c' ] );\n\t *\n\t * // ...and ctrl1 now references a controller that doesn't exist\n\t * assert( ctrl2 !== ctrl1 )\n\t * @param {object|Array} options\n\t * @returns {Controller}\n\t */\n\toptions( options ) {\n\t\tconst controller = this.parent.add( this.object, this.property, options );\n\t\tcontroller.name( this._name );\n\t\tthis.destroy();\n\t\treturn controller;\n\t}\n\n\t/**\n\t * Sets the minimum value. Only works on number controllers.\n\t * @param {number} min\n\t * @returns {this}\n\t */\n\tmin( min ) {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the maximum value. Only works on number controllers.\n\t * @param {number} max\n\t * @returns {this}\n\t */\n\tmax( max ) {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Values set by this controller will be rounded to multiples of `step`. Only works on number\n\t * controllers.\n\t * @param {number} step\n\t * @returns {this}\n\t */\n\tstep( step ) {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Rounds the displayed value to a fixed number of decimals, without affecting the actual value\n\t * like `step()`. Only works on number controllers.\n\t * @example\n\t * gui.add( object, 'property' ).listen().decimals( 4 );\n\t * @param {number} decimals\n\t * @returns {this}\n\t */\n\tdecimals( decimals ) {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Calls `updateDisplay()` every animation frame. Pass `false` to stop listening.\n\t * @param {boolean} listen\n\t * @returns {this}\n\t */\n\tlisten( listen = true ) {\n\n\t\t/**\n\t\t * Used to determine if the controller is currently listening. Don't modify this value\n\t\t * directly. Use the `controller.listen( true|false )` method instead.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._listening = listen;\n\n\t\tif ( this._listenCallbackID !== undefined ) {\n\t\t\tcancelAnimationFrame( this._listenCallbackID );\n\t\t\tthis._listenCallbackID = undefined;\n\t\t}\n\n\t\tif ( this._listening ) {\n\t\t\tthis._listenCallback();\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t_listenCallback() {\n\n\t\tthis._listenCallbackID = requestAnimationFrame( this._listenCallback );\n\n\t\t// To prevent framerate loss, make sure the value has changed before updating the display.\n\t\t// Note: save() is used here instead of getValue() only because of ColorController. The !== operator\n\t\t// won't work for color objects or arrays, but ColorController.save() always returns a string.\n\n\t\tconst curValue = this.save();\n\n\t\tif ( curValue !== this._listenPrevValue ) {\n\t\t\tthis.updateDisplay();\n\t\t}\n\n\t\tthis._listenPrevValue = curValue;\n\n\t}\n\n\t/**\n\t * Returns `object[ property ]`.\n\t * @returns {any}\n\t */\n\tgetValue() {\n\t\treturn this.object[ this.property ];\n\t}\n\n\t/**\n\t * Sets the value of `object[ property ]`, invokes any `onChange` handlers and updates the display.\n\t * @param {any} value\n\t * @returns {this}\n\t */\n\tsetValue( value ) {\n\n\t\tif ( this.getValue() !== value ) {\n\n\t\t\tthis.object[ this.property ] = value;\n\t\t\tthis._callOnChange();\n\t\t\tthis.updateDisplay();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Updates the display to keep it in sync with the current value. Useful for updating your\n\t * controllers when their values have been modified outside of the GUI.\n\t * @returns {this}\n\t */\n\tupdateDisplay() {\n\t\treturn this;\n\t}\n\n\tload( value ) {\n\t\tthis.setValue( value );\n\t\tthis._callOnFinishChange();\n\t\treturn this;\n\t}\n\n\tsave() {\n\t\treturn this.getValue();\n\t}\n\n\t/**\n\t * Destroys this controller and removes it from the parent GUI.\n\t */\n\tdestroy() {\n\t\tthis.listen( false );\n\t\tthis.parent.children.splice( this.parent.children.indexOf( this ), 1 );\n\t\tthis.parent.controllers.splice( this.parent.controllers.indexOf( this ), 1 );\n\t\tthis.parent.$children.removeChild( this.domElement );\n\t}\n\n}\n\nclass BooleanController extends Controller {\n\n\tconstructor( parent, object, property ) {\n\n\t\tsuper( parent, object, property, 'boolean', 'label' );\n\n\t\tthis.$input = document.createElement( 'input' );\n\t\tthis.$input.setAttribute( 'type', 'checkbox' );\n\t\tthis.$input.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$widget.appendChild( this.$input );\n\n\t\tthis.$input.addEventListener( 'change', () => {\n\t\t\tthis.setValue( this.$input.checked );\n\t\t\tthis._callOnFinishChange();\n\t\t} );\n\n\t\tthis.$disable = this.$input;\n\n\t\tthis.updateDisplay();\n\n\t}\n\n\tupdateDisplay() {\n\t\tthis.$input.checked = this.getValue();\n\t\treturn this;\n\t}\n\n}\n\nfunction normalizeColorString( string ) {\n\n\tlet match, result;\n\n\tif ( match = string.match( /(#|0x)?([a-f0-9]{6})/i ) ) {\n\n\t\tresult = match[ 2 ];\n\n\t} else if ( match = string.match( /rgb\\(\\s*(\\d*)\\s*,\\s*(\\d*)\\s*,\\s*(\\d*)\\s*\\)/ ) ) {\n\n\t\tresult = parseInt( match[ 1 ] ).toString( 16 ).padStart( 2, 0 )\n\t\t\t+ parseInt( match[ 2 ] ).toString( 16 ).padStart( 2, 0 )\n\t\t\t+ parseInt( match[ 3 ] ).toString( 16 ).padStart( 2, 0 );\n\n\t} else if ( match = string.match( /^#?([a-f0-9])([a-f0-9])([a-f0-9])$/i ) ) {\n\n\t\tresult = match[ 1 ] + match[ 1 ] + match[ 2 ] + match[ 2 ] + match[ 3 ] + match[ 3 ];\n\n\t}\n\n\tif ( result ) {\n\t\treturn '#' + result;\n\t}\n\n\treturn false;\n\n}\n\nconst STRING = {\n\tisPrimitive: true,\n\tmatch: v => typeof v === 'string',\n\tfromHexString: normalizeColorString,\n\ttoHexString: normalizeColorString\n};\n\nconst INT = {\n\tisPrimitive: true,\n\tmatch: v => typeof v === 'number',\n\tfromHexString: string => parseInt( string.substring( 1 ), 16 ),\n\ttoHexString: value => '#' + value.toString( 16 ).padStart( 6, 0 )\n};\n\nconst ARRAY = {\n\tisPrimitive: false,\n\n\t// The arrow function is here to appease tree shakers like esbuild or webpack.\n\t// See https://esbuild.github.io/api/#tree-shaking\n\tmatch: v => Array.isArray( v ),\n\n\tfromHexString( string, target, rgbScale = 1 ) {\n\n\t\tconst int = INT.fromHexString( string );\n\n\t\ttarget[ 0 ] = ( int >> 16 & 255 ) / 255 * rgbScale;\n\t\ttarget[ 1 ] = ( int >> 8 & 255 ) / 255 * rgbScale;\n\t\ttarget[ 2 ] = ( int & 255 ) / 255 * rgbScale;\n\n\t},\n\ttoHexString( [ r, g, b ], rgbScale = 1 ) {\n\n\t\trgbScale = 255 / rgbScale;\n\n\t\tconst int = ( r * rgbScale ) << 16 ^\n\t\t\t( g * rgbScale ) << 8 ^\n\t\t\t( b * rgbScale ) << 0;\n\n\t\treturn INT.toHexString( int );\n\n\t}\n};\n\nconst OBJECT = {\n\tisPrimitive: false,\n\tmatch: v => Object( v ) === v,\n\tfromHexString( string, target, rgbScale = 1 ) {\n\n\t\tconst int = INT.fromHexString( string );\n\n\t\ttarget.r = ( int >> 16 & 255 ) / 255 * rgbScale;\n\t\ttarget.g = ( int >> 8 & 255 ) / 255 * rgbScale;\n\t\ttarget.b = ( int & 255 ) / 255 * rgbScale;\n\n\t},\n\ttoHexString( { r, g, b }, rgbScale = 1 ) {\n\n\t\trgbScale = 255 / rgbScale;\n\n\t\tconst int = ( r * rgbScale ) << 16 ^\n\t\t\t( g * rgbScale ) << 8 ^\n\t\t\t( b * rgbScale ) << 0;\n\n\t\treturn INT.toHexString( int );\n\n\t}\n};\n\nconst FORMATS = [ STRING, INT, ARRAY, OBJECT ];\n\nfunction getColorFormat( value ) {\n\treturn FORMATS.find( format => format.match( value ) );\n}\n\nclass ColorController extends Controller {\n\n\tconstructor( parent, object, property, rgbScale ) {\n\n\t\tsuper( parent, object, property, 'color' );\n\n\t\tthis.$input = document.createElement( 'input' );\n\t\tthis.$input.setAttribute( 'type', 'color' );\n\t\tthis.$input.setAttribute( 'tabindex', -1 );\n\t\tthis.$input.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$text = document.createElement( 'input' );\n\t\tthis.$text.setAttribute( 'type', 'text' );\n\t\tthis.$text.setAttribute( 'spellcheck', 'false' );\n\t\tthis.$text.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$display = document.createElement( 'div' );\n\t\tthis.$display.classList.add( 'display' );\n\n\t\tthis.$display.appendChild( this.$input );\n\t\tthis.$widget.appendChild( this.$display );\n\t\tthis.$widget.appendChild( this.$text );\n\n\t\tthis._format = getColorFormat( this.initialValue );\n\t\tthis._rgbScale = rgbScale;\n\n\t\tthis._initialValueHexString = this.save();\n\t\tthis._textFocused = false;\n\n\t\tthis.$input.addEventListener( 'input', () => {\n\t\t\tthis._setValueFromHexString( this.$input.value );\n\t\t} );\n\n\t\tthis.$input.addEventListener( 'blur', () => {\n\t\t\tthis._callOnFinishChange();\n\t\t} );\n\n\t\tthis.$text.addEventListener( 'input', () => {\n\t\t\tconst tryParse = normalizeColorString( this.$text.value );\n\t\t\tif ( tryParse ) {\n\t\t\t\tthis._setValueFromHexString( tryParse );\n\t\t\t}\n\t\t} );\n\n\t\tthis.$text.addEventListener( 'focus', () => {\n\t\t\tthis._textFocused = true;\n\t\t\tthis.$text.select();\n\t\t} );\n\n\t\tthis.$text.addEventListener( 'blur', () => {\n\t\t\tthis._textFocused = false;\n\t\t\tthis.updateDisplay();\n\t\t\tthis._callOnFinishChange();\n\t\t} );\n\n\t\tthis.$disable = this.$text;\n\n\t\tthis.updateDisplay();\n\n\t}\n\n\treset() {\n\t\tthis._setValueFromHexString( this._initialValueHexString );\n\t\treturn this;\n\t}\n\n\t_setValueFromHexString( value ) {\n\n\t\tif ( this._format.isPrimitive ) {\n\n\t\t\tconst newValue = this._format.fromHexString( value );\n\t\t\tthis.setValue( newValue );\n\n\t\t} else {\n\n\t\t\tthis._format.fromHexString( value, this.getValue(), this._rgbScale );\n\t\t\tthis._callOnChange();\n\t\t\tthis.updateDisplay();\n\n\t\t}\n\n\t}\n\n\tsave() {\n\t\treturn this._format.toHexString( this.getValue(), this._rgbScale );\n\t}\n\n\tload( value ) {\n\t\tthis._setValueFromHexString( value );\n\t\tthis._callOnFinishChange();\n\t\treturn this;\n\t}\n\n\tupdateDisplay() {\n\t\tthis.$input.value = this._format.toHexString( this.getValue(), this._rgbScale );\n\t\tif ( !this._textFocused ) {\n\t\t\tthis.$text.value = this.$input.value.substring( 1 );\n\t\t}\n\t\tthis.$display.style.backgroundColor = this.$input.value;\n\t\treturn this;\n\t}\n\n}\n\nclass FunctionController extends Controller {\n\n\tconstructor( parent, object, property ) {\n\n\t\tsuper( parent, object, property, 'function' );\n\n\t\t// Buttons are the only case where widget contains name\n\t\tthis.$button = document.createElement( 'button' );\n\t\tthis.$button.appendChild( this.$name );\n\t\tthis.$widget.appendChild( this.$button );\n\n\t\tthis.$button.addEventListener( 'click', e => {\n\t\t\te.preventDefault();\n\t\t\tthis.getValue().call( this.object );\n\t\t\tthis._callOnChange();\n\t\t} );\n\n\t\t// enables :active pseudo class on mobile\n\t\tthis.$button.addEventListener( 'touchstart', () => {}, { passive: true } );\n\n\t\tthis.$disable = this.$button;\n\n\t}\n\n}\n\nclass NumberController extends Controller {\n\n\tconstructor( parent, object, property, min, max, step ) {\n\n\t\tsuper( parent, object, property, 'number' );\n\n\t\tthis._initInput();\n\n\t\tthis.min( min );\n\t\tthis.max( max );\n\n\t\tconst stepExplicit = step !== undefined;\n\t\tthis.step( stepExplicit ? step : this._getImplicitStep(), stepExplicit );\n\n\t\tthis.updateDisplay();\n\n\t}\n\n\tdecimals( decimals ) {\n\t\tthis._decimals = decimals;\n\t\tthis.updateDisplay();\n\t\treturn this;\n\t}\n\n\tmin( min ) {\n\t\tthis._min = min;\n\t\tthis._onUpdateMinMax();\n\t\treturn this;\n\t}\n\n\tmax( max ) {\n\t\tthis._max = max;\n\t\tthis._onUpdateMinMax();\n\t\treturn this;\n\t}\n\n\tstep( step, explicit = true ) {\n\t\tthis._step = step;\n\t\tthis._stepExplicit = explicit;\n\t\treturn this;\n\t}\n\n\tupdateDisplay() {\n\n\t\tconst value = this.getValue();\n\n\t\tif ( this._hasSlider ) {\n\n\t\t\tlet percent = ( value - this._min ) / ( this._max - this._min );\n\t\t\tpercent = Math.max( 0, Math.min( percent, 1 ) );\n\n\t\t\tthis.$fill.style.width = percent * 100 + '%';\n\n\t\t}\n\n\t\tif ( !this._inputFocused ) {\n\t\t\tthis.$input.value = this._decimals === undefined ? value : value.toFixed( this._decimals );\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t_initInput() {\n\n\t\tthis.$input = document.createElement( 'input' );\n\t\tthis.$input.setAttribute( 'type', 'text' );\n\t\tthis.$input.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\t// On touch devices only, use input[type=number] to force a numeric keyboard.\n\t\t// Ideally we could use one input type everywhere, but [type=number] has quirks\n\t\t// on desktop, and [inputmode=decimal] has quirks on iOS.\n\t\t// See https://github.com/georgealways/lil-gui/pull/16\n\n\t\tconst isTouch = window.matchMedia( '(pointer: coarse)' ).matches;\n\n\t\tif ( isTouch ) {\n\t\t\tthis.$input.setAttribute( 'type', 'number' );\n\t\t\tthis.$input.setAttribute( 'step', 'any' );\n\t\t}\n\n\t\tthis.$widget.appendChild( this.$input );\n\n\t\tthis.$disable = this.$input;\n\n\t\tconst onInput = () => {\n\n\t\t\tlet value = parseFloat( this.$input.value );\n\n\t\t\tif ( isNaN( value ) ) return;\n\n\t\t\tif ( this._stepExplicit ) {\n\t\t\t\tvalue = this._snap( value );\n\t\t\t}\n\n\t\t\tthis.setValue( this._clamp( value ) );\n\n\t\t};\n\n\t\t// Keys & mouse wheel\n\t\t// ---------------------------------------------------------------------\n\n\t\tconst increment = delta => {\n\n\t\t\tconst value = parseFloat( this.$input.value );\n\n\t\t\tif ( isNaN( value ) ) return;\n\n\t\t\tthis._snapClampSetValue( value + delta );\n\n\t\t\t// Force the input to updateDisplay when it's focused\n\t\t\tthis.$input.value = this.getValue();\n\n\t\t};\n\n\t\tconst onKeyDown = e => {\n\t\t\t// Using `e.key` instead of `e.code` also catches NumpadEnter\n\t\t\tif ( e.key === 'Enter' ) {\n\t\t\t\tthis.$input.blur();\n\t\t\t}\n\t\t\tif ( e.code === 'ArrowUp' ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tincrement( this._step * this._arrowKeyMultiplier( e ) );\n\t\t\t}\n\t\t\tif ( e.code === 'ArrowDown' ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tincrement( this._step * this._arrowKeyMultiplier( e ) * -1 );\n\t\t\t}\n\t\t};\n\n\t\tconst onWheel = e => {\n\t\t\tif ( this._inputFocused ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tincrement( this._step * this._normalizeMouseWheel( e ) );\n\t\t\t}\n\t\t};\n\n\t\t// Vertical drag\n\t\t// ---------------------------------------------------------------------\n\n\t\tlet testingForVerticalDrag = false,\n\t\t\tinitClientX,\n\t\t\tinitClientY,\n\t\t\tprevClientY,\n\t\t\tinitValue,\n\t\t\tdragDelta;\n\n\t\t// Once the mouse is dragged more than DRAG_THRESH px on any axis, we decide\n\t\t// on the user's intent: horizontal means highlight, vertical means drag.\n\t\tconst DRAG_THRESH = 5;\n\n\t\tconst onMouseDown = e => {\n\n\t\t\tinitClientX = e.clientX;\n\t\t\tinitClientY = prevClientY = e.clientY;\n\t\t\ttestingForVerticalDrag = true;\n\n\t\t\tinitValue = this.getValue();\n\t\t\tdragDelta = 0;\n\n\t\t\twindow.addEventListener( 'mousemove', onMouseMove );\n\t\t\twindow.addEventListener( 'mouseup', onMouseUp );\n\n\t\t};\n\n\t\tconst onMouseMove = e => {\n\n\t\t\tif ( testingForVerticalDrag ) {\n\n\t\t\t\tconst dx = e.clientX - initClientX;\n\t\t\t\tconst dy = e.clientY - initClientY;\n\n\t\t\t\tif ( Math.abs( dy ) > DRAG_THRESH ) {\n\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.$input.blur();\n\t\t\t\t\ttestingForVerticalDrag = false;\n\t\t\t\t\tthis._setDraggingStyle( true, 'vertical' );\n\n\t\t\t\t} else if ( Math.abs( dx ) > DRAG_THRESH ) {\n\n\t\t\t\t\tonMouseUp();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// This isn't an else so that the first move counts towards dragDelta\n\t\t\tif ( !testingForVerticalDrag ) {\n\n\t\t\t\tconst dy = e.clientY - prevClientY;\n\n\t\t\t\tdragDelta -= dy * this._step * this._arrowKeyMultiplier( e );\n\n\t\t\t\t// Clamp dragDelta so we don't have 'dead space' after dragging past bounds.\n\t\t\t\t// We're okay with the fact that bounds can be undefined here.\n\t\t\t\tif ( initValue + dragDelta > this._max ) {\n\t\t\t\t\tdragDelta = this._max - initValue;\n\t\t\t\t} else if ( initValue + dragDelta < this._min ) {\n\t\t\t\t\tdragDelta = this._min - initValue;\n\t\t\t\t}\n\n\t\t\t\tthis._snapClampSetValue( initValue + dragDelta );\n\n\t\t\t}\n\n\t\t\tprevClientY = e.clientY;\n\n\t\t};\n\n\t\tconst onMouseUp = () => {\n\t\t\tthis._setDraggingStyle( false, 'vertical' );\n\t\t\tthis._callOnFinishChange();\n\t\t\twindow.removeEventListener( 'mousemove', onMouseMove );\n\t\t\twindow.removeEventListener( 'mouseup', onMouseUp );\n\t\t};\n\n\t\t// Focus state & onFinishChange\n\t\t// ---------------------------------------------------------------------\n\n\t\tconst onFocus = () => {\n\t\t\tthis._inputFocused = true;\n\t\t};\n\n\t\tconst onBlur = () => {\n\t\t\tthis._inputFocused = false;\n\t\t\tthis.updateDisplay();\n\t\t\tthis._callOnFinishChange();\n\t\t};\n\n\t\tthis.$input.addEventListener( 'input', onInput );\n\t\tthis.$input.addEventListener( 'keydown', onKeyDown );\n\t\tthis.$input.addEventListener( 'wheel', onWheel, { passive: false } );\n\t\tthis.$input.addEventListener( 'mousedown', onMouseDown );\n\t\tthis.$input.addEventListener( 'focus', onFocus );\n\t\tthis.$input.addEventListener( 'blur', onBlur );\n\n\t}\n\n\t_initSlider() {\n\n\t\tthis._hasSlider = true;\n\n\t\t// Build DOM\n\t\t// ---------------------------------------------------------------------\n\n\t\tthis.$slider = document.createElement( 'div' );\n\t\tthis.$slider.classList.add( 'slider' );\n\n\t\tthis.$fill = document.createElement( 'div' );\n\t\tthis.$fill.classList.add( 'fill' );\n\n\t\tthis.$slider.appendChild( this.$fill );\n\t\tthis.$widget.insertBefore( this.$slider, this.$input );\n\n\t\tthis.domElement.classList.add( 'hasSlider' );\n\n\t\t// Map clientX to value\n\t\t// ---------------------------------------------------------------------\n\n\t\tconst map = ( v, a, b, c, d ) => {\n\t\t\treturn ( v - a ) / ( b - a ) * ( d - c ) + c;\n\t\t};\n\n\t\tconst setValueFromX = clientX => {\n\t\t\tconst rect = this.$slider.getBoundingClientRect();\n\t\t\tlet value = map( clientX, rect.left, rect.right, this._min, this._max );\n\t\t\tthis._snapClampSetValue( value );\n\t\t};\n\n\t\t// Mouse drag\n\t\t// ---------------------------------------------------------------------\n\n\t\tconst mouseDown = e => {\n\t\t\tthis._setDraggingStyle( true );\n\t\t\tsetValueFromX( e.clientX );\n\t\t\twindow.addEventListener( 'mousemove', mouseMove );\n\t\t\twindow.addEventListener( 'mouseup', mouseUp );\n\t\t};\n\n\t\tconst mouseMove = e => {\n\t\t\tsetValueFromX( e.clientX );\n\t\t};\n\n\t\tconst mouseUp = () => {\n\t\t\tthis._callOnFinishChange();\n\t\t\tthis._setDraggingStyle( false );\n\t\t\twindow.removeEventListener( 'mousemove', mouseMove );\n\t\t\twindow.removeEventListener( 'mouseup', mouseUp );\n\t\t};\n\n\t\t// Touch drag\n\t\t// ---------------------------------------------------------------------\n\n\t\tlet testingForScroll = false, prevClientX, prevClientY;\n\n\t\tconst beginTouchDrag = e => {\n\t\t\te.preventDefault();\n\t\t\tthis._setDraggingStyle( true );\n\t\t\tsetValueFromX( e.touches[ 0 ].clientX );\n\t\t\ttestingForScroll = false;\n\t\t};\n\n\t\tconst onTouchStart = e => {\n\n\t\t\tif ( e.touches.length > 1 ) return;\n\n\t\t\t// If we're in a scrollable container, we should wait for the first\n\t\t\t// touchmove to see if the user is trying to slide or scroll.\n\t\t\tif ( this._hasScrollBar ) {\n\n\t\t\t\tprevClientX = e.touches[ 0 ].clientX;\n\t\t\t\tprevClientY = e.touches[ 0 ].clientY;\n\t\t\t\ttestingForScroll = true;\n\n\t\t\t} else {\n\n\t\t\t\t// Otherwise, we can set the value straight away on touchstart.\n\t\t\t\tbeginTouchDrag( e );\n\n\t\t\t}\n\n\t\t\twindow.addEventListener( 'touchmove', onTouchMove, { passive: false } );\n\t\t\twindow.addEventListener( 'touchend', onTouchEnd );\n\n\t\t};\n\n\t\tconst onTouchMove = e => {\n\n\t\t\tif ( testingForScroll ) {\n\n\t\t\t\tconst dx = e.touches[ 0 ].clientX - prevClientX;\n\t\t\t\tconst dy = e.touches[ 0 ].clientY - prevClientY;\n\n\t\t\t\tif ( Math.abs( dx ) > Math.abs( dy ) ) {\n\n\t\t\t\t\t// We moved horizontally, set the value and stop checking.\n\t\t\t\t\tbeginTouchDrag( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// This was, in fact, an attempt to scroll. Abort.\n\t\t\t\t\twindow.removeEventListener( 'touchmove', onTouchMove );\n\t\t\t\t\twindow.removeEventListener( 'touchend', onTouchEnd );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\te.preventDefault();\n\t\t\t\tsetValueFromX( e.touches[ 0 ].clientX );\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst onTouchEnd = () => {\n\t\t\tthis._callOnFinishChange();\n\t\t\tthis._setDraggingStyle( false );\n\t\t\twindow.removeEventListener( 'touchmove', onTouchMove );\n\t\t\twindow.removeEventListener( 'touchend', onTouchEnd );\n\t\t};\n\n\t\t// Mouse wheel\n\t\t// ---------------------------------------------------------------------\n\n\t\t// We have to use a debounced function to call onFinishChange because\n\t\t// there's no way to tell when the user is \"done\" mouse-wheeling.\n\t\tconst callOnFinishChange = this._callOnFinishChange.bind( this );\n\t\tconst WHEEL_DEBOUNCE_TIME = 400;\n\t\tlet wheelFinishChangeTimeout;\n\n\t\tconst onWheel = e => {\n\n\t\t\t// ignore vertical wheels if there's a scrollbar\n\t\t\tconst isVertical = Math.abs( e.deltaX ) < Math.abs( e.deltaY );\n\t\t\tif ( isVertical && this._hasScrollBar ) return;\n\n\t\t\te.preventDefault();\n\n\t\t\t// set value\n\t\t\tconst delta = this._normalizeMouseWheel( e ) * this._step;\n\t\t\tthis._snapClampSetValue( this.getValue() + delta );\n\n\t\t\t// force the input to updateDisplay when it's focused\n\t\t\tthis.$input.value = this.getValue();\n\n\t\t\t// debounce onFinishChange\n\t\t\tclearTimeout( wheelFinishChangeTimeout );\n\t\t\twheelFinishChangeTimeout = setTimeout( callOnFinishChange, WHEEL_DEBOUNCE_TIME );\n\n\t\t};\n\n\t\tthis.$slider.addEventListener( 'mousedown', mouseDown );\n\t\tthis.$slider.addEventListener( 'touchstart', onTouchStart, { passive: false } );\n\t\tthis.$slider.addEventListener( 'wheel', onWheel, { passive: false } );\n\n\t}\n\n\t_setDraggingStyle( active, axis = 'horizontal' ) {\n\t\tif ( this.$slider ) {\n\t\t\tthis.$slider.classList.toggle( 'active', active );\n\t\t}\n\t\tdocument.body.classList.toggle( 'lil-gui-dragging', active );\n\t\tdocument.body.classList.toggle( `lil-gui-${axis}`, active );\n\t}\n\n\t_getImplicitStep() {\n\n\t\tif ( this._hasMin && this._hasMax ) {\n\t\t\treturn ( this._max - this._min ) / 1000;\n\t\t}\n\n\t\treturn 0.1;\n\n\t}\n\n\t_onUpdateMinMax() {\n\n\t\tif ( !this._hasSlider && this._hasMin && this._hasMax ) {\n\n\t\t\t// If this is the first time we're hearing about min and max\n\t\t\t// and we haven't explicitly stated what our step is, let's\n\t\t\t// update that too.\n\t\t\tif ( !this._stepExplicit ) {\n\t\t\t\tthis.step( this._getImplicitStep(), false );\n\t\t\t}\n\n\t\t\tthis._initSlider();\n\t\t\tthis.updateDisplay();\n\n\t\t}\n\n\t}\n\n\t_normalizeMouseWheel( e ) {\n\n\t\tlet { deltaX, deltaY } = e;\n\n\t\t// Safari and Chrome report weird non-integral values for a notched wheel,\n\t\t// but still expose actual lines scrolled via wheelDelta. Notched wheels\n\t\t// should behave the same way as arrow keys.\n\t\tif ( Math.floor( e.deltaY ) !== e.deltaY && e.wheelDelta ) {\n\t\t\tdeltaX = 0;\n\t\t\tdeltaY = -e.wheelDelta / 120;\n\t\t\tdeltaY *= this._stepExplicit ? 1 : 10;\n\t\t}\n\n\t\tconst wheel = deltaX + -deltaY;\n\n\t\treturn wheel;\n\n\t}\n\n\t_arrowKeyMultiplier( e ) {\n\n\t\tlet mult = this._stepExplicit ? 1 : 10;\n\n\t\tif ( e.shiftKey ) {\n\t\t\tmult *= 10;\n\t\t} else if ( e.altKey ) {\n\t\t\tmult /= 10;\n\t\t}\n\n\t\treturn mult;\n\n\t}\n\n\t_snap( value ) {\n\n\t\t// This would be the logical way to do things, but floating point errors.\n\t\t// return Math.round( value / this._step ) * this._step;\n\n\t\t// Using inverse step solves a lot of them, but not all\n\t\t// const inverseStep = 1 / this._step;\n\t\t// return Math.round( value * inverseStep ) / inverseStep;\n\n\t\t// Not happy about this, but haven't seen it break.\n\t\tconst r = Math.round( value / this._step ) * this._step;\n\t\treturn parseFloat( r.toPrecision( 15 ) );\n\n\t}\n\n\t_clamp( value ) {\n\t\t// either condition is false if min or max is undefined\n\t\tif ( value < this._min ) value = this._min;\n\t\tif ( value > this._max ) value = this._max;\n\t\treturn value;\n\t}\n\n\t_snapClampSetValue( value ) {\n\t\tthis.setValue( this._clamp( this._snap( value ) ) );\n\t}\n\n\tget _hasScrollBar() {\n\t\tconst root = this.parent.root.$children;\n\t\treturn root.scrollHeight > root.clientHeight;\n\t}\n\n\tget _hasMin() {\n\t\treturn this._min !== undefined;\n\t}\n\n\tget _hasMax() {\n\t\treturn this._max !== undefined;\n\t}\n\n}\n\nclass OptionController extends Controller {\n\n\tconstructor( parent, object, property, options ) {\n\n\t\tsuper( parent, object, property, 'option' );\n\n\t\tthis.$select = document.createElement( 'select' );\n\t\tthis.$select.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$display = document.createElement( 'div' );\n\t\tthis.$display.classList.add( 'display' );\n\n\t\tthis.$select.addEventListener( 'change', () => {\n\t\t\tthis.setValue( this._values[ this.$select.selectedIndex ] );\n\t\t\tthis._callOnFinishChange();\n\t\t} );\n\n\t\tthis.$select.addEventListener( 'focus', () => {\n\t\t\tthis.$display.classList.add( 'focus' );\n\t\t} );\n\n\t\tthis.$select.addEventListener( 'blur', () => {\n\t\t\tthis.$display.classList.remove( 'focus' );\n\t\t} );\n\n\t\tthis.$widget.appendChild( this.$select );\n\t\tthis.$widget.appendChild( this.$display );\n\n\t\tthis.$disable = this.$select;\n\n\t\tthis.options( options );\n\n\t}\n\n\toptions( options ) {\n\n\t\tthis._values = Array.isArray( options ) ? options : Object.values( options );\n\t\tthis._names = Array.isArray( options ) ? options : Object.keys( options );\n\n\t\tthis.$select.replaceChildren();\n\n\t\tthis._names.forEach( name => {\n\t\t\tconst $option = document.createElement( 'option' );\n\t\t\t$option.textContent = name;\n\t\t\tthis.$select.appendChild( $option );\n\t\t} );\n\n\t\tthis.updateDisplay();\n\n\t\treturn this;\n\n\t}\n\n\tupdateDisplay() {\n\t\tconst value = this.getValue();\n\t\tconst index = this._values.indexOf( value );\n\t\tthis.$select.selectedIndex = index;\n\t\tthis.$display.textContent = index === -1 ? value : this._names[ index ];\n\t\treturn this;\n\t}\n\n}\n\nclass StringController extends Controller {\n\n\tconstructor( parent, object, property ) {\n\n\t\tsuper( parent, object, property, 'string' );\n\n\t\tthis.$input = document.createElement( 'input' );\n\t\tthis.$input.setAttribute( 'type', 'text' );\n\t\tthis.$input.setAttribute( 'spellcheck', 'false' );\n\t\tthis.$input.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$input.addEventListener( 'input', () => {\n\t\t\tthis.setValue( this.$input.value );\n\t\t} );\n\n\t\tthis.$input.addEventListener( 'keydown', e => {\n\t\t\tif ( e.code === 'Enter' ) {\n\t\t\t\tthis.$input.blur();\n\t\t\t}\n\t\t} );\n\n\t\tthis.$input.addEventListener( 'blur', () => {\n\t\t\tthis._callOnFinishChange();\n\t\t} );\n\n\t\tthis.$widget.appendChild( this.$input );\n\n\t\tthis.$disable = this.$input;\n\n\t\tthis.updateDisplay();\n\n\t}\n\n\tupdateDisplay() {\n\t\tthis.$input.value = this.getValue();\n\t\treturn this;\n\t}\n\n}\n\nconst stylesheet = `.lil-gui {\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n  line-height: 1;\n  font-weight: normal;\n  font-style: normal;\n  text-align: left;\n  color: var(--text-color);\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  --background-color: #1f1f1f;\n  --text-color: #ebebeb;\n  --title-background-color: #111111;\n  --title-text-color: #ebebeb;\n  --widget-color: #424242;\n  --hover-color: #4f4f4f;\n  --focus-color: #595959;\n  --number-color: #2cc9ff;\n  --string-color: #a2db3c;\n  --font-size: 11px;\n  --input-font-size: 11px;\n  --font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Arial, sans-serif;\n  --font-family-mono: Menlo, Monaco, Consolas, \"Droid Sans Mono\", monospace;\n  --padding: 4px;\n  --spacing: 4px;\n  --widget-height: 20px;\n  --title-height: calc(var(--widget-height) + var(--spacing) * 1.25);\n  --name-width: 45%;\n  --slider-knob-width: 2px;\n  --slider-input-width: 27%;\n  --color-input-width: 27%;\n  --slider-input-min-width: 45px;\n  --color-input-min-width: 45px;\n  --folder-indent: 7px;\n  --widget-padding: 0 0 0 3px;\n  --widget-border-radius: 2px;\n  --checkbox-size: calc(0.75 * var(--widget-height));\n  --scrollbar-width: 5px;\n}\n.lil-gui, .lil-gui * {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n.lil-gui.root {\n  width: var(--width, 245px);\n  display: flex;\n  flex-direction: column;\n  background: var(--background-color);\n}\n.lil-gui.root > .title {\n  background: var(--title-background-color);\n  color: var(--title-text-color);\n}\n.lil-gui.root > .children {\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n.lil-gui.root > .children::-webkit-scrollbar {\n  width: var(--scrollbar-width);\n  height: var(--scrollbar-width);\n  background: var(--background-color);\n}\n.lil-gui.root > .children::-webkit-scrollbar-thumb {\n  border-radius: var(--scrollbar-width);\n  background: var(--focus-color);\n}\n@media (pointer: coarse) {\n  .lil-gui.allow-touch-styles, .lil-gui.allow-touch-styles .lil-gui {\n    --widget-height: 28px;\n    --padding: 6px;\n    --spacing: 6px;\n    --font-size: 13px;\n    --input-font-size: 16px;\n    --folder-indent: 10px;\n    --scrollbar-width: 7px;\n    --slider-input-min-width: 50px;\n    --color-input-min-width: 65px;\n  }\n}\n.lil-gui.force-touch-styles, .lil-gui.force-touch-styles .lil-gui {\n  --widget-height: 28px;\n  --padding: 6px;\n  --spacing: 6px;\n  --font-size: 13px;\n  --input-font-size: 16px;\n  --folder-indent: 10px;\n  --scrollbar-width: 7px;\n  --slider-input-min-width: 50px;\n  --color-input-min-width: 65px;\n}\n.lil-gui.autoPlace {\n  max-height: 100%;\n  position: fixed;\n  top: 0;\n  right: 15px;\n  z-index: 1001;\n}\n\n.lil-gui .controller {\n  display: flex;\n  align-items: center;\n  padding: 0 var(--padding);\n  margin: var(--spacing) 0;\n}\n.lil-gui .controller.disabled {\n  opacity: 0.5;\n}\n.lil-gui .controller.disabled, .lil-gui .controller.disabled * {\n  pointer-events: none !important;\n}\n.lil-gui .controller > .name {\n  min-width: var(--name-width);\n  flex-shrink: 0;\n  white-space: pre;\n  padding-right: var(--spacing);\n  line-height: var(--widget-height);\n}\n.lil-gui .controller .widget {\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  min-height: var(--widget-height);\n}\n.lil-gui .controller.string input {\n  color: var(--string-color);\n}\n.lil-gui .controller.boolean {\n  cursor: pointer;\n}\n.lil-gui .controller.color .display {\n  width: 100%;\n  height: var(--widget-height);\n  border-radius: var(--widget-border-radius);\n  position: relative;\n}\n@media (hover: hover) {\n  .lil-gui .controller.color .display:hover:before {\n    content: \" \";\n    display: block;\n    position: absolute;\n    border-radius: var(--widget-border-radius);\n    border: 1px solid #fff9;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n  }\n}\n.lil-gui .controller.color input[type=color] {\n  opacity: 0;\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n}\n.lil-gui .controller.color input[type=text] {\n  margin-left: var(--spacing);\n  font-family: var(--font-family-mono);\n  min-width: var(--color-input-min-width);\n  width: var(--color-input-width);\n  flex-shrink: 0;\n}\n.lil-gui .controller.option select {\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  max-width: 100%;\n}\n.lil-gui .controller.option .display {\n  position: relative;\n  pointer-events: none;\n  border-radius: var(--widget-border-radius);\n  height: var(--widget-height);\n  line-height: var(--widget-height);\n  max-width: 100%;\n  overflow: hidden;\n  word-break: break-all;\n  padding-left: 0.55em;\n  padding-right: 1.75em;\n  background: var(--widget-color);\n}\n@media (hover: hover) {\n  .lil-gui .controller.option .display.focus {\n    background: var(--focus-color);\n  }\n}\n.lil-gui .controller.option .display.active {\n  background: var(--focus-color);\n}\n.lil-gui .controller.option .display:after {\n  font-family: \"lil-gui\";\n  content: \"↕\";\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  padding-right: 0.375em;\n}\n.lil-gui .controller.option .widget,\n.lil-gui .controller.option select {\n  cursor: pointer;\n}\n@media (hover: hover) {\n  .lil-gui .controller.option .widget:hover .display {\n    background: var(--hover-color);\n  }\n}\n.lil-gui .controller.number input {\n  color: var(--number-color);\n}\n.lil-gui .controller.number.hasSlider input {\n  margin-left: var(--spacing);\n  width: var(--slider-input-width);\n  min-width: var(--slider-input-min-width);\n  flex-shrink: 0;\n}\n.lil-gui .controller.number .slider {\n  width: 100%;\n  height: var(--widget-height);\n  background: var(--widget-color);\n  border-radius: var(--widget-border-radius);\n  padding-right: var(--slider-knob-width);\n  overflow: hidden;\n  cursor: ew-resize;\n  touch-action: pan-y;\n}\n@media (hover: hover) {\n  .lil-gui .controller.number .slider:hover {\n    background: var(--hover-color);\n  }\n}\n.lil-gui .controller.number .slider.active {\n  background: var(--focus-color);\n}\n.lil-gui .controller.number .slider.active .fill {\n  opacity: 0.95;\n}\n.lil-gui .controller.number .fill {\n  height: 100%;\n  border-right: var(--slider-knob-width) solid var(--number-color);\n  box-sizing: content-box;\n}\n\n.lil-gui-dragging .lil-gui {\n  --hover-color: var(--widget-color);\n}\n.lil-gui-dragging * {\n  cursor: ew-resize !important;\n}\n\n.lil-gui-dragging.lil-gui-vertical * {\n  cursor: ns-resize !important;\n}\n\n.lil-gui .title {\n  height: var(--title-height);\n  line-height: calc(var(--title-height) - 4px);\n  font-weight: 600;\n  padding: 0 var(--padding);\n  -webkit-tap-highlight-color: transparent;\n  cursor: pointer;\n  outline: none;\n  text-decoration-skip: objects;\n}\n.lil-gui .title:before {\n  font-family: \"lil-gui\";\n  content: \"▾\";\n  padding-right: 2px;\n  display: inline-block;\n}\n.lil-gui .title:active {\n  background: var(--title-background-color);\n  opacity: 0.75;\n}\n@media (hover: hover) {\n  body:not(.lil-gui-dragging) .lil-gui .title:hover {\n    background: var(--title-background-color);\n    opacity: 0.85;\n  }\n  .lil-gui .title:focus {\n    text-decoration: underline var(--focus-color);\n  }\n}\n.lil-gui.root > .title:focus {\n  text-decoration: none !important;\n}\n.lil-gui.closed > .title:before {\n  content: \"▸\";\n}\n.lil-gui.closed > .children {\n  transform: translateY(-7px);\n  opacity: 0;\n}\n.lil-gui.closed:not(.transition) > .children {\n  display: none;\n}\n.lil-gui.transition > .children {\n  transition-duration: 300ms;\n  transition-property: height, opacity, transform;\n  transition-timing-function: cubic-bezier(0.2, 0.6, 0.35, 1);\n  overflow: hidden;\n  pointer-events: none;\n}\n.lil-gui .children:empty:before {\n  content: \"Empty\";\n  padding: 0 var(--padding);\n  margin: var(--spacing) 0;\n  display: block;\n  height: var(--widget-height);\n  font-style: italic;\n  line-height: var(--widget-height);\n  opacity: 0.5;\n}\n.lil-gui.root > .children > .lil-gui > .title {\n  border: 0 solid var(--widget-color);\n  border-width: 1px 0;\n  transition: border-color 300ms;\n}\n.lil-gui.root > .children > .lil-gui.closed > .title {\n  border-bottom-color: transparent;\n}\n.lil-gui + .controller {\n  border-top: 1px solid var(--widget-color);\n  margin-top: 0;\n  padding-top: var(--spacing);\n}\n.lil-gui .lil-gui .lil-gui > .title {\n  border: none;\n}\n.lil-gui .lil-gui .lil-gui > .children {\n  border: none;\n  margin-left: var(--folder-indent);\n  border-left: 2px solid var(--widget-color);\n}\n.lil-gui .lil-gui .controller {\n  border: none;\n}\n\n.lil-gui label, .lil-gui input, .lil-gui button {\n  -webkit-tap-highlight-color: transparent;\n}\n.lil-gui input {\n  border: 0;\n  outline: none;\n  font-family: var(--font-family);\n  font-size: var(--input-font-size);\n  border-radius: var(--widget-border-radius);\n  height: var(--widget-height);\n  background: var(--widget-color);\n  color: var(--text-color);\n  width: 100%;\n}\n@media (hover: hover) {\n  .lil-gui input:hover {\n    background: var(--hover-color);\n  }\n  .lil-gui input:active {\n    background: var(--focus-color);\n  }\n}\n.lil-gui input:disabled {\n  opacity: 1;\n}\n.lil-gui input[type=text],\n.lil-gui input[type=number] {\n  padding: var(--widget-padding);\n  -moz-appearance: textfield;\n}\n.lil-gui input[type=text]:focus,\n.lil-gui input[type=number]:focus {\n  background: var(--focus-color);\n}\n.lil-gui input[type=checkbox] {\n  appearance: none;\n  width: var(--checkbox-size);\n  height: var(--checkbox-size);\n  border-radius: var(--widget-border-radius);\n  text-align: center;\n  cursor: pointer;\n}\n.lil-gui input[type=checkbox]:checked:before {\n  font-family: \"lil-gui\";\n  content: \"✓\";\n  font-size: var(--checkbox-size);\n  line-height: var(--checkbox-size);\n}\n@media (hover: hover) {\n  .lil-gui input[type=checkbox]:focus {\n    box-shadow: inset 0 0 0 1px var(--focus-color);\n  }\n}\n.lil-gui button {\n  outline: none;\n  cursor: pointer;\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n  color: var(--text-color);\n  width: 100%;\n  height: var(--widget-height);\n  text-transform: none;\n  background: var(--widget-color);\n  border-radius: var(--widget-border-radius);\n  border: none;\n}\n@media (hover: hover) {\n  .lil-gui button:hover {\n    background: var(--hover-color);\n  }\n  .lil-gui button:focus {\n    box-shadow: inset 0 0 0 1px var(--focus-color);\n  }\n}\n.lil-gui button:active {\n  background: var(--focus-color);\n}\n\n@font-face {\n  font-family: \"lil-gui\";\n  src: url(\"data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAUsAAsAAAAACJwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAAH4AAADAImwmYE9TLzIAAAGIAAAAPwAAAGBKqH5SY21hcAAAAcgAAAD0AAACrukyyJBnbHlmAAACvAAAAF8AAACEIZpWH2hlYWQAAAMcAAAAJwAAADZfcj2zaGhlYQAAA0QAAAAYAAAAJAC5AHhobXR4AAADXAAAABAAAABMAZAAAGxvY2EAAANsAAAAFAAAACgCEgIybWF4cAAAA4AAAAAeAAAAIAEfABJuYW1lAAADoAAAASIAAAIK9SUU/XBvc3QAAATEAAAAZgAAAJCTcMc2eJxVjbEOgjAURU+hFRBK1dGRL+ALnAiToyMLEzFpnPz/eAshwSa97517c/MwwJmeB9kwPl+0cf5+uGPZXsqPu4nvZabcSZldZ6kfyWnomFY/eScKqZNWupKJO6kXN3K9uCVoL7iInPr1X5baXs3tjuMqCtzEuagm/AAlzQgPAAB4nGNgYRBlnMDAysDAYM/gBiT5oLQBAwuDJAMDEwMrMwNWEJDmmsJwgCFeXZghBcjlZMgFCzOiKOIFAB71Bb8AeJy1kjFuwkAQRZ+DwRAwBtNQRUGKQ8OdKCAWUhAgKLhIuAsVSpWz5Bbkj3dEgYiUIszqWdpZe+Z7/wB1oCYmIoboiwiLT2WjKl/jscrHfGg/pKdMkyklC5Zs2LEfHYpjcRoPzme9MWWmk3dWbK9ObkWkikOetJ554fWyoEsmdSlt+uR0pCJR34b6t/TVg1SY3sYvdf8vuiKrpyaDXDISiegp17p7579Gp3p++y7HPAiY9pmTibljrr85qSidtlg4+l25GLCaS8e6rRxNBmsnERunKbaOObRz7N72ju5vdAjYpBXHgJylOAVsMseDAPEP8LYoUHicY2BiAAEfhiAGJgZWBgZ7RnFRdnVJELCQlBSRlATJMoLV2DK4glSYs6ubq5vbKrJLSbGrgEmovDuDJVhe3VzcXFwNLCOILB/C4IuQ1xTn5FPilBTj5FPmBAB4WwoqAHicY2BkYGAA4sk1sR/j+W2+MnAzpDBgAyEMQUCSg4EJxAEAwUgFHgB4nGNgZGBgSGFggJMhDIwMqEAYAByHATJ4nGNgAIIUNEwmAABl3AGReJxjYAACIQYlBiMGJ3wQAEcQBEV4nGNgZGBgEGZgY2BiAAEQyQWEDAz/wXwGAAsPATIAAHicXdBNSsNAHAXwl35iA0UQXYnMShfS9GPZA7T7LgIu03SSpkwzYTIt1BN4Ak/gKTyAeCxfw39jZkjymzcvAwmAW/wgwHUEGDb36+jQQ3GXGot79L24jxCP4gHzF/EIr4jEIe7wxhOC3g2TMYy4Q7+Lu/SHuEd/ivt4wJd4wPxbPEKMX3GI5+DJFGaSn4qNzk8mcbKSR6xdXdhSzaOZJGtdapd4vVPbi6rP+cL7TGXOHtXKll4bY1Xl7EGnPtp7Xy2n00zyKLVHfkHBa4IcJ2oD3cgggWvt/V/FbDrUlEUJhTn/0azVWbNTNr0Ens8de1tceK9xZmfB1CPjOmPH4kitmvOubcNpmVTN3oFJyjzCvnmrwhJTzqzVj9jiSX911FjeAAB4nG3HMRKCMBBA0f0giiKi4DU8k0V2GWbIZDOh4PoWWvq6J5V8If9NVNQcaDhyouXMhY4rPTcG7jwYmXhKq8Wz+p762aNaeYXom2n3m2dLTVgsrCgFJ7OTmIkYbwIbC6vIB7WmFfAAAA==\") format(\"woff\");\n}`;\n\nfunction _injectStyles( cssContent ) {\n\tconst injected = document.createElement( 'style' );\n\tinjected.innerHTML = cssContent;\n\tconst before = document.querySelector( 'head link[rel=stylesheet], head style' );\n\tif ( before ) {\n\t\tdocument.head.insertBefore( injected, before );\n\t} else {\n\t\tdocument.head.appendChild( injected );\n\t}\n}\n\nlet stylesInjected = false;\n\nclass GUI {\n\n\t/**\n\t * Creates a panel that holds controllers.\n\t * @example\n\t * new GUI();\n\t * new GUI( { container: document.getElementById( 'custom' ) } );\n\t *\n\t * @param {object} [options]\n\t * @param {boolean} [options.autoPlace=true]\n\t * Adds the GUI to `document.body` and fixes it to the top right of the page.\n\t *\n\t * @param {HTMLElement} [options.container]\n\t * Adds the GUI to this DOM element. Overrides `autoPlace`.\n\t *\n\t * @param {number} [options.width=245]\n\t * Width of the GUI in pixels, usually set when name labels become too long. Note that you can make\n\t * name labels wider in CSS with `.lil‑gui { ‑‑name‑width: 55% }`.\n\t *\n\t * @param {string} [options.title=Controls]\n\t * Name to display in the title bar.\n\t *\n\t * @param {boolean} [options.closeFolders=false]\n\t * Pass `true` to close all folders in this GUI by default.\n\t *\n\t * @param {boolean} [options.injectStyles=true]\n\t * Injects the default stylesheet into the page if this is the first GUI.\n\t * Pass `false` to use your own stylesheet.\n\t *\n\t * @param {number} [options.touchStyles=true]\n\t * Makes controllers larger on touch devices. Pass `false` to disable touch styles.\n\t *\n\t * @param {GUI} [options.parent]\n\t * Adds this GUI as a child in another GUI. Usually this is done for you by `addFolder()`.\n\t *\n\t */\n\tconstructor( {\n\t\tparent,\n\t\tautoPlace = parent === undefined,\n\t\tcontainer,\n\t\twidth,\n\t\ttitle = 'Controls',\n\t\tcloseFolders = false,\n\t\tinjectStyles = true,\n\t\ttouchStyles = true\n\t} = {} ) {\n\n\t\t/**\n\t\t * The GUI containing this folder, or `undefined` if this is the root GUI.\n\t\t * @type {GUI}\n\t\t */\n\t\tthis.parent = parent;\n\n\t\t/**\n\t\t * The top level GUI containing this folder, or `this` if this is the root GUI.\n\t\t * @type {GUI}\n\t\t */\n\t\tthis.root = parent ? parent.root : this;\n\n\t\t/**\n\t\t * The list of controllers and folders contained by this GUI.\n\t\t * @type {Array<GUI|Controller>}\n\t\t */\n\t\tthis.children = [];\n\n\t\t/**\n\t\t * The list of controllers contained by this GUI.\n\t\t * @type {Array<Controller>}\n\t\t */\n\t\tthis.controllers = [];\n\n\t\t/**\n\t\t * The list of folders contained by this GUI.\n\t\t * @type {Array<GUI>}\n\t\t */\n\t\tthis.folders = [];\n\n\t\t/**\n\t\t * Used to determine if the GUI is closed. Use `gui.open()` or `gui.close()` to change this.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._closed = false;\n\n\t\t/**\n\t\t * Used to determine if the GUI is hidden. Use `gui.show()` or `gui.hide()` to change this.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._hidden = false;\n\n\t\t/**\n\t\t * The outermost container element.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.domElement = document.createElement( 'div' );\n\t\tthis.domElement.classList.add( 'lil-gui' );\n\n\t\t/**\n\t\t * The DOM element that contains the title.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.$title = document.createElement( 'div' );\n\t\tthis.$title.classList.add( 'title' );\n\t\tthis.$title.setAttribute( 'role', 'button' );\n\t\tthis.$title.setAttribute( 'aria-expanded', true );\n\t\tthis.$title.setAttribute( 'tabindex', 0 );\n\n\t\tthis.$title.addEventListener( 'click', () => this.openAnimated( this._closed ) );\n\t\tthis.$title.addEventListener( 'keydown', e => {\n\t\t\tif ( e.code === 'Enter' || e.code === 'Space' ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.$title.click();\n\t\t\t}\n\t\t} );\n\n\t\t// enables :active pseudo class on mobile\n\t\tthis.$title.addEventListener( 'touchstart', () => {}, { passive: true } );\n\n\t\t/**\n\t\t * The DOM element that contains children.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.$children = document.createElement( 'div' );\n\t\tthis.$children.classList.add( 'children' );\n\n\t\tthis.domElement.appendChild( this.$title );\n\t\tthis.domElement.appendChild( this.$children );\n\n\t\tthis.title( title );\n\n\t\tif ( this.parent ) {\n\n\t\t\tthis.parent.children.push( this );\n\t\t\tthis.parent.folders.push( this );\n\n\t\t\tthis.parent.$children.appendChild( this.domElement );\n\n\t\t\t// Stop the constructor early, everything onward only applies to root GUI's\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.domElement.classList.add( 'root' );\n\n\t\tif ( touchStyles ) {\n\t\t\tthis.domElement.classList.add( 'allow-touch-styles' );\n\t\t}\n\n\t\t// Inject stylesheet if we haven't done that yet\n\t\tif ( !stylesInjected && injectStyles ) {\n\t\t\t_injectStyles( stylesheet );\n\t\t\tstylesInjected = true;\n\t\t}\n\n\t\tif ( container ) {\n\n\t\t\tcontainer.appendChild( this.domElement );\n\n\t\t} else if ( autoPlace ) {\n\n\t\t\tthis.domElement.classList.add( 'autoPlace' );\n\t\t\tdocument.body.appendChild( this.domElement );\n\n\t\t}\n\n\t\tif ( width ) {\n\t\t\tthis.domElement.style.setProperty( '--width', width + 'px' );\n\t\t}\n\n\t\tthis._closeFolders = closeFolders;\n\n\t}\n\n\t/**\n\t * Adds a controller to the GUI, inferring controller type using the `typeof` operator.\n\t * @example\n\t * gui.add( object, 'property' );\n\t * gui.add( object, 'number', 0, 100, 1 );\n\t * gui.add( object, 'options', [ 1, 2, 3 ] );\n\t *\n\t * @param {object} object The object the controller will modify.\n\t * @param {string} property Name of the property to control.\n\t * @param {number|object|Array} [$1] Minimum value for number controllers, or the set of\n\t * selectable values for a dropdown.\n\t * @param {number} [max] Maximum value for number controllers.\n\t * @param {number} [step] Step value for number controllers.\n\t * @returns {Controller}\n\t */\n\tadd( object, property, $1, max, step ) {\n\n\t\tif ( Object( $1 ) === $1 ) {\n\n\t\t\treturn new OptionController( this, object, property, $1 );\n\n\t\t}\n\n\t\tconst initialValue = object[ property ];\n\n\t\tswitch ( typeof initialValue ) {\n\n\t\t\tcase 'number':\n\n\t\t\t\treturn new NumberController( this, object, property, $1, max, step );\n\n\t\t\tcase 'boolean':\n\n\t\t\t\treturn new BooleanController( this, object, property );\n\n\t\t\tcase 'string':\n\n\t\t\t\treturn new StringController( this, object, property );\n\n\t\t\tcase 'function':\n\n\t\t\t\treturn new FunctionController( this, object, property );\n\n\t\t}\n\n\t\tconsole.error( `gui.add failed\n\tproperty:`, property, `\n\tobject:`, object, `\n\tvalue:`, initialValue );\n\n\t}\n\n\t/**\n\t * Adds a color controller to the GUI.\n\t * @example\n\t * params = {\n\t * \tcssColor: '#ff00ff',\n\t * \trgbColor: { r: 0, g: 0.2, b: 0.4 },\n\t * \tcustomRange: [ 0, 127, 255 ],\n\t * };\n\t *\n\t * gui.addColor( params, 'cssColor' );\n\t * gui.addColor( params, 'rgbColor' );\n\t * gui.addColor( params, 'customRange', 255 );\n\t *\n\t * @param {object} object The object the controller will modify.\n\t * @param {string} property Name of the property to control.\n\t * @param {number} rgbScale Maximum value for a color channel when using an RGB color. You may\n\t * need to set this to 255 if your colors are too bright.\n\t * @returns {Controller}\n\t */\n\taddColor( object, property, rgbScale = 1 ) {\n\t\treturn new ColorController( this, object, property, rgbScale );\n\t}\n\n\t/**\n\t * Adds a folder to the GUI, which is just another GUI. This method returns\n\t * the nested GUI so you can add controllers to it.\n\t * @example\n\t * const folder = gui.addFolder( 'Position' );\n\t * folder.add( position, 'x' );\n\t * folder.add( position, 'y' );\n\t * folder.add( position, 'z' );\n\t *\n\t * @param {string} title Name to display in the folder's title bar.\n\t * @returns {GUI}\n\t */\n\taddFolder( title ) {\n\t\tconst folder = new GUI( { parent: this, title } );\n\t\tif ( this.root._closeFolders ) folder.close();\n\t\treturn folder;\n\t}\n\n\t/**\n\t * Recalls values that were saved with `gui.save()`.\n\t * @param {object} obj\n\t * @param {boolean} recursive Pass false to exclude folders descending from this GUI.\n\t * @returns {this}\n\t */\n\tload( obj, recursive = true ) {\n\n\t\tif ( obj.controllers ) {\n\n\t\t\tthis.controllers.forEach( c => {\n\n\t\t\t\tif ( c instanceof FunctionController ) return;\n\n\t\t\t\tif ( c._name in obj.controllers ) {\n\t\t\t\t\tc.load( obj.controllers[ c._name ] );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( recursive && obj.folders ) {\n\n\t\t\tthis.folders.forEach( f => {\n\n\t\t\t\tif ( f._title in obj.folders ) {\n\t\t\t\t\tf.load( obj.folders[ f._title ] );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Returns an object mapping controller names to values. The object can be passed to `gui.load()` to\n\t * recall these values.\n\t * @example\n\t * {\n\t * \tcontrollers: {\n\t * \t\tprop1: 1,\n\t * \t\tprop2: 'value',\n\t * \t\t...\n\t * \t},\n\t * \tfolders: {\n\t * \t\tfolderName1: { controllers, folders },\n\t * \t\tfolderName2: { controllers, folders }\n\t * \t\t...\n\t * \t}\n\t * }\n\t *\n\t * @param {boolean} recursive Pass false to exclude folders descending from this GUI.\n\t * @returns {object}\n\t */\n\tsave( recursive = true ) {\n\n\t\tconst obj = {\n\t\t\tcontrollers: {},\n\t\t\tfolders: {}\n\t\t};\n\n\t\tthis.controllers.forEach( c => {\n\n\t\t\tif ( c instanceof FunctionController ) return;\n\n\t\t\tif ( c._name in obj.controllers ) {\n\t\t\t\tthrow new Error( `Cannot save GUI with duplicate property \"${c._name}\"` );\n\t\t\t}\n\n\t\t\tobj.controllers[ c._name ] = c.save();\n\n\t\t} );\n\n\t\tif ( recursive ) {\n\n\t\t\tthis.folders.forEach( f => {\n\n\t\t\t\tif ( f._title in obj.folders ) {\n\t\t\t\t\tthrow new Error( `Cannot save GUI with duplicate folder \"${f._title}\"` );\n\t\t\t\t}\n\n\t\t\t\tobj.folders[ f._title ] = f.save();\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn obj;\n\n\t}\n\n\t/**\n\t * Opens a GUI or folder. GUI and folders are open by default.\n\t * @param {boolean} open Pass false to close.\n\t * @returns {this}\n\t * @example\n\t * gui.open(); // open\n\t * gui.open( false ); // close\n\t * gui.open( gui._closed ); // toggle\n\t */\n\topen( open = true ) {\n\n\t\tthis._setClosed( !open );\n\n\t\tthis.$title.setAttribute( 'aria-expanded', !this._closed );\n\t\tthis.domElement.classList.toggle( 'closed', this._closed );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Closes the GUI.\n\t * @returns {this}\n\t */\n\tclose() {\n\t\treturn this.open( false );\n\t}\n\n\t_setClosed( closed ) {\n\t\tif ( this._closed === closed ) return;\n\t\tthis._closed = closed;\n\t\tthis._callOnOpenClose( this );\n\t}\n\n\t/**\n\t * Shows the GUI after it's been hidden.\n\t * @param {boolean} show\n\t * @returns {this}\n\t * @example\n\t * gui.show();\n\t * gui.show( false ); // hide\n\t * gui.show( gui._hidden ); // toggle\n\t */\n\tshow( show = true ) {\n\n\t\tthis._hidden = !show;\n\n\t\tthis.domElement.style.display = this._hidden ? 'none' : '';\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Hides the GUI.\n\t * @returns {this}\n\t */\n\thide() {\n\t\treturn this.show( false );\n\t}\n\n\topenAnimated( open = true ) {\n\n\t\t// set state immediately\n\t\tthis._setClosed( !open );\n\n\t\tthis.$title.setAttribute( 'aria-expanded', !this._closed );\n\n\t\t// wait for next frame to measure $children\n\t\trequestAnimationFrame( () => {\n\n\t\t\t// explicitly set initial height for transition\n\t\t\tconst initialHeight = this.$children.clientHeight;\n\t\t\tthis.$children.style.height = initialHeight + 'px';\n\n\t\t\tthis.domElement.classList.add( 'transition' );\n\n\t\t\tconst onTransitionEnd = e => {\n\t\t\t\tif ( e.target !== this.$children ) return;\n\t\t\t\tthis.$children.style.height = '';\n\t\t\t\tthis.domElement.classList.remove( 'transition' );\n\t\t\t\tthis.$children.removeEventListener( 'transitionend', onTransitionEnd );\n\t\t\t};\n\n\t\t\tthis.$children.addEventListener( 'transitionend', onTransitionEnd );\n\n\t\t\t// todo: this is wrong if children's scrollHeight makes for a gui taller than maxHeight\n\t\t\tconst targetHeight = !open ? 0 : this.$children.scrollHeight;\n\n\t\t\tthis.domElement.classList.toggle( 'closed', !open );\n\n\t\t\trequestAnimationFrame( () => {\n\t\t\t\tthis.$children.style.height = targetHeight + 'px';\n\t\t\t} );\n\n\t\t} );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Change the title of this GUI.\n\t * @param {string} title\n\t * @returns {this}\n\t */\n\ttitle( title ) {\n\t\t/**\n\t\t * Current title of the GUI. Use `gui.title( 'Title' )` to modify this value.\n\t\t * @type {string}\n\t\t */\n\t\tthis._title = title;\n\t\tthis.$title.textContent = title;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Resets all controllers to their initial values.\n\t * @param {boolean} recursive Pass false to exclude folders descending from this GUI.\n\t * @returns {this}\n\t */\n\treset( recursive = true ) {\n\t\tconst controllers = recursive ? this.controllersRecursive() : this.controllers;\n\t\tcontrollers.forEach( c => c.reset() );\n\t\treturn this;\n\t}\n\n\t/**\n\t * Pass a function to be called whenever a controller in this GUI changes.\n\t * @param {function({object:object, property:string, value:any, controller:Controller})} callback\n\t * @returns {this}\n\t * @example\n\t * gui.onChange( event => {\n\t * \tevent.object     // object that was modified\n\t * \tevent.property   // string, name of property\n\t * \tevent.value      // new value of controller\n\t * \tevent.controller // controller that was modified\n\t * } );\n\t */\n\tonChange( callback ) {\n\t\t/**\n\t\t * Used to access the function bound to `onChange` events. Don't modify this value\n\t\t * directly. Use the `gui.onChange( callback )` method instead.\n\t\t * @type {Function}\n\t\t */\n\t\tthis._onChange = callback;\n\t\treturn this;\n\t}\n\n\t_callOnChange( controller ) {\n\n\t\tif ( this.parent ) {\n\t\t\tthis.parent._callOnChange( controller );\n\t\t}\n\n\t\tif ( this._onChange !== undefined ) {\n\t\t\tthis._onChange.call( this, {\n\t\t\t\tobject: controller.object,\n\t\t\t\tproperty: controller.property,\n\t\t\t\tvalue: controller.getValue(),\n\t\t\t\tcontroller\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Pass a function to be called whenever a controller in this GUI has finished changing.\n\t * @param {function({object:object, property:string, value:any, controller:Controller})} callback\n\t * @returns {this}\n\t * @example\n\t * gui.onFinishChange( event => {\n\t * \tevent.object     // object that was modified\n\t * \tevent.property   // string, name of property\n\t * \tevent.value      // new value of controller\n\t * \tevent.controller // controller that was modified\n\t * } );\n\t */\n\tonFinishChange( callback ) {\n\t\t/**\n\t\t * Used to access the function bound to `onFinishChange` events. Don't modify this value\n\t\t * directly. Use the `gui.onFinishChange( callback )` method instead.\n\t\t * @type {Function}\n\t\t */\n\t\tthis._onFinishChange = callback;\n\t\treturn this;\n\t}\n\n\t_callOnFinishChange( controller ) {\n\n\t\tif ( this.parent ) {\n\t\t\tthis.parent._callOnFinishChange( controller );\n\t\t}\n\n\t\tif ( this._onFinishChange !== undefined ) {\n\t\t\tthis._onFinishChange.call( this, {\n\t\t\t\tobject: controller.object,\n\t\t\t\tproperty: controller.property,\n\t\t\t\tvalue: controller.getValue(),\n\t\t\t\tcontroller\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Pass a function to be called when this GUI or its descendants are opened or closed.\n\t * @param {function(GUI)} callback\n\t * @returns {this}\n\t * @example\n\t * gui.onOpenClose( changedGUI => {\n\t * \tconsole.log( changedGUI._closed );\n\t * } );\n\t */\n\tonOpenClose( callback ) {\n\t\tthis._onOpenClose = callback;\n\t\treturn this;\n\t}\n\n\t_callOnOpenClose( changedGUI ) {\n\t\tif ( this.parent ) {\n\t\t\tthis.parent._callOnOpenClose( changedGUI );\n\t\t}\n\n\t\tif ( this._onOpenClose !== undefined ) {\n\t\t\tthis._onOpenClose.call( this, changedGUI );\n\t\t}\n\t}\n\n\t/**\n\t * Destroys all DOM elements and event listeners associated with this GUI.\n\t */\n\tdestroy() {\n\n\t\tif ( this.parent ) {\n\t\t\tthis.parent.children.splice( this.parent.children.indexOf( this ), 1 );\n\t\t\tthis.parent.folders.splice( this.parent.folders.indexOf( this ), 1 );\n\t\t}\n\n\t\tif ( this.domElement.parentElement ) {\n\t\t\tthis.domElement.parentElement.removeChild( this.domElement );\n\t\t}\n\n\t\tArray.from( this.children ).forEach( c => c.destroy() );\n\n\t}\n\n\t/**\n\t * Returns an array of controllers contained by this GUI and its descendents.\n\t * @returns {Controller[]}\n\t */\n\tcontrollersRecursive() {\n\t\tlet controllers = Array.from( this.controllers );\n\t\tthis.folders.forEach( f => {\n\t\t\tcontrollers = controllers.concat( f.controllersRecursive() );\n\t\t} );\n\t\treturn controllers;\n\t}\n\n\t/**\n\t * Returns an array of folders contained by this GUI and its descendents.\n\t * @returns {GUI[]}\n\t */\n\tfoldersRecursive() {\n\t\tlet folders = Array.from( this.folders );\n\t\tthis.folders.forEach( f => {\n\t\t\tfolders = folders.concat( f.foldersRecursive() );\n\t\t} );\n\t\treturn folders;\n\t}\n\n}\n\nexport default GUI;\nexport { BooleanController, ColorController, Controller, FunctionController, GUI, NumberController, OptionController, StringController };\n"],"names":["Controller","constructor","parent","object","property","className","elementType","this","_disabled","_hidden","initialValue","getValue","domElement","document","createElement","classList","add","$name","nextNameID","id","$widget","$disable","appendChild","addEventListener","e","stopPropagation","children","push","controllers","$children","_listenCallback","bind","name","_name","textContent","onChange","callback","_onChange","_callOnChange","undefined","call","_changed","onFinishChange","_onFinishChange","_callOnFinishChange","reset","setValue","enable","enabled","disable","disabled","toggle","toggleAttribute","show","style","display","hide","options","controller","destroy","min","max","step","decimals","listen","_listening","_listenCallbackID","cancelAnimationFrame","requestAnimationFrame","curValue","save","_listenPrevValue","updateDisplay","value","load","splice","indexOf","removeChild","BooleanController","super","$input","setAttribute","checked","normalizeColorString","string","match","result","parseInt","toString","padStart","INT","isPrimitive","v","fromHexString","substring","toHexString","ARRAY","Array","isArray","target","rgbScale","int","r","g","b","OBJECT","Object","FORMATS","ColorController","$text","$display","_format","find","format","_rgbScale","_initialValueHexString","_textFocused","_setValueFromHexString","tryParse","select","newValue","backgroundColor","FunctionController","$button","preventDefault","passive","NumberController","_initInput","stepExplicit","_getImplicitStep","_decimals","_min","_onUpdateMinMax","_max","explicit","_step","_stepExplicit","_hasSlider","percent","Math","$fill","width","_inputFocused","toFixed","window","matchMedia","matches","increment","delta","parseFloat","isNaN","_snapClampSetValue","initClientX","initClientY","prevClientY","initValue","dragDelta","testingForVerticalDrag","onMouseMove","dx","clientX","dy","clientY","abs","blur","_setDraggingStyle","onMouseUp","_arrowKeyMultiplier","removeEventListener","_snap","_clamp","key","code","_normalizeMouseWheel","_initSlider","$slider","insertBefore","setValueFromX","rect","getBoundingClientRect","a","left","right","c","d","mouseMove","mouseUp","prevClientX","testingForScroll","beginTouchDrag","touches","onTouchMove","onTouchEnd","callOnFinishChange","wheelFinishChangeTimeout","length","_hasScrollBar","deltaX","deltaY","clearTimeout","setTimeout","active","axis","body","_hasMin","_hasMax","floor","wheelDelta","mult","shiftKey","altKey","round","toPrecision","root","scrollHeight","clientHeight","OptionController","$select","_values","selectedIndex","remove","values","_names","keys","replaceChildren","forEach","$option","index","StringController","stylesInjected","GUI","autoPlace","container","title","closeFolders","injectStyles","touchStyles","folders","_closed","$title","openAnimated","click","cssContent","injected","innerHTML","before","querySelector","head","_injectStyles","setProperty","_closeFolders","$1","console","error","addColor","addFolder","folder","close","obj","recursive","f","_title","Error","open","_setClosed","closed","_callOnOpenClose","initialHeight","height","onTransitionEnd","targetHeight","controllersRecursive","onOpenClose","_onOpenClose","changedGUI","parentElement","from","concat","foldersRecursive"],"mappings":"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","x_google_ignoreList":[0]}